{"version":3,"sources":["../../../lib/queue.js","../../../lib/speak.js","../../../../jaxcore-client/lib/spin/transports/browser.js","../../../lib/profiles.js","../../../../jaxcore-client/lib/spin/spin.js","../../../../jaxcore-client/lib/logger.js","../../../../jaxcore-client/lib/Store.js","../../../../jaxcore-client/lib/Color.js","SpeakApp.js","../../../../jaxcore-client/lib/CollectionModel.js","../../../../jaxcore-client/lib/Listen.js","../../../../jaxcore-client/lib/State.js","../../../../jaxcore-client/lib/Sound.js","../../../../jaxcore-client/lib/MonauralScope.js","../../../../jaxcore-client/lib/index.js","../../../../jaxcore-client/lib/spin/buffer.js","../../../../jaxcore-client/lib/colors.js","serviceWorker.js","index.js"],"names":["queue","_EventEmitter","SpeakerQueue","speak","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_queue","speaker","inherits","createClass","key","value","speech","push","_speakNext","_this2","isSpeaking","next","shift","getWorkerAudioData","text","options","audioContext","source","onStart","scope","loadAudioData","onStop","setTimeout","_onEnded","emit","events_default","a","speak_Speak","Speak","name","lang","profiles","defaultProfile","profiles_default","addProfile","profile","setProfile","engine","language","setLanguage","visualizer","setVisualizer","vis","getLanguageId","profileName","v","assign","slow","speed","fast","low","pitch","high","voice","delay","Promise","resolve","connect","destination","onended","close","callback","start","toLowerCase","workerPath","workers","sam","espeak","length","startsWith","l","i","path","Error","worker","Worker","addEventListener","e","console","log","data","rawdata","AudioContext","createBufferSource","audioBuffer","createBuffer","buffer","getChannelData","_i","decodeAudioData","voptions","processOptions","postMessage","cmd","replacements","forEach","replacement","from","to","replace","RegExp","type","p","variants","languageIds","ca","cs","de","el","en/en","en/en-n","en/en-rp","en/en-sc","en/en-us","en/en-wm","eo","es","es-la","fi","fr","hu","it","kn","la","lv","nl","pl","pt","pt-pt","ro","sk","sv","tr","zh","zh-yue","indexOf","setWorkers","speakerQueue","bind","clearQueue","on","once","__webpack_exports__","EventEmitter","__webpack_require__","Spin","BrowserTransport","constructor","prototype","store","id","add","created","update","spinIds","destroyed","changes","spin","c","state","knobPushed","buttonPushed","_lastSpinPosition","spinPosition","spinDirection","connected","create","remove","sendCommand","args","method","postCommandFn","spinCommand","setPostCommand","fn","spinBrowser","module","exports","Jack","default","amplitude","wordgap","variant","Pris","phoneticName","Roy","Scotty","Xenu","Cylon","Leon","Rachel","Zhora","Sam","throat","mouth","Elf","Robo","Granny","plugin","createLogger","spinStore","createStore","Client","SpinBuffer","_instance","device","transport","instance","ip","now","Date","setStore","setDefaults","spinPreviousTime","spinTime","knobPushTime","knobReleaseTime","knobPushDuration","knobHold","buttonPushTime","buttonReleaseTime","buttonPushDuration","buttonHold","batteryVoltage","batteryPercent","isCharging","isCharged","sleeping","inactivityTime","createSettings","brightness","knobHoldThreshold","buttonHoldThreshold","sleepEnabled","sleepTimer","Buffer","config","defaults","setState","d","settings","settingDefaults","settingNames","changeSettings","hasChanges","_buffer","apply","Array","slice","arguments","bufferDelay","bufferReset","reset","cancelHoldEvents","clearTimeout","_knobHoldTimer","_buttonHoldTimer","isConnected","_connected","resetDefaults","_sleeping","_removeEvents","disconnect","knobReleased","buttonReleased","processSpin","position","direction","processEncoder","throttled","getTime","processKnob","pushed","me","wasHeld","processButton","processStatus","Math","round","first","min","processSleep","status","millis","flash","color","quickFlash","repeat","bleDevice","join","lightsOn","lights","lightsOff","setThrottle","throttle","setBrightness","setName","rotate","mode","color1","color2","scale","percent","color3","sleep","delaySleep","setKnobHoldThreshold","th","setButtonHoldThreshold","setSleepTimer","minutes","ms","destroy","debug","q","logger","quiet","chalk","green","yellow","cyan","magenta","_quiet","map","arg","index","loggerName","colors","n","unshift","Store","ids","removeAllListeners","set","s","isColor","Color","rgb","toString","alpha","lighten","darken","saturate","desaturate","shiftHSL","h","shiftHue","combine","t","tint","hue","saturation","lightness","invert","setRGB","hsl","setHSL","red","r","g","blue","b","getAlpha","getRGB","getHex","full","getRed","getGreen","getBlue","getHSL","getHue","getSaturation","getLightness","rgba","hsla","global","Custom ESpeak Voice","Custom SAM Voice","speakVoice","SpeakApp","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","canvasRef","React","createRef","languageEnabled","spoken","spokenIndex","code","viewCode","app","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","updateCode","monoScope","MonauralScope","current","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","ref","width","height","renderProfileSelect","renderSpeedSelect","renderPitchSelect","renderLanguageSelect","size","placeholder","onKeyUp","onChange","onChangeText","onClick","sayText","href","clickSpoken","clear","renderCode","_this3","preventDefault","o","sayIndex","keyCode","_this4","selectLanguage","_this5","target","selectedIndex","generateCode","_this6","selectSpeed","_this7","selectPitch","_this8","_this9","_this10","selectProfile","label","_this11","keepText","_this12","saying","previousSaying","isSame","_this13","theme","strokeColor","clipColor","fillColor","dotColor","then","_this14","voice_id","custom","intonations","Component","Listen","Listener","postCommand","listenCommand","command","lib_State","State","handler","addListener","removeListener","lib_MonauralScope","canvas","meter","mediaStreamSource","_draw","draw","assertThisInitialized","isRecording","setTheme","lineWidth","bgOnColor","bgOffColor","dotSize","background","clipLevel","averaging","clipLag","processor","createScriptProcessor","onaudioprocess","event","x","buf","inputBuffer","bufLength","sum","abs","clipping","lastClip","window","performance","rms","sqrt","volume","max","maxVolume","checkClipping","shutdown","startRecording","stopRecording","isDrawing","successcb","errorcb","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","mediaDevices","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","stream","createMediaStreamSource","createAudioMeter","startDrawing","alert","isPlaying","stop","stopDrawing","ctx","getContext","fillStyle","fillRect","clearRect","maxsize","beginPath","arc","PI","fill","closePath","error","strokeStyle","_maxsize","_size","stroke","requestAnimationFrame","msg","_jaxcore_client","message","protocol","document","location","host","lib_Listen","browser_default","lib_JaxcoreClient","_State","JaxcoreClient","reconnect","connectedExtension","extensionReady","origin","_jaxcore_content","socketDisconnected","listen","recognizedText","disconnectExtension","connectExtension","jaxcore","logger_default","spin_default","connectAll","connectSpins","delayTime","spinDelayed","staticBuffer","kineticBuffer","lastSpinTime","defaultDelay","staticTimeout","delayLength","_onPushKnob","onPushKnob","forceStatic","timeSinceLastSpin","isDelayed","diff","cancelDelay","isArray","isString","String","hslval","y","hsl2rgb","m","test","substring","parseInt","match","Number","int2hex","toUpperCase","sourceColor","targetColor","amount","al","sH","Boolean","hostname","ReactDOM","render","react_default","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6084e8a6.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from \"events\";\n\nvar SpeakerQueue =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(SpeakerQueue, _EventEmitter);\n\n  function SpeakerQueue(speak) {\n    var _this;\n\n    _classCallCheck(this, SpeakerQueue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpeakerQueue).call(this));\n    _this._queue = [];\n    _this.speaker = speak;\n    return _this;\n  }\n\n  _createClass(SpeakerQueue, [{\n    key: \"clearQueue\",\n    value: function clearQueue() {\n      this._queue = [];\n    }\n  }, {\n    key: \"queue\",\n    value: function queue(speech) {\n      this._queue.push(speech);\n\n      this._speakNext();\n    }\n  }, {\n    key: \"_speakNext\",\n    value: function _speakNext() {\n      var _this2 = this;\n\n      if (this.isSpeaking) {\n        return;\n      }\n\n      var next = this._queue.shift();\n\n      if (next) {\n        this.isSpeaking = true;\n        this.speaker.getWorkerAudioData(next.text, next.options, function (audioContext, source) {\n          if (next.onStart) {\n            next.onStart(next);\n          }\n\n          next.scope.loadAudioData(audioContext, source, function () {\n            if (next.onStop) {\n              setTimeout(function () {\n                next.onStop(next);\n              }, 1);\n            }\n\n            _this2._onEnded();\n          });\n        });\n      } else {\n        this.emit('finish');\n      }\n    }\n  }, {\n    key: \"_onEnded\",\n    value: function _onEnded() {\n      this.isSpeaking = false;\n\n      this._speakNext();\n    }\n  }]);\n\n  return SpeakerQueue;\n}(EventEmitter);\n\nexport default SpeakerQueue;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\nimport SpeakerQueue from './queue';\nimport profiles from './profiles';\nvar variants = ['f1', 'f2', 'f3', 'f4', 'f5', 'm1', 'm2', 'm3', 'm4', 'm5', 'm6', 'm7', 'croak', 'klatt', 'klatt2', 'klatt3', 'whisper', 'whisperf'];\nvar languageIds = {\n  'ca': 'Catalan',\n  'cs': 'Czech',\n  'de': 'German',\n  'el': 'Greek',\n  'en/en': 'English',\n  'en/en-n': 'English (N)',\n  'en/en-rp': 'English (RP)',\n  'en/en-sc': 'English (Scottish)',\n  'en/en-us': 'English (US)',\n  'en/en-wm': 'English (WM)',\n  'eo': 'Esperanto',\n  'es': 'Spanish',\n  'es-la': 'Spanish (Latin America)',\n  'fi': 'Finnish',\n  'fr': 'French',\n  'hu': 'Hungarian',\n  'it': 'Italian',\n  'kn': 'Kannada',\n  'la': 'Latin',\n  'lv': 'Latvian',\n  'nl': 'Dutch',\n  'pl': 'Polish',\n  'pt': 'Portuguese (Brazil)',\n  'pt-pt': 'Portuguese, European',\n  'ro': 'Romanian',\n  'sk': 'Slovak',\n  'sv': 'Swedish',\n  'tr': 'Turkish',\n  'zh': 'Chinese (Mandarin)',\n  'zh-yue': 'Chinese (Cantonese)'\n};\n\nvar Speak =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Speak, _EventEmitter);\n\n  function Speak(options) {\n    var _this;\n\n    _classCallCheck(this, Speak);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speak).call(this));\n    if (!options) options = {};\n    _this.lang = null;\n    _this.profiles = {};\n    _this.defaultProfile = null;\n\n    for (var name in profiles) {\n      _this.addProfile(profiles[name]);\n    }\n\n    if (options.profile) {\n      _this.setProfile(options.profile);\n    } else {\n      _this.setProfile('Jack');\n    }\n\n    if (_this.profile.engine === 'espeak') {\n      if (options.language) {\n        _this.setLanguage(options.language);\n      }\n    }\n\n    if (!_this.lang) {\n      _this.setLanguage('en_us');\n    }\n\n    if (options.visualizer) {\n      _this.setVisualizer(options.visualizer);\n    }\n\n    return _this;\n  }\n\n  _createClass(Speak, [{\n    key: \"setVisualizer\",\n    value: function setVisualizer(vis) {\n      this.visualizer = vis;\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      this.lang = Speak.getLanguageId(lang);\n    }\n  }, {\n    key: \"processOptions\",\n    value: function processOptions(options) {\n      if (!options) {\n        options = {};\n      }\n\n      var profileName = options.profile ? options.profile : this.defaultProfile;\n      var profile = this.profiles[profileName]['default'];\n      var v = Object.assign({}, profile);\n      if (options.slow) v.speed = this.profiles[profileName]['slow'].speed;\n      if (options.fast) v.speed = this.profiles[profileName]['fast'].speed;\n      if (options.low) v.pitch = this.profiles[profileName]['low'].pitch;\n      if (options.high) v.pitch = this.profiles[profileName]['high'].pitch;\n      if (options.pitch) v.pitch = this.profiles[profileName]['pitch'].pitch;\n      if (options.speed) v.speed = this.profiles[profileName]['speed'].speed;\n\n      if (options.language) {\n        v.voice = Speak.getLanguageId(options.language);\n      } else {\n        v.voice = this.lang;\n      }\n\n      if (options.delay) {\n        v.delay = options.delay;\n      }\n\n      return v;\n    }\n  }, {\n    key: \"speak\",\n    value: function speak(text, options) {\n      var _this2 = this;\n\n      options = options || {};\n\n      if (this.visualizer) {\n        return new Promise(function (resolve) {\n          _this2.getWorkerAudioData(text, options, function (audioContext, source) {\n            _this2.visualizer.loadAudioData(audioContext, source, resolve);\n          });\n        });\n      } else {\n        this.getWorkerAudioData(text, options, function (audioContext, source) {\n          // this.visualizer.loadAudioData(audioContext, source, resolve);\n          source.connect(audioContext.destination);\n\n          source.onended = function () {\n            source.connect(audioContext.destination);\n            audioContext.close();\n            if (callback) callback();\n          };\n\n          source.start(0);\n        });\n      }\n    }\n  }, {\n    key: \"getWorkerAudioData\",\n    value: function getWorkerAudioData(text, options, callback) {\n      text = text.toLowerCase();\n      if (!options.profile) options.profile = this.defaultProfile || 'Jack';\n      var engine = this.profiles[options.profile].engine;\n      var workerPath;\n\n      if (engine === 'sam') {\n        workerPath = Speak.workers.sam;\n      } else if (engine === 'espeak') {\n        if (typeof Speak.workers.espeak === 'string') {\n          workerPath = Speak.workers.espeak;\n        } else if (Speak.workers.espeak.length) {\n          var lang = options.language;\n\n          if (lang.startsWith('en-')) {\n            lang = 'en/' + l;\n          }\n\n          debugger;\n\n          for (var i = 0; i < Speak.workers.espeak.length; i++) {\n            if (Speak.workers.espeak[i].language === options.language) {\n              debugger;\n              workerPath = Speak.workers.espeak[i].path;\n              break;\n            }\n          }\n        }\n      }\n\n      if (!workerPath) throw new Error('no worker path for this language');\n      var worker = new Worker(workerPath);\n      worker.addEventListener('message', function (e) {\n        console.log('received from worker:', e.data);\n\n        if (e.data.rawdata) {\n          var audioContext = new AudioContext();\n          var source = audioContext.createBufferSource();\n\n          if (engine === 'sam') {\n            var data = e.data.rawdata;\n            var audioBuffer = audioContext.createBuffer(1, data.length, 22050);\n            var buffer = audioBuffer.getChannelData(0);\n\n            for (var _i = 0; _i < data.length; _i++) {\n              buffer[_i] = data[_i];\n            }\n\n            source.buffer = audioBuffer;\n            callback(audioContext, source);\n          } else {\n            audioContext.decodeAudioData(e.data.rawdata, function (buffer) {\n              source.buffer = buffer;\n              callback(audioContext, source);\n            }, function (e) {\n              console.log('error', e);\n            });\n          }\n        }\n      }, false);\n      var voptions = this.processOptions(options);\n      worker.postMessage({\n        cmd: 'speak',\n        text: text,\n        options: voptions\n      });\n    }\n  }, {\n    key: \"replacementsFor\",\n    value: function replacementsFor(text, replacements) {\n      replacements.forEach(function (replacement) {\n        var from = replacement[0];\n        var to = replacement[1];\n        text = text.replace(new RegExp(from, 'gi'), to);\n      });\n      return text;\n    } // todo:\n    // multipartData() {\n    // \tvar parts = [\n    // \t\t{ text: \"Travel to\",      voice: \"en/en-us\", variant: \"m3\" },\n    // \t\t{ text: \"Paris\",          voice: \"fr\",       variant: \"f5\" },\n    // \t\t{ text: \"at light speed\", voice: \"en/en-us\", variant: \"m3\" }\n    // \t];\n    // }\n\n  }, {\n    key: \"addProfile\",\n    value: function addProfile(profile) {\n      var profileTypes = ['high', 'low', 'fast', 'slow'];\n      profileTypes.forEach(function (type) {\n        if (type !== 'default' && type !== 'name') {\n          var p = Object.assign({}, profile['default']);\n\n          for (var i in profile[type]) {\n            p[i] = profile[type][i];\n          }\n\n          profile[type] = p;\n        }\n      });\n      this.profiles[profile.name] = profile;\n    }\n  }, {\n    key: \"setProfile\",\n    value: function setProfile(name) {\n      this.defaultProfile = name;\n      this.profile = profiles[name];\n      return this;\n    }\n  }]);\n\n  return Speak;\n}(EventEmitter);\n\nSpeak.variants = variants;\nSpeak.profiles = profiles;\nSpeak.languageIds = languageIds;\n\nSpeak.getLanguageId = function (lang) {\n  if (lang.indexOf('_') > -1) lang = lang.replace('_', '-'); // if (lang === 'en-us') lang = 'en/en-us';\n  // if (lang === 'en') lang = 'en/en';\n\n  if (lang.startsWith('en') && lang.indexOf('/') === -1) lang = 'en/' + lang;\n  return lang;\n};\n\nSpeak.addProfile = function (profile) {\n  for (var name in profile) {\n    Speak.profiles[name] = profile[name];\n  }\n};\n\nSpeak.setWorkers = function (workers) {\n  Speak.workers = workers;\n};\n\nvar speakerQueue = new SpeakerQueue(new Speak());\nSpeak.queue = speakerQueue.queue.bind(speakerQueue);\nSpeak.clearQueue = speakerQueue.clearQueue.bind(speakerQueue);\nSpeak.on = speakerQueue.on.bind(speakerQueue);\nSpeak.once = speakerQueue.once.bind(speakerQueue);\nexport default Speak;","var EventEmitter = require('events');\n\nvar Spin = require('../spin');\n\nfunction BrowserTransport() {\n  this.constructor();\n}\n\nBrowserTransport.prototype = new EventEmitter();\nBrowserTransport.prototype.constructor = EventEmitter;\n\nBrowserTransport.prototype.data = function (data) {\n  // console.log('onStoreUpdate', data);\n  if (data.store) {\n    // console.log('transport store', data.store);\n    for (var id in data.store) {\n      // console.log('on store', id, data.store[id]);\n      this.add(data.store[id]);\n    } //this.emit('spin-connected', spin);\n\n  } else if (data.created) {\n    // console.log('transport created', data.id, data.created);\n    this.add(data.created);\n  } else if (data.update) {\n    if (data.id in Spin.spinIds) {\n      // console.log('transport update', data.id);\n      this.update(data.id, data.update); //Spin.store.set();\n    } else {\n      console.log('transport postcreate', data.id);\n      data.update.id = data.id;\n      this.add(data.update); // this.add(data);\n    }\n  } else if (data.destroyed) {// console.log('transport created', data.id, data.created);\n  }\n};\n\nBrowserTransport.prototype.update = function (id, changes) {\n  var spin = Spin.spinIds[id]; // var changed = spin.setState(changes);\n  // if (!changed) {\n  // \tconsole.log('no changes');\n  // \treturn;\n  // }\n\n  for (var c in changes) {\n    spin.state[c] = changes[c];\n  } // console.log('update changed', changed);\n\n\n  if ('knobPushed' in changes) {\n    spin.emit('knob', changes.knobPushed);\n  }\n\n  if ('buttonPushed' in changes) {\n    spin.emit('button', changes.buttonPushed);\n  }\n\n  if ('spinPosition' in changes) {\n    // let diff;\n    // let throttled = false;\n    // if (spin._lastSpinPosition !== undefined) {\n    // \tdiff = spin.state.spinPosition - spin._lastSpinPosition;\n    // \tif (Math.abs(diff) > 1) {\n    // \t\tthrottled = true;\n    // \t\twhile (spin._lastSpinPosition !== spin.state.spinPosition) {\n    // \t\t\tconsole.log('skipping from', spin._lastSpinPosition, 'to', spin.state.spinPosition);\n    // \t\t\tspin._lastSpinPosition += diff>0? 1 : -1;\n    // \t\t\tspin.emit('spin', spin.state.spinDirection, spin._lastSpinPosition);\n    // \t\t}\n    // \t}\n    // }\n    // if (!throttled) {\n    // \tconsole.log('SPIN not throttled', spin.state.spinPosition);\n    // \tspin._lastSpinPosition = spin.state.spinPosition;\n    // \tspin.emit('spin', spin.state.spinDirection, spin.state.spinPosition);\n    // }\n    spin._lastSpinPosition = spin.state.spinPosition; // TODO: connected gets set to false upon reconnections\n    // if (spin.state.connected) {\n    // \tconsole.log('emit connected', spin.state.spinPosition);\n\n    spin.emit('spin', spin.state.spinDirection, spin.state.spinPosition); // }\n    // else {\n    // \tconsole.log('not connected?', spin.state.connected);\n    // }\n    // if (spin._lastSpinPosition === undefined) {\n    // \tconsole.log('first _lastSpinPosition', spin.state.spinPosition);\n    // \tdebugger;\n    // }\n    // else {\n    // }\n    // this.emit('update', spin.state);\n  }\n\n  if ('connected' in changes) {\n    if (changes.connected) {\n      this.emit('spin-connected', spin);\n      spin.emit('connect');\n    } else {\n      this.emit('spin-disconnected', spin);\n      spin.emit('disconnect');\n    }\n  }\n\n  console.log('update', changes);\n  spin.emit('update', changes); // spin.on('update', function(changes) {\n  // \tconsole.log('on update', changes);\n  // });\n};\n\nBrowserTransport.prototype.add = function (state) {\n  if (state.id in Spin.spinIds) {\n    // console.log('already added', state.id);\n    this.update(state.id, state);\n    return;\n  }\n\n  var spin = Spin.create(state, this);\n  this.emit('spin-created', spin); // if ('knobPushed' in data) {\n  // \tspin.processKnob(data['knobPushed']);\n  // }\n  // if ('buttonPushed' in data) {\n  // \tspin.processButton(data['buttonPushed']);\n  // }\n  // var me = this;\n  // if (spin.state.connected) {\n  // \t// me.emit('spin-created', spin);\n  // }\n  // else {\n  // \tspin.once('connect', function() {\n  // \t\tme.emit('spin-connected', spin);\n  // \t});\n  // }\n};\n\nBrowserTransport.prototype.remove = function (data) {};\n\nBrowserTransport.prototype.sendCommand = function (spin, args) {\n  // this.emit('command', spin, args);\n  console.log('sendCommand', spin.id, args);\n  var id = args.shift();\n  var method = args.shift();\n  console.log('args', args); //debugger;\n\n  this.postCommandFn({\n    spinCommand: {\n      id: id,\n      method: method,\n      args: args\n    }\n  });\n};\n\nBrowserTransport.prototype.setPostCommand = function (fn) {\n  this.postCommandFn = fn;\n};\n\nvar spinBrowser = new BrowserTransport();\nmodule.exports = spinBrowser;","module.exports = {\n  \"Jack\": {\n    \"name\": \"Jack\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 10,\n      speed: 180,\n      variant: 'm2'\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 0\n    },\n    \"slow\": {\n      speed: 120\n    },\n    \"fast\": {\n      speed: 250\n    }\n  },\n  \"Pris\": {\n    \"name\": \"Pris\",\n    \"phoneticName\": \"Priss\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 47,\n      speed: 130,\n      variant: 'f5'\n    },\n    \"high\": {\n      pitch: 80\n    },\n    \"low\": {\n      pitch: 20\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Roy\": {\n    \"name\": \"Roy\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 35,\n      speed: 180,\n      variant: 'm1'\n    },\n    \"high\": {\n      pitch: 3\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Scotty\": {\n    \"name\": \"Scotty\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 35,\n      speed: 200,\n      variant: 'm3'\n    },\n    \"high\": {\n      pitch: 3\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 230\n    }\n  },\n  \"Xenu\": {\n    \"name\": \"Xenu\",\n    \"phoneticName\": \"zee-new\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 1,\n      pitch: 35,\n      speed: 170,\n      variant: 'klatt3'\n    },\n    \"high\": {\n      pitch: 65\n    },\n    \"low\": {\n      pitch: 0\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Cylon\": {\n    \"name\": \"Cylon\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 1,\n      pitch: 35,\n      speed: 170,\n      variant: 'whisperf'\n    },\n    \"high\": {\n      pitch: 65,\n      speed: 150\n    },\n    \"low\": {\n      pitch: 0,\n      speed: 140\n    },\n    \"slow\": {\n      pitch: 20,\n      speed: 100,\n      wordgap: 1\n    },\n    \"fast\": {\n      speed: 200,\n      wordgap: 0\n    }\n  },\n  \"Leon\": {\n    \"name\": \"Leon\",\n    \"phoneticName\": \"Leeon\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 40,\n      speed: 150,\n      variant: 'm7'\n    },\n    \"high\": {\n      pitch: 55\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Rachel\": {\n    \"name\": \"Rachel\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 60,\n      speed: 150,\n      variant: 'f2'\n    },\n    \"high\": {\n      pitch: 75\n    },\n    \"low\": {\n      pitch: 40\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Zhora\": {\n    \"name\": \"Zhora\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 60,\n      speed: 150,\n      variant: 'f4'\n    },\n    \"high\": {\n      pitch: 75\n    },\n    \"low\": {\n      pitch: 40\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Sam\": {\n    \"name\": \"Sam\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 64,\n      pitch: 64,\n      throat: 128,\n      mouth: 128\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 110\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 40\n    }\n  },\n  \"Elf\": {\n    \"name\": \"Elf\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 72,\n      pitch: 64,\n      throat: 110,\n      mouth: 160\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 110\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 40\n    }\n  },\n  \"Robo\": {\n    \"name\": \"Robo\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 82,\n      pitch: 60,\n      throat: 190,\n      mouth: 190\n    },\n    \"high\": {\n      pitch: 40\n    },\n    \"low\": {\n      pitch: 100\n    },\n    \"slow\": {\n      speed: 120\n    },\n    \"fast\": {\n      speed: 50\n    }\n  },\n  \"Granny\": {\n    \"name\": \"Granny\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 82,\n      pitch: 35,\n      throat: 145,\n      mouth: 145\n    },\n    \"high\": {\n      pitch: 25\n    },\n    \"low\": {\n      pitch: 120\n    },\n    \"slow\": {\n      speed: 130\n    },\n    \"fast\": {\n      speed: 40\n    }\n  }\n};","var EventEmitter = require('events');\n\nvar plugin = require('jaxcore-plugin');\n\nvar log = plugin.createLogger('Spin Service');\nvar spinStore = plugin.createStore('Spin Store');\nvar Client = plugin.Client;\n\nvar SpinBuffer = require('./buffer'); // var udp, tcp, usb;\n// var SpinUDPService = require('./udp');\n// var udp = new SpinUDPService();\n//\n// var SpinTCPService = require('./tcp');\n// var tcp = new SpinTCPService();\n//\n// var SpinUSBService = require('./usb');\n// var usb = new SpinUSBService();\n//\n// var SpinBLEService = require('./ble');\n// var ble = new SpinBLEService();\n\n\nvar spinIds = {};\nvar spinIps = {}; // tcp.on('connect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp connect', id);\n//\n// \tudp.connectedTCP(id);\n//\n// \tspinIps[ip] = id;\n//\n// \tif (id in spinIds) {\n// \t\tspinIds[id]._connected();\n// \t\t// spinIds[id].emit('connect', spinIds[id]);\n// \t}\n// \t// var ip = socket.remoteAddress;\n// \t// log('connected',id,ip);\n// });\n//\n// tcp.on('disconnect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp disconnect', id, ip, spinIps);\n//\n// \tudp.disconnectedTCP(id);\n//\n// \tif (ip in spinIps) {\n//\n//\n// \t\tlog('destroying ', id, ip, spinIps[ip]);\n// \t\t//spinIds[id]._disconnected();\n//\n// \t\tspinIds[id].destroy();\n// \t\tdelete spinIds[id];\n// \t\tdelete spinIps[ip];\n//\n// \t}\n// \telse {\n// \t\tlog('got disconnected from unknown', ip);\n// \t}\n// });\n//\n// usb.on('connect', function (id) {\n// \tif (id in spinIds) {\n// \t\tlog('on usb connect', id);\n// \t\tspinIds[id]._connected();\n// \t}\n// \telse {\n// \t\tlog('error on usb connect', id);\n// \t}\n// });\n\nvar _instance = 0;\n\nfunction Spin(device, transport) {\n  this.constructor();\n  if (transport) this.transport = transport;else {\n    debugger;\n  }\n  var instance = _instance++;\n  this.log = plugin.createLogger('Spin ' + instance);\n  var ip = device.ip;\n  var id = device.id;\n  spinIds[id] = this;\n  this.id = id; // if (device.port) {\n  // \tthis.udpPort = device.port;\n  // }\n  // if (device.usbDevice) {\n  // \tthis.usbDevice = device.usbDevice;\n  // }\n  // if (device.blePeripheral) {\n  // \tthis.blePeripheral = device.blePeripheral;\n  // }\n\n  var now = new Date();\n  this.setStore(spinStore);\n  this.setDefaults(device, {\n    id: id,\n    ip: ip,\n    // remove ?\n    instance: instance,\n    connected: false,\n    spinPosition: 0,\n    spinDirection: 1,\n    spinPreviousTime: now,\n    spinTime: now,\n    knobPushed: false,\n    knobPushTime: now,\n    knobReleaseTime: now,\n    knobPushDuration: 0,\n    knobHold: false,\n    buttonPushed: false,\n    buttonPushTime: now,\n    buttonReleaseTime: now,\n    buttonPushDuration: 0,\n    buttonHold: false,\n    batteryVoltage: 0,\n    batteryPercent: 0,\n    isCharging: false,\n    isCharged: false,\n    sleeping: false,\n    inactivityTime: 0\n  });\n  this.createSettings({\n    brightness: 16,\n    knobHoldThreshold: 2000,\n    buttonHoldThreshold: 2000,\n    sleepEnabled: true,\n    sleepTimer: 0\n  }); // if (this.usbDevice) {\n  // \t// usb.addSpin(this);\n  // }\n  // else {\n  // \t// tcp.addSpin(spinIds, id);\n  // }\n}\n\nSpin.store = spinStore;\nSpin.spinIds = spinIds;\nSpin.Buffer = SpinBuffer;\nSpin.prototype = new Client();\nSpin.prototype.constructor = Client;\n\nSpin.prototype.setDefaults = function (config, defaults) {\n  this.setState(config);\n  var d = {};\n\n  for (var i in defaults) {\n    if (!(i in config)) {\n      d[i] = defaults[i];\n    }\n  }\n\n  this.setState(d);\n};\n\nSpin.prototype.createSettings = function (settings) {\n  this.settingDefaults = {};\n  this.settingNames = [];\n\n  for (var i in settings) {\n    this.settingNames.push(i);\n    this.settingDefaults[i] = settings[i];\n    this.state[i] = settings[i];\n  } //this.log('created settings', this.state);\n\n};\n\nSpin.prototype.changeSettings = function (settings) {\n  log('changing settings', settings);\n  var changes = {};\n  var hasChanges = false;\n\n  for (var name in settings) {\n    if (name in this.settingDefaults) {\n      var value = settings[name];\n      var d = {};\n      d[name] = settings[name];\n      var c = this.setState(d);\n\n      if (c) {\n        this.log('changed setting:', name + ' = ' + value, '(default ' + this.settingDefaults[name] + ')');\n        hasChanges = true;\n        changes[name] = value;\n      }\n    }\n  }\n\n  if (hasChanges) {\n    this.log('settings-changed', changes);\n    this.emit('settings-changed', changes);\n  }\n};\n\nSpin.prototype.buffer = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.spin.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferDelay = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.delay.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferReset = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.reset.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.cancelHoldEvents = function () {\n  clearTimeout(this._knobHoldTimer);\n  clearTimeout(this._buttonHoldTimer);\n};\n\nSpin.prototype.isConnected = function () {\n  return this.state.connected;\n};\n\nSpin.prototype._connected = function () {\n  this.resetDefaults();\n  this.setState({\n    connected: true,\n    sleeping: false\n  });\n  this.emit('connect', this);\n};\n\nSpin.prototype.connect = function () {\n  Spin.transport.connect(this); // if (this.usbDevice) {\n  // \tusb.connectSpin(this);\n  // }\n  // else {\n  // \tthis.log('connecting (' + this.udpPort + ')');\n  // \tudp.connectTCP(this.state.id, this.state.ip, this.udpPort);\n  // }\n};\n\nSpin.prototype._sleeping = function () {\n  this.setState({\n    sleeping: true\n  });\n  this.emit('sleeping');\n};\n\nSpin.prototype._removeEvents = function () {\n  var id = this.id; //tcp.disconnect(this.state.id, this.state.ip);\n\n  Spin.transport.remove(this); // if (this.usbDevice) {\n  // \tusb.removeSpin(this);\n  // }\n  // else {\n  // \ttcp.removeSpin(this);\n  // }\n};\n\nSpin.prototype.disconnect = function () {\n  this.setState({\n    connected: false\n  });\n  this.resetDefaults();\n  this.emit('disconnect', this);\n};\n\nSpin.prototype.resetDefaults = function () {\n  this.setState({\n    spinPosition: 0,\n    knobPushed: false,\n    knobReleased: true,\n    buttonPushed: false,\n    buttonReleased: true\n  });\n};\n\nSpin.prototype.processSpin = function (position) {\n  console.log('processSpin', position);\n  var direction = position > this.state.spinPosition ? 1 : -1;\n\n  if (position !== this.state.spinPosition) {\n    // var diff = this.state.spinPosition - position;\n    //\n    // if (Math.abs(diff) > 1 && this.state.throttle!=0) {\n    // \tvar throttledPosition = this.state.spinPosition;\n    // \t// while (this.state.spinPosition !== position) {\n    // \t// \tthrottledPosition = throttledPosition + direction;\n    // \t// \tthis.processEncoder(throttledPosition, direction, true);\n    // \t// \tthis.log(direction, 'position:', throttledPosition, this.state.spinPosition === position?'(synced)':'(throttled)');\n    // \t// }\n    // }\n    // else {\n    // \tthis.log(direction, 'position:', position);\n    // \tthis.processEncoder(position, direction, false);\n    // }\n    //\n    // this.setState({\n    // \tdirection\n    // });\n    this.processEncoder(position, direction, false);\n  }\n};\n\nSpin.prototype.processEncoder = function (position, direction, throttled) {\n  var changes = {};\n  this.cancelHoldEvents();\n\n  if (direction !== this.state.spinDirection) {\n    changes.spinDirection = direction;\n  }\n\n  changes.spinPosition = position;\n  changes.spinPreviousTime = this.state.spinTime;\n  changes.spinTime = new Date().getTime();\n  this.setState(changes);\n  this.emit('spin', direction, position, throttled); // this.emit('update', changes);\n};\n\nSpin.prototype.processKnob = function (pushed) {\n  //this.log('KNOB', pushed);\n  var me = this;\n  var changes = {};\n  changes.knobPushed = pushed;\n  changes.knobReleased = !pushed;\n\n  if (pushed) {\n    changes.knobPushTime = new Date().getTime();\n    this.setState(changes);\n    clearTimeout(this._knobHoldTimer);\n    this._knobHoldTimer = setTimeout(function () {\n      me.log('knobHoldThreshold exceeded');\n      me.setState({\n        knobHold: true\n      });\n      me.emit('knob-hold');\n    }, this.state.knobHoldThreshold);\n  } else {\n    var wasHeld = this.state.knobHold;\n\n    if (wasHeld) {\n      changes.knobHold = false;\n      me.emit('knob-hold');\n      this.log('knob was held, cancelling presses');\n    }\n\n    changes.knobReleaseTime = new Date().getTime(); // changes.knobReleaseTime;\n    // changes.knobReleaseTime - this.state.knobPushTime;\n\n    clearTimeout(this._knobHoldTimer); // if (me.state.knobPushDuration > me.state.knobLongPressThreshold) {\n    // \tme.log('knobLongPressThreshold exceeded');\n    // \tme.emit('knob-longpress');\n    // }\n    // else {\n    // \tme.emit('knob-press');\n    // }\n\n    this.setState(changes);\n\n    if (wasHeld) {\n      this.emit('knob-longpress');\n    } else {\n      this.emit('knob-press');\n    }\n  }\n\n  this.emit('knob', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processButton = function (pushed) {\n  var me = this;\n  var changes = {};\n  changes.buttonPushed = pushed;\n  changes.buttonReleased = !pushed;\n\n  if (pushed) {\n    changes.buttonPushTime = new Date().getTime();\n    clearTimeout(this._buttonHoldTimer);\n    this._buttonHoldTimer = setTimeout(function () {\n      me.log('buttonHoldThreshold exceeded'); // me.setState({\n      // \tbuttonHold: true\n      // });\n\n      changes.buttonHold = true;\n      me.emit('button-hold');\n    }, this.state.buttonHoldThreshold);\n  } else {\n    var wasHeld = this.state.buttonHold;\n\n    if (wasHeld) {\n      changes.buttonHold = false;\n      this.log('button was held, cancelling presses');\n    }\n\n    changes.buttonReleaseTime = new Date().getTime();\n    changes.buttonPushDuration = changes.buttonReleaseTime - this.state.buttonPushTime;\n    clearTimeout(this._buttonHoldTimer); // if (me.state.buttonPushDuration > me.state.buttonLongPressThreshold) {\n    // \tme.log('buttonLongPressThreshold exceeded');\n    // \tme.emit('button-longpress');\n    // }\n    // else {\n    // \tme.emit('button-press');\n    // }\n  } //debugger;\n\n\n  this.setState(changes);\n\n  if (wasHeld) {\n    this.emit('button-longpress');\n  } else {\n    this.emit('button-press');\n  }\n\n  this.emit('button', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processStatus = function (batteryVoltage, isCharging, isCharged, sleepTimer, inactivityTime, sleepEnabled) {\n  // round off batteryVoltage\n  batteryVoltage = Math.round(batteryVoltage * 10) / 10;\n  var first = this.state.batteryVoltage === 0;\n  var changes = {};\n  var hasChanges = false;\n\n  if (this.state.sleepTimer !== sleepTimer) {\n    this.state.sleepTimer = changes.sleepTimer = sleepTimer;\n    hasChanges = true;\n  }\n\n  if (this.state.inactivityTime !== inactivityTime) {\n    this.state.inactivityTime = changes.inactivityTime = inactivityTime;\n  }\n\n  if (this.state.sleepEnabled !== sleepEnabled) {\n    this.state.sleepEnabled = changes.sleepEnabled = sleepEnabled;\n    hasChanges = true;\n  }\n\n  if (this.state.isCharged !== isCharged) {\n    this.state.isCharged = isCharged;\n    changes.isCharged = isCharged;\n    if (!first) this.emit('charged', isCharged);\n  }\n\n  if (this.state.batteryVoltage !== batteryVoltage) {\n    hasChanges = true;\n    this.state.batteryVoltage = changes.batteryVoltage = batteryVoltage;\n    this.state.batteryPercent = changes.batteryPercent = isCharging ? 1 : Math.min(batteryVoltage / 4.2, 1);\n\n    if (!first) {\n      // dont emit event on first reception\n      this.emit('battery', batteryVoltage, changes.batteryPercent);\n    }\n\n    if (this.state.isCharging !== isCharging) {\n      this.state.isCharging = isCharging;\n      changes.isCharging = isCharging;\n      if (!first) this.emit('charging', isCharging);\n    }\n  } // if (hasChanges) this.emit('update', changes);\n\n};\n\nSpin.prototype.processSleep = function (status, millis) {\n  switch (status) {\n    case 0:\n      this.emit('wake');\n      break;\n\n    case 1:\n      this.emit('sleep-warning', millis);\n      break;\n\n    case 2:\n      this._sleeping();\n\n      break;\n  }\n};\n\nSpin.prototype.sendCommand = function () {\n  var args = Array.prototype.slice.call(arguments);\n  this.transport.sendCommand(this, args); // if (this.usbDevice) {\n  // \tusb.sendCommand.apply(usb, args);\n  // }\n  // else {\n  // \ttcp.sendCommand.apply(tcp, args);\n  // } //this.id, 'FLASH', color.join(',') + ',' + repeat);\n};\n\nSpin.prototype.flash = function (color) {\n  this.sendCommand(this.id, 'FLASH', color); //color.join(','));\n  // if (this.bleDevice) this.bleDevice.flash(color);\n  // else {\n  // \tcolor.push(1);\n  // \tthis.sendCommand(this.id, 'FLASH', color.join(','));\n  // }\n};\n\nSpin.prototype.quickFlash = function (color, repeat) {\n  if (!repeat) repeat = 1;\n  if (this.bleDevice) this.bleDevice.quickFlash(color, repeat);else this.sendCommand(this.id, 'QUICKFLASH', color.join(',') + ',' + repeat);\n}; // Spin.prototype.quickFlashSingle = function (color, index) {\n// \tif (!index) index = 0;\n// \tindex = parseInt(index);\n// \tthis.sendCommand(this.id, 'QUICKFLASHONE', color.join(',') + ',' + index);\n// };\n\n\nSpin.prototype.lightsOn = function (color) {\n  if (this.bleDevice) this.bleDevice.lights(color);else this.sendCommand(this.id, 'LIGHTSON', color);\n};\n\nSpin.prototype.lightsOff = function () {\n  if (this.bleDevice) this.bleDevice.lights([0, 0, 0]);else this.sendCommand(this.id, 'LIGHTSOFF');\n};\n\nSpin.prototype.setThrottle = function (throttle) {\n  this.setState({\n    throttle: 0\n  });\n  if (!this.bleDevice) this.sendCommand(this.id, 'THROTTLE', throttle);\n};\n\nSpin.prototype.setBrightness = function (brightness) {\n  if (this.bleDevice) this.bleDevice.setBrightness(brightness);else this.sendCommand(this.id, 'BRIGHTNESS', brightness);\n};\n\nSpin.prototype.setName = function (name) {\n  if (this.bleDevice) this.bleDevice.setName(name);\n}; // Spin.prototype.setRotateColors = function (mode, colorLeft, colorRight) {\n// \tthis.sendCommand(this.id, 'ROTATECOLORS', colorLeft.concat(colorRight));\n// };\n\n\nSpin.prototype.rotate = function (direction, mode, color1, color2) {\n  if (!mode) mode = 0;\n  this.log('rotate', direction, mode);\n  if (this.bleDevice) this.bleDevice.rotate(mode, direction, color1, color2);else this.sendCommand(this.id, 'ROTATE', [mode, direction]);\n}; // Spin.prototype.setScaleColors = function (mode, colorLow, colorHigh, colorPoint) {\n// \tthis.sendCommand(this.id, 'SCALECOLORS', colorLow.concat(colorHigh).concat(colorPoint));\n// };\n\n\nSpin.prototype.scale = function (percent, mode, color1, color2, color3) {\n  if (this.bleDevice) this.bleDevice.scale(mode, percent, color1, color2, color3);else this.sendCommand(this.id, 'SCALAR', [mode, percent]);\n};\n\nSpin.prototype.sleep = function () {\n  if (this.bleDevice) this.bleDevice.sleep();\n  this.sendCommand(this.id, 'SLEEP');\n};\n\nSpin.prototype.delaySleep = function () {\n  if (this.bleDevice) this.bleDevice.delaySleep();else this.sendCommand(this.id, 'DELAYSLEEP');\n}; // Spin.prototype.setSleepEnabled = function (enabled) {\n// \tif (enabled) this.sendCommand(this.id, 'ENABLESLEEP');\n// \telse this.sendCommand(this.id, 'DISABLESLEEP');\n// };\n// Spin.prototype.enableSleep = function () {\n// \ttcp.sendCommand(this.id, 'ENABLESLEEP');\n// };\n// Spin.prototype.disableSleep = function () {\n// \ttcp.sendCommand(this.id, 'DISABLESLEEP');\n// };\n\n\nSpin.prototype.setKnobHoldThreshold = function (th) {\n  this.changeSettings({\n    knobHoldThreshold: th\n  });\n};\n\nSpin.prototype.setButtonHoldThreshold = function (th) {\n  this.changeSettings({\n    buttonHoldThreshold: th\n  });\n};\n\nSpin.prototype.setSleepTimer = function (minutes) {\n  if (this.bleDevice) this.bleDevice.setSleepTimer(minutes);else {\n    var ms = minutes * 60 * 1000;\n    this.sendCommand(this.id, 'SLEEPTIMER', ms);\n  }\n};\n\nSpin.prototype.destroy = function () {\n  this.disconnect();\n  this.log('destroying');\n\n  this._removeEvents();\n\n  delete this.state;\n};\n\nSpin.debug = function (q) {\n  plugin.logger.quiet(!q);\n};\n\nSpin.spinIds; // Spin.startServices = function () {\n// \tudp.startService();\n// \ttcp.startService();\n// };\n//\n// Spin.scan = function () {\n// \tSpin.startServices();\n//\n// \tvar _id;\n// \tvar callback;\n// \tif (arguments.length === 2) {\n// \t\tif (arguments[0] === null) {\n// \t\t\tlog('scanning');\n// \t\t}\n// \t\telse {\n// \t\t\tlog('scanning for ' + arguments[0]);\n// \t\t}\n// \t\tcallback = arguments[1];\n// \t}\n// \telse {\n// \t\tcallback = arguments[0];\n// \t\tlog('scanning');\n// \t}\n//\n// \t// var found = {};\n//\n// \tvar stop = function () {\n// \t\tudp.removeListener('ping', scanPing);\n// \t\tlog('stopped scanning');\n// \t};\n//\n// \tvar rescan = function () {\n// \t\t// found = {};\n// \t\tSpin.scan(callback);\n// \t};\n//\n// \tvar scanPing = function (pingNumber, ip, id, port, protocol, version, name, lastModified) {\n// \t\tif (!udp.isConnecting(id)) {\n//\n// \t\t\tif (!_id || _id === id) {\n// \t\t\t\t// if (found[id]) {\n// \t\t\t\t// \tlog('previously found', id);\n// \t\t\t\t// }\n// \t\t\t\t// else {\n// \t\t\t\t// \tfound[id] = true;\n//\n// \t\t\t\tcallback({\n// \t\t\t\t\tip: ip,\n// \t\t\t\t\tid: id,\n// \t\t\t\t\tport: port\n// \t\t\t\t}, stop, rescan);\n//\n// \t\t\t\t//}\n// \t\t\t}\n//\n// \t\t}\n// \t\telse log('connectAll isConnecting', id);\n// \t};\n//\n// \tudp.addListener('ping', scanPing);\n// };\n//\n// Spin.connectAll = function (callback) {\n// \tSpin.connectWifi(callback);\n// \t// Spin.connectUSB(callback);\n// \tSpin.connectBLE(callback);\n// };\n//\n// Spin.connectWifi = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tlog('connectAll found', device);\n// \t\tvar spin = Spin.create(device);\n// \t\tspin.once('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n// \t\tspin.connect();\n// \t});\n// };\n//\n// Spin.connectOne = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tdone();\n// \t\tlog('connectOne found', device);\n//\n// \t\tvar spin = Spin.create(device);\n//\n// \t\tspin.on('disconnect', function () {\n// \t\t\tlog('scan disconnect');\n// \t\t\trescan();\n// \t\t});\n//\n// \t\tcallback(spin);\n//\n// \t\tspin.connect();\n// \t});\n//\n// \t// Spin.connectTo(null, callback);\n// };\n//\n\nSpin.create = function (device, transport) {\n  if (device.id in spinIds) {\n    log('device exists', device);\n    spinIds[device.id].destroy();\n    delete spinIds[device.id];\n    var spin = new Spin(device, transport);\n    return spinIds[device.id];\n  } else {\n    log('creating new device', device, transport);\n    return new Spin(device, transport);\n  }\n}; //\n// Spin.connectTo = function (id, callback) {\n// \tSpin.scan(id, function (device, done, rescan) {\n// \t\tif (!id || device.id === id) {\n// \t\t\tdone();\n//\n// \t\t\tlog('connectTo found', device);\n//\n// \t\t\tvar spin = Spin.create(device);\n//\n// \t\t\tspin.on('disconnect', function () {\n// \t\t\t\tlog('scan disconnect');\n// \t\t\t\trescan();\n// \t\t\t});\n//\n// \t\t\tcallback(spin);\n//\n// \t\t\tspin.connect();\n// \t\t}\n// \t});\n// };\n//\n// Spin.connectUSBDevice = function (devicePath, callback) {\n// \tif (devicePath in usb.ids) {\n// \t\tlog(devicePath,'already exists');\n// \t\tusb.open(devicePath);\n// \t\treturn false;\n// \t}\n// \tlog('connecting usb', devicePath);\n//\n// \tvar spin = Spin.create({\n// \t\tid: devicePath,\n// \t\tusbDevice: devicePath\n// \t});\n//\n// \tspin.on('connect', function () {\n// \t\tlog('usb connect');\n// \t\tcallback(spin);\n// \t});\n//\n// \tspin.on('disconnect', function () {\n// \t\tlog('usb disconnect');\n// \t});\n//\n// \tspin.connect();\n// \treturn true;\n// };\n//\n// function startInterval(cb,t) {\n// \tcb();\n// \treturn setInterval(cb,t);\n// }\n//\n// Spin.connectUSB = function () {\n// \tvar devicePath, callback;\n// \tif (arguments.length === 1) {\n// \t\tcallback = arguments[0];\n// \t\tstartInterval(function() {\n// \t\t\tusb.getSpinUSBPorts(function(devicePaths) {\n// \t\t\t\tlog('usb', devicePaths);\n// \t\t\t\tdevicePaths.forEach(function(devicePath) {\n// \t\t\t\t\tSpin.connectUSBDevice(devicePath, callback);\n// \t\t\t\t});\n// \t\t\t});\n// \t\t},5000);\n// \t}\n// \telse if (arguments.length === 2) {\n// \t\tdevicePath = arguments[0];\n// \t\tcallback = arguments[1];\n// \t\tSpin.connectUSBDevice(devicePath, callback);\n// \t}\n// };\n//\n// Spin.connectBLE = function() {\n// \tif (typeof ble==='undefined') return;\n// \tvar deviceId, callback;\n//\n// \tif (arguments.length===2) {\n// \t\tdeviceId = arguments[0];\n// \t\tcallback = arguments[1];\n// \t}\n// \telse callback = arguments[0];\n//\n// \tble.on('discover', function(peripheral) {\n// \t\tvar id = peripheral.id;\n// \t\tif (deviceId) {\n// \t\t\tif (id !== deviceId) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t}\n//\n// \t\tif (deviceId) {\n// \t\t\tble.stopScan();\n// \t\t}\n//\n// \t\tif (id in ble.ids) {\n// \t\t\tlog('ble already exists',id);\n// \t\t\t//ble.connect(devicePath);\n// \t\t\treturn false;\n// \t\t}\n//\n// \t\tlog('connecting ble', id);\n//\n// \t\tvar spin = Spin.create({\n// \t\t\tid: id,\n// \t\t\tblePeripheral: peripheral\n// \t\t});\n//\n// \t\tspin.on('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n//\n// \t\t// spin.on('disconnect', function() {\n// \t\t// \t//callback(spin);\n// \t\t// \tconsole.log('disconnect ble??');\n// \t\t// });\n//\n// \t\tble.connectSpin(spin);\n//\n// \t});\n//\n// \tble.scan();\n// };\n\n\nmodule.exports = Spin;","// var chalk = require('chalk');\nvar chalk = {\n  green: console.log,\n  yellow: console.log,\n  cyan: console.log,\n  magenta: console.log\n};\n\nvar _quiet = process.env.NODE_ENV !== 'dev';\n\nvar logger = {\n  quiet: function quiet(q) {\n    _quiet = q;\n  },\n  log: function log() {\n    if (_quiet) return;\n    var args = Array.prototype.slice.call(arguments);\n    args = args.map(function (arg, index) {\n      if (index === 0 && typeof arg === 'object' && arg.loggerName) {\n        return chalk.green(arg.loggerName);\n      }\n\n      if (typeof arg === 'string') {\n        if (index >= 2 && typeof args[0] === 'object' && args[0].loggerName && typeof args[1] === 'string') return arg;\n        return chalk.cyan(arg);\n      }\n\n      if (typeof arg === 'number') return chalk.magenta(arg);\n      if (arg === null) return chalk.yellow('null');\n      if (typeof arg === 'undefined') return chalk.yellow('undefined');\n      return arg;\n    });\n    console.log.apply(null, args);\n  },\n  create: function create(name, colors) {\n    return function (n) {\n      return function log() {\n        var args = Array.prototype.slice.call(arguments);\n        args.unshift({\n          loggerName: n\n        });\n        logger.log.apply(logger, args);\n      };\n    }(name);\n  }\n};\nmodule.exports = logger;","var EventEmitter = require('events');\n\nvar createLogger = require('./logger').create;\n\nfunction Store(name) {\n  this.constructor();\n  this.log = createLogger(name);\n  this.log('created');\n  this.ids = {};\n}\n\nStore.prototype = new EventEmitter();\nStore.prototype.constructor = EventEmitter;\n\nStore.prototype.destroy = function (id) {\n  this.log('destroying', id);\n  this[id].removeAllListeners('created');\n  this[id].removeAllListeners('update');\n  delete this.ids[id];\n  delete this[id];\n  this.emit('destroyed', id);\n};\n\nStore.prototype.set = function (id, data) {\n  // console.log('set', id, data);\n  if (!id) {\n    console.log('no set id', data);\n    return;\n  }\n\n  var changes = {};\n  var hasChanges = false;\n  var created = false;\n\n  if (!this[id]) {\n    this[id] = data;\n    this.ids[id] = true;\n    this.emit('created', id, data);\n    this.log('created', id, data);\n    hasChanges = true;\n    created = true;\n    changes = data;\n  } else {\n    var s = this[id];\n\n    for (var i in data) {\n      if (s[i] !== data[i]) {\n        hasChanges = true;\n        changes[i] = s[i] = data[i];\n      }\n    }\n  }\n\n  if (hasChanges) {\n    if (!created) {// this.log(id + ' update', changes);\n      // console.log(id + ' update', changes);\n    }\n\n    this.emit('update', id, changes);\n    return changes;\n  } else {\n    return null;\n  }\n};\n\nmodule.exports = Store;","function isColor(c) {\n  return c instanceof Color;\n}\n\nvar colors = require('./colors');\n\nvar Color = function Color() {\n  if (arguments.length === 1 && typeof arguments[0] === 'number' && arguments[0] >= 0 && arguments[0] <= 255) {\n    return this.value = colors.rgb(arguments[0], arguments[0], arguments[0]);\n  }\n\n  if (isColor(arguments[0])) this.value = arguments[0].value;else this.value = arguments.length > 0 ? colors.rgb.apply(null, Array.from(arguments)) : '#000';\n};\n\nColor.prototype = {\n  toString: function toString() {\n    return this.value;\n  },\n  // setters\n\n  /**\n   * Sets the transparency of a color\n   *\n   * @method alpha\n   * @memberof Color\n   * @param {Number} alpha transparency level between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').alpha(0.5);  // returns {value:\"rgba(255,0,0,0.5)\"}\n   *\n   */\n  alpha: function alpha(v) {\n    return new Color(colors.alpha(this.value, v));\n  },\n\n  /**\n   * Increases the \"lightness\" of a color value\n   *\n   * @method lighten\n   * @memberof Color\n   * @param {Number} lightenBy amount to lighten between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').lighten(0.5); // returns {value:\"#FF8080\"}\n   *\n   */\n  lighten: function lighten(v) {\n    return new Color(colors.lighten(this.value, v));\n  },\n\n  /**\n   * Decreases the \"lightness\" of a color value\n   *\n   * @method darken\n   * @memberof Color\n   * @param {Number} darkenBy amount to darken between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').darken(0.5); // returns {value:\"#800000\"}\n   *\n   */\n  darken: function darken(v) {\n    return new Color(colors.darken(this.value, v));\n  },\n\n  /**\n   * Increases the \"saturation\" of a color value\n   *\n   * @method saturate\n   * @memberof Color\n   * @param {Number} saturateBy amount to saturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(125,0,0)').saturate(0.2); // returns {value:\"#7D0000\"}\n   *\n   */\n  saturate: function saturate(v) {\n    return new Color(colors.saturate(this.value, v));\n  },\n\n  /**\n   * Decreases the \"saturation\" of a color value\n   *\n   * @method desaturate\n   * @memberof Color\n   * @param {Number} desaturateBy amount to desaturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(125,0,0).desaturate(0.2); // returns {value:\"#710C0C\"}\n   *\n   */\n  desaturate: function desaturate(v) {\n    return new Color(colors.desaturate(this.value, v));\n  },\n\n  /**\n   * Modify the hue, lightness, and saturation of a color\n   *\n   * @method shiftHSL\n   * @memberof Color\n   * @param {Number} hue amount to change the hue by, between 0 and 1\n   * @param {Number} saturation amount to change the hue by, between 0 and 1\n   * @param {Number} lightness amount to change the hue by, between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHSL(0.1,0.2,0.3); // returns {value:\"#94FF4D\"}\n   *\n   */\n  shiftHSL: function shiftHSL(h, s, l, a) {\n    var c = new Color(colors.shiftHSL(this.value, h, s, l));\n    if (a) c = c.alpha(a);\n    return c;\n  },\n\n  /**\n   * Shifts the \"hue\" of a color value by a given percentage\n   *\n   * @method shiftHue\n   * @memberof Color\n   * @param {Number} hueShift amount to modify the hue by between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHue(0.25); // returns {value:\"#00FF7F\"}\n   *\n   */\n  shiftHue: function shiftHue(v) {\n    return new Color(colors.shiftHue(this.value, v));\n  },\n\n  /**\n   * Shifts the hue of a color closer to another color by a given percentage\n   *\n   * @method combine\n   * @memberof Color\n   * @param {Object} targetColor color string, array, or object\n   * @param {Number} [amount=0.5] how close to the target color between 0 and 1 (0.5 is half-way between)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(0).combine('#fff'); // returns {value:\"#808080\"}\n   * new Color(255,0,0).combine('#00f',0.7); // returns {value:\"#4D00B3\"}\n   *\n   */\n  combine: function combine(t, v) {\n    if (isColor(t)) t = t.value;\n    var c = colors.combine(this.value, t, v);\n    return new Color(c);\n  },\n\n  /**\n   * Shifts the \"hue\" of a color closer to another color by a given percentage\n   *\n   * @method tint\n   * @memberof Color\n   * @param {String} targetColor color string or array\n   * @param {Number} amount amount to shift the hue toward the target color between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').tint('#00f',0.5); // returns {value:\"#F0F\"}\n   * new Color('rgb(0,0,100)').tint('rgb(100,0,0)',0.1); // returns {value:\"#140064\"}\n   *\n   */\n  tint: function tint(t, v) {\n    if (isColor(t)) t = t.value;\n    return new Color(colors.tint(this.value, t, v));\n  },\n\n  /**\n   * Set the \"hue\" of a color\n   *\n   * @method hue\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hue(2/3); // returns {value:\"#00F\"}\n   * new Color('#0f0').hue(1); // returns {value:\"#F00\"}\n   * new Color('#00f').hue(1/3); // returns {value:\"#0F0\"}\n   *\n   */\n  hue: function hue(v) {\n    return new Color(colors.hue(this.value, v));\n  },\n\n  /**\n   * Set the \"saturation\" of a color\n   *\n   * @method saturation\n   * @memberof Color\n   * @param {Number} saturation saturation value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,50,50)').saturation(0); // returns {value:\"#4B4B4B\")\n   * new Color('rgb(50,0,0)').saturation(0.5);  // returns {value:\"#260C0C\")\n   * new Color('rgb(50,50,100)').saturation(1); // returns {value:\"#000096\")\n   *\n   */\n  saturation: function saturation(v) {\n    return new Color(colors.saturation(this.value, v));\n  },\n\n  /**\n   * Set the lightness of a color, how close to white or black the color will be\n   *\n   * @method lightness\n   * @memberof Color\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').lightness(0); // returns {value:\"#000\"}\n   * new Color('rgb(255,0,0)').lightness(0.5); // returns {value:\"#F00\"}\n   * new Color('rgb(255,0,0)').lightness(1); // returns {value:\"#FFF\"}\n   *\n   */\n  lightness: function lightness(v) {\n    return new Color(colors.lightness(this.value, v));\n  },\n\n  /**\n   * Inverts the color\n   *\n   * @method invert\n   * @memberof Color\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').invert(1); // returns {value:\"#0FF\"}  // cyan\n   * new Color('#fff').invert();  // returns {value:\"#000\"}   // black\n   *\n   */\n  invert: function invert() {\n    return new Color(colors.invert(this.value));\n  },\n\n  /**\n   * Modify the red, green, or blue component of a color\n   *\n   * @method rgb\n   * @memberof Color\n   * @param {Number} red red component (0-255)\n   * @param {Number} green green component (0-255)\n   * @param {Number} blue blue component (0-255)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').rgb(null,null,255); // returns {value:\"#F0F\"}\n   * new Color('#0f0').rgb(null,255,null); // returns {value:\"#0F0\"}\n   * new Color('#ff0').rgb(null,null,255); // returns {value:\"#FFF\"}\n   * new Color('#fff').rgb(100);           // returns {value:\"#64FFFF\"}\n   *\n   */\n  rgb: function rgb() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setRGB.apply(null, a));\n  },\n\n  /**\n   * Set the hue, saturation, or lightness of a color and return the new color\n   *\n   * @method hsl\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @param {Number} saturation saturation value between 0 and 1\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hsl(null,0.5,0.5); // returns {value:\"#BF4040\"}\n   *\n   */\n  hsl: function hsl() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setHSL.apply(null, a));\n  },\n\n  /**\n   * Set the red component of a color\n   *\n   * @method red\n   * @memberof Color\n   * @param {Number} red red component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,255)').red(255);  // returns {value:\"#F0F\"}\n   *\n   */\n  red: function red(r) {\n    return this.rgb(r);\n  },\n\n  /**\n   * Set the green component of a color\n   *\n   * @method green\n   * @memberof Color\n   * @param {Number} green green component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').green(255);  // returns {value:\"#FF0\"}\n   *\n   */\n  green: function green(g) {\n    return this.rgb(null, g);\n  },\n\n  /**\n   * Set the blue component of a color\n   *\n   * @method blue\n   * @memberof Color\n   * @param {Number} blue blue component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#FF0').blue(255);  // returns {value:\"#FFF\"}\n   *\n   */\n  blue: function blue(b) {\n    return this.rgb(null, null, b);\n  },\n  // getters\n\n  /**\n   * Returns the transparency of a color\n   *\n   * @method getAlpha\n   * @memberof Color\n   * @return {Number} alpha transparency level between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getAlpha(); // returns 0\n   * new Color('rgba(255,0,0,0.5)').getAlpha(); // returns 0.5\n   *\n   */\n  getAlpha: function getAlpha() {\n    return colors.getAlpha(this.value);\n  },\n\n  /**\n   * Returns the computed red, green, blue, and alpha values as an array\n   *\n   * @method getRGB\n   * @memberof Color\n   * @return {Number[]} rgb array\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getRGB(); // returns [255,0,0]\n   * new Color('rgba(255,0,0,0.5)').getRGB()(); // returns [255,0,0,0.5]\n   *\n   */\n  getRGB: function getRGB() {\n    return colors.getRGB(this.value);\n  },\n\n  /**\n   * Returns the hexidecimal value of the color\n   *\n   * @method getHex\n   * @memberof Color\n   * @param {Boolean} full return the full 6 character hexidecimal value (eg. do not shorten #FFFFFF to #FFF)\n   * @return {String} hex color value\n   * @instance\n   *\n   * @example\n   * new Color('rgba(255,0,0,0.5)').getHex(); // returns \"#F0F\"\n   * new Color('rgba(255,0,0,0.5)').getHex(true); // returns \"#FF0000\"\n   *\n   */\n  getHex: function getHex(full) {\n    return colors.getHex(this.value, full);\n  },\n\n  /**\n   * Returns the red component of a color string\n   *\n   * @method getRed\n   * @memberof Color\n   * @return {Number} red component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getRed(); // returns 255\n   *\n   */\n  getRed: function getRed() {\n    return this.getRGB()[0];\n  },\n\n  /**\n   * Returns the green component of a color string\n   *\n   * @method getGreen\n   * @memberof Color\n   * @return {Number} green component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getGreen(); // returns 255\n   *\n   */\n  getGreen: function getGreen() {\n    return this.getRGB()[1];\n  },\n\n  /**\n   * Returns the blue component of a color string\n   *\n   * @method getBlue\n   * @memberof Color\n   * @return {Number} blue component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getBlue(); // returns 255\n   *\n   */\n  getBlue: function getBlue() {\n    return this.getRGB()[2];\n  },\n\n  /**\n   * Returns an [h,s,l] array from color string\n   *\n   * @method getHSL\n   * @memberof Color\n   * @return {Number[]} hsl array of [hue,saturation,lightness]\n   * @instance\n   *\n   * @example\n   * new Color('#f00').getHSL(); // returns [0,1,0.5]\n   *\n   */\n  getHSL: function getHSL() {\n    return colors.getHSL(this.value);\n  },\n\n  /**\n   * Return the \"hue\" of a color\n   *\n   * @method getHue\n   * @memberof Color\n   * @return {Number} hue hue value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#a1b2c1').getHue(); // returns {value:\"0.578125\"}\n   * new Color('#f00').getHue(); // returns 0\n   * new Color('#0f0').getHue(); // returns 0.3333333333333333\n   * new Color('#00f').getHue(); // returns 0.6666666666666666\n   *\n   */\n  getHue: function getHue() {\n    return this.getHSL()[0];\n  },\n\n  /**\n   * Return the \"saturation\" of a color\n   *\n   * @method getSaturation\n   * @memberof Color\n   * @return {Number} saturation saturation value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,100,100)').getSaturation(); // returns 0\n   * new Color('rgb(100,50,100)').getSaturation();  // returns 0.8333333333333334\n   * new Color('rgb(100,0,100)').getSaturation();   // returns 1\n   *\n   */\n  getSaturation: function getSaturation() {\n    return this.getHSL()[1];\n  },\n\n  /**\n   * Return the lightness of a color (how close to white or black the color is)\n   *\n   * @method getLightness\n   * @memberof Color\n   * @return {Number} lightness lightness value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,0)').getLightness();       // returns 0\n   * new Color('rgb(100,50,100)').getLightness();  // returns 0.29411764705882354\n   * new Color('rgb(255,255,255)').getLightness(); // returns 1\n   *\n   */\n  getLightness: function getLightness() {\n    return this.getHSL()[2];\n  }\n};\nColor.prototype.rgba = Color.prototype.rgb;\nColor.prototype.hsla = Color.prototype.hsl;\nmodule.exports = Color;","import React, {Component} from 'react';\nimport Speak from 'jaxcore-speak';\nimport {MonauralScope} from 'jaxcore-client';\n\nglobal.Speak = Speak;\n\n// Add a custom ESpeak voice\nSpeak.addProfile({\n\t\"Custom ESpeak Voice\": {\n\t\t\"name\": \"Custom ESpeak Voice\",\n\t\t\"engine\": \"espeak\",\n\t\t\"default\": {\n\t\t\tamplitude: 100,\n\t\t\twordgap: 1,\n\t\t\tpitch: 40,\n\t\t\tspeed: 150,\n\t\t\tvariant: 'm7'\n\t\t},\n\t\t\"high\": {\n\t\t\tpitch: 55\n\t\t},\n\t\t\"low\": {\n\t\t\tpitch: 5\n\t\t},\n\t\t\"slow\": {\n\t\t\tspeed: 100\n\t\t},\n\t\t\"fast\": {\n\t\t\tspeed: 200\n\t\t}\n\t}\n});\n\n// Add a custom SAM voice\n// Note: in SAM the pitch and speed is inverted relative to ESpeak (eg. use higher pitch number for a deep voice)\nSpeak.addProfile({\n\t\"Custom SAM Voice\": {\n\t\t\"name\": \"Custom SAM Voice\",\n\t\t\"engine\": \"sam\",\n\t\t\"default\": {\n\t\t\tspeed: 82,\n\t\t\tpitch: 72,\n\t\t\tthroat: 110,\n\t\t\tmouth: 105\n\t\t},\n\t\t\"high\": {\n\t\t\tpitch: 50\n\t\t},\n\t\t\"low\": {\n\t\t\tpitch: 100\n\t\t},\n\t\t\"slow\": {\n\t\t\tspeed: 130\n\t\t},\n\t\t\"fast\": {\n\t\t\tspeed: 60\n\t\t}\n\t}\n});\n\nSpeak.setWorkers({\n\t'espeak': 'webworkers/espeak-all-worker.js',\n\t'sam': 'webworkers/sam-worker.js'\n});\n\n// if you only need English, French, or Spanish use the language specific worker build\n// Speak.setWorkers({\n// \t'espeak': '/webworkers/espeak-en-worker.js',\n// });\n// Speak.setWorkers({\n// \t'espeak': '/webworkers/espeak-es-worker.js',\n// });\n// Speak.setWorkers({\n// \t'espeak': '/webworkers/espeak-fr-worker.js',\n// });\n\nvar speakVoice = new Speak({\n\tlanguage: 'en'\n});\nglobal.speakVoice = speakVoice;\n\nclass SpeakApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.canvasRef = React.createRef();\n\t\t\n\t\tthis.state = {\n\t\t\tprofile: 'Jack',\n\t\t\tspeed: 'default',\n\t\t\tpitch: 'default',\n\t\t\ttext: '',\n\t\t\tlanguage: 'en/en',\n\t\t\tlanguageEnabled: true,\n\t\t\tspoken: [\n\t\t\t\t{\n\t\t\t\t\tprofile: 'Jack',\n\t\t\t\t\tspeed: 'default',\n\t\t\t\t\tpitch: 'default',\n\t\t\t\t\ttext: 'Hello World',\n\t\t\t\t\tlanguage: 'en/en'\n\t\t\t\t}\n\t\t\t],\n\t\t\tspokenIndex: null,\n\t\t\tcode: '',\n\t\t\tviewCode: false\n\t\t};\n\t\t\n\t\tglobal.app = this;\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.updateCode();\n\t\tthis.monoScope = new MonauralScope(this.canvasRef.current);\n\t\tspeakVoice.setVisualizer(this.monoScope);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Jaxcore Speak</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<canvas ref={this.canvasRef} width=\"300\" height=\"300\"/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\tVoice: {this.renderProfileSelect()}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tSpeed: {this.renderSpeedSelect()}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tPitch: {this.renderPitchSelect()}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tLanguage: {this.renderLanguageSelect()}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<input size=\"40\" placeholder=\"Type something then press Enter\" onKeyUp={e => this.onKeyUp(e)}\n\t\t\t\t\t\t   onChange={e => this.onChangeText(e)} value={this.state.text}/>\n\t\t\t\t\t<button onClick={e => this.sayText(true)}>Speak</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<ul>\n\t\t\t\t\t{this.state.spoken.map((s, i) => {\n\t\t\t\t\t\treturn (<li key={i}><a href=\"/\" onClick={e => this.clickSpoken(e, i)}>{s.text}</a> ({s.profile} {s.speed} {s.pitch})</li>);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={e => this.clear()}>Clear</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={e => this.setState({viewCode:!this.state.viewCode})}>\n\t\t\t\t\t\t{this.state.viewCode? 'Hide Code':'View Code'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{this.renderCode()}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trenderCode() {\n\t\tif (this.state.viewCode) {\n\t\t\treturn (<pre>{this.state.code}</pre>);\n\t\t}\n\t}\n\t\n\tclear(e) {\n\t\tthis.setState({\n\t\t\tspoken: []\n\t\t})\n\t}\n\t\n\tclickSpoken(e, i) {\n\t\te.preventDefault();\n\t\tconst o = this.state.spoken[i];\n\t\tthis.sayIndex(i);\n\t\tconst languageEnabled = Speak.profiles[o.profile].engine === 'espeak';\n\t\tthis.setState({\n\t\t\ttext: o.text,\n\t\t\tprofile: o.profile,\n\t\t\tspeed: o.speed,\n\t\t\tpitch: o.pitch,\n\t\t\tlanguage: o.language,\n\t\t\tlanguageEnabled\n\t\t}, () => {\n\t\t\tthis.updateCode(i);\n\t\t});\n\t}\n\t\n\tonKeyUp(e) {\n\t\tif (e.keyCode === 13) { // Enter\n\t\t\te.preventDefault();\n\t\t\tthis.sayText();\n\t\t\treturn;\n\t\t}\n\t\tthis.updateCode();\n\t\tconsole.log('keydown', e);\n\t}\n\t\n\trenderLanguageSelect() {\n\t\tif (this.state.languageEnabled) {\n\t\t\tconst o = [];\n\t\t\tfor (let lang in Speak.languageIds) {\n\t\t\t\to.push(<option key={lang} value={lang}>{Speak.languageIds[lang]}</option>);\n\t\t\t}\n\t\t\treturn (<select onChange={e => this.selectLanguage(e)} value={this.state.language}>\n\t\t\t\t{o}\n\t\t\t</select>);\n\t\t}\n\t\telse {\n\t\t\treturn \"none\";\n\t\t}\n\t}\n\t\n\tselectLanguage(e) {\n\t\tlet language = e.target.options[e.target.selectedIndex].value;\n\t\tthis.setState({\n\t\t\tlanguage\n\t\t}, () => {\n\t\t\tthis.updateCode();\n\t\t});\n\t}\n\t\n\tupdateCode(i, callback) {\n\t\tif (typeof i === 'undefined') i = null;\n\t\tconst code = this.generateCode(i);\n\t\tthis.setState({\n\t\t\tcode\n\t\t}, callback);\n\t}\n\t\n\trenderSpeedSelect() {\n\t\treturn (<select onChange={e => this.selectSpeed(e)} value={this.state.speed}>\n\t\t\t<option value=\"default\">default</option>\n\t\t\t<option value=\"fast\">fast</option>\n\t\t\t<option value=\"slow\">slow</option>\n\t\t</select>);\n\t}\n\trenderPitchSelect() {\n\t\treturn (<select onChange={e => this.selectPitch(e)} value={this.state.pitch}>\n\t\t\t<option value=\"default\">default</option>\n\t\t\t<option value=\"low\">low</option>\n\t\t\t<option value=\"high\">high</option>\n\t\t</select>);\n\t}\n\t\n\tselectPitch(e) {\n\t\tlet pitch = e.target.options[e.target.selectedIndex].value;\n\t\tthis.setState({\n\t\t\tpitch\n\t\t}, () => {\n\t\t\tthis.updateCode();\n\t\t});\n\t}\n\tselectSpeed(e) {\n\t\tlet speed = e.target.options[e.target.selectedIndex].value;\n\t\tthis.setState({\n\t\t\tspeed\n\t\t}, () => {\n\t\t\tthis.updateCode();\n\t\t});\n\t}\n\t\n\trenderProfileSelect() {\n\t\tlet espeak = [];\n\t\tfor (let p in speakVoice.profiles) {\n\t\t\tif (Speak.profiles[p].engine === 'espeak') {\n\t\t\t\tespeak.push((<option key={p} value={p}>{p}</option>));\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet sam = [];\n\t\tfor (let p in speakVoice.profiles) {\n\t\t\tif (Speak.profiles[p].engine === 'sam') {\n\t\t\t\tsam.push((<option key={p} value={p}>{p}</option>));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (<select onChange={e => this.selectProfile(e)} value={this.state.profile}>\n\t\t\t<optgroup label=\"- ESpeak Voices -\">\n\t\t\t\t{espeak}\n\t\t\t</optgroup>\n\t\t\t<optgroup label=\"- SAM Voices -\">\n\t\t\t\t{sam}\n\t\t\t</optgroup>\n\t\t</select>);\n\t}\n\t\n\tselectProfile(e) {\n\t\tconst profile = e.target.options[e.target.selectedIndex].value;\n\t\tconst languageEnabled = Speak.profiles[profile].engine === 'espeak';\n\t\tthis.setState({\n\t\t\tprofile,\n\t\t\tlanguageEnabled\n\t\t}, () => {\n\t\t\tthis.updateCode();\n\t\t});\n\t}\n\t\n\tsayText(keepText) {\n\t\tlet text = this.state.text;\n\t\tif (text.length === 0) return;\n\t\t\n\t\tconst profile = this.state.profile;\n\t\tconst speed = this.state.speed;\n\t\tconst pitch = this.state.pitch;\n\t\tconst language = this.state.language;\n\t\t\n\t\t\n\t\tconst saying = {\n\t\t\ttext,\n\t\t\tspeed,\n\t\t\tpitch,\n\t\t\tlanguage,\n\t\t\tprofile\n\t\t};\n\t\t\n\t\tconst previousSaying = this.state.spoken[this.state.spoken.length-1];\n\t\tlet isSame = false;\n\t\tif (previousSaying && previousSaying.text === text &&\n\t\t\tpreviousSaying.speed === speed &&\n\t\t\tpreviousSaying.pitch === pitch &&\n\t\t\tpreviousSaying.language === language &&\n\t\t\tpreviousSaying.profile === profile) {\n\t\t\tisSame = true;\n\t\t}\n\t\t\n\t\tconst spoken = this.state.spoken;\n\t\tlet spokenIndex;\n\t\tif (!isSame) {\n\t\t\tspokenIndex = this.state.spoken.length;\n\t\t\tspoken.push(saying);\n\t\t}\n\t\telse spokenIndex = this.state.spoken.length - 1;\n\t\t\n\t\tif (!keepText) text = '';\n\t\t\n\t\tthis.setState({\n\t\t\tspoken,\n\t\t\tspokenIndex,\n\t\t\ttext\n\t\t}, () => {\n\t\t\tthis.updateCode();\n\t\t\tthis.sayIndex(spokenIndex);\n\t\t});\n\t\t\n\t}\n\t\n\tsayIndex(index) {\n\t\tconst saying = this.state.spoken[index];\n\t\t\n\t\tlet replacements = [];\n\t\t\n\t\t// this is so the names are pronounced properly (eg. Priss instead of Pris)\n\t\tif (Speak.profiles[saying.profile].phoneticName) {\n\t\t\treplacements.push([saying.profile, Speak.profiles[saying.profile].phoneticName]);\n\t\t}\n\t\t\n\t\tconst options = {\n\t\t\tprofile: saying.profile,\n\t\t\tlanguage: saying.language,\n\t\t\treplacements,\n\t\t};\n\t\tif (saying.speed !== 'default') options[saying.speed] = true;\n\t\tif (saying.pitch !== 'default') options[saying.pitch] = true;\n\t\t\n\t\tthis.colors = {\n\t\t\tJack: '255,0,0',\n\t\t\tPris: '255,255,0',\n\t\t\tRoy: '0,255,0',\n\t\t\tXenu: '255,0,255',\n\t\t\tCylon: '128,128,128',\n\t\t\tLeon: '128,0,0',\n\t\t\tRachel: '128,128,0',\n\t\t\tZhora: '0,128,0',\n\t\t\tSam: '0,128,128',\n\t\t\tElf: '128,0,128',\n\t\t\tRobo: '255,0,128',\n\t\t\tGranny: '255,128,0'\n\t\t};\n\t\tlet color = this.colors[saying.profile] || '0,0,255';\n\t\t\n\t\tthis.monoScope.theme.strokeColor = 'rgb('+color+')';\n\t\tthis.monoScope.theme.clipColor = 'black';\n\t\tthis.monoScope.theme.fillColor = 'rgba('+color+',0.2)';\n\t\tthis.monoScope.theme.dotColor = 'rgb('+color+')';\n\t\t\n\t\tconsole.log('Speak: started');\n\t\t\n\t\tthis.setState({\n\t\t\tisSpeaking: true\n\t\t}, () => {\n\t\t\tspeakVoice.speak(saying.text, options).then(() => {\n\t\t\t\tconsole.log('Speak: stopped');\n\t\t\t\tthis.setState({\n\t\t\t\t\tisSpeaking: false\n\t\t\t\t});\n\t\t\t})\n\t\t});\n\t}\n\t\n\tonChangeText(e) {\n\t\tthis.setState({\n\t\t\ttext: e.target.value\n\t\t}, () => {\n\t\t\tthis.updateCode();\n\t\t});\n\t}\n\t\n\tgenerateCode(i) {\n\t\tlet saying;\n\t\tif (i === null || this.state.spoken.length===0) saying = this.state;\n\t\telse saying = this.state.spoken[i];\n\t\t\n\t\tconst voice_id = Speak.getLanguageId(saying.language);\n\t\tconst voice_uid = saying.language.replace('en/','').replace('-','_');\n\t\t\n\t\tlet custom = '';\n\t\tif (saying.profile === 'Custom ESpeak Voice') {\n\t\t\tcustom = \"Speak.addProfile({\\n\" +\n\t\t\t\t\"\\t\\\"Custom ESpeak Voice\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\\"name\\\": \\\"Custom ESpeak Voice\\\",\\n\" +\n\t\t\t\t\"\\t\\t\\\"engine\\\": \\\"espeak\\\",\\n\" +\n\t\t\t\t\"\\t\\t\\\"default\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tamplitude: 100,\\n\" +\n\t\t\t\t\"\\t\\t\\twordgap: 1,\\n\" +\n\t\t\t\t\"\\t\\t\\tpitch: 40,\\n\" +\n\t\t\t\t\"\\t\\t\\tspeed: 150,\\n\" +\n\t\t\t\t\"\\t\\t\\tvariant: 'm7'\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"high\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tpitch: 55\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"low\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tpitch: 5\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"slow\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tspeed: 100\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"fast\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tspeed: 200\\n\" +\n\t\t\t\t\"\\t\\t}\\n\" +\n\t\t\t\t\"\\t}\\n\" +\n\t\t\t\t\"});\\n\";\n\t\t}\n\t\telse if (saying.profile === 'Custom SAM Voice') {\n\t\t\tcustom = \"Speak.addProfile({\\n\" +\n\t\t\t\t\"\\t\\\"Custom SAM Voice\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\\"name\\\": \\\"Custom SAM Voice\\\",\\n\" +\n\t\t\t\t\"\\t\\t\\\"engine\\\": \\\"sam\\\",\\n\" +\n\t\t\t\t\"\\t\\t\\\"default\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tspeed: 82,\\n\" +\n\t\t\t\t\"\\t\\t\\tpitch: 72,\\n\" +\n\t\t\t\t\"\\t\\t\\tthroat: 110,\\n\" +\n\t\t\t\t\"\\t\\t\\tmouth: 105\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"high\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tpitch: 50\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"low\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tpitch: 100\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"slow\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tspeed: 130\\n\" +\n\t\t\t\t\"\\t\\t},\\n\" +\n\t\t\t\t\"\\t\\t\\\"fast\\\": {\\n\" +\n\t\t\t\t\"\\t\\t\\tspeed: 60\\n\" +\n\t\t\t\t\"\\t\\t}\\n\" +\n\t\t\t\t\"\\t}\\n\" +\n\t\t\t\t\"});\\n\";\n\t\t}\n\t\t\n\t\tlet lang = '';\n\t\tlet langimport = '';\n\t\tif (Speak.profiles[saying.profile].engine === 'espeak') {\n\t\t\tlang = \"\\tlanguage: \\\"\" + saying.language + \"\\\"\\n\";\n\t\t}\n\t\t\n\t\tif (voice_id === 'en/en') {\n\t\t\tlangimport = 'Speak.setWorkers({\\n' +\n\t\t\t\t'\\t\\'espeak\\': \\'webworkers/espeak-en-worker.js\\',\\n' +\n\t\t\t\t'\\t\\'sam\\': \\'webworkers/sam-worker.js\\'\\n' +\n\t\t\t\t'});\\n';\n\t\t}\n\t\telse {\n\t\t\tlangimport = 'Speak.setWorkers({\\n' +\n\t\t\t\t'\\t\\'espeak\\': \\'webworkers/espeak-all-worker.js\\',\\n' +\n\t\t\t\t'\\t\\'sam\\': \\'webworkers/sam-worker.js\\'\\n' +\n\t\t\t\t'});\\n';\n\t\t}\n\t\tlet s = \"import Speak from \\\"jaxcore-speak\\\";\\n\" +\n\t\t\tlangimport+\n\t\t\tcustom+\n\t\t\t\"var voice = new Speak({\\n\" +\n\t\t\t\"\\tprofile: \\\"\"+saying.profile+\"\\\",\\n\" +\n\t\t\tlang+\n\t\t\t\"});\\n\";\n\t\t\n\t\tif (saying.speed === 'default' && saying.pitch === 'default') {\n\t\t\ts += \"voice.speak(\\\"\"+saying.text+\"\\\");\";\n\t\t}\n\t\telse {\n\t\t\tlet intonations = [];\n\t\t\tif (saying.speed !== 'default') intonations.push(\"  \" + saying.speed+\": true\");\n\t\t\tif (saying.pitch !== 'default') intonations.push(\"  \" + saying.pitch+\": true\");\n\t\t\ts += \"voice.speak(\\\"\"+saying.text+\"\\\", {\\n\" +\n\t\t\t\tintonations.join(\",\\n\")+\"\\n\"+\n\t\t\t\t\"});\";\n\t\t}\n\t\t\n\t\treturn s;\n\t}\n}\n\nexport default SpeakApp;\n","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\n// The object previously known as Client (minus bindInterface)\nimport EventEmitter from 'events';\n\nvar CollectionModel =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(CollectionModel, _EventEmitter);\n\n  function CollectionModel() {\n    _classCallCheck(this, CollectionModel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CollectionModel).apply(this, arguments));\n  }\n\n  _createClass(CollectionModel, [{\n    key: \"setStore\",\n    value: function setStore(store, singleton) {\n      if (singleton) {\n        this.store = null;\n        this.state = store;\n      } else {\n        this.store = store;\n      }\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(data) {\n      if (typeof arguments[0] === 'string') {\n        var type = arguments[0];\n        data = arguments[1];\n        var d = Object.assign({}, this.state[type]);\n        this.state[type] = d;\n        var changes = {};\n        changes[type] = {};\n\n        for (var name in data) {\n          if (d[name] !== data[name]) {\n            d[name] = data[name];\n            changes[type][name] = data[name];\n          }\n        }\n\n        return changes;\n      } else {\n        if (this.store) {\n          var id = this.state ? this.state.id : data.id;\n          var changes = this.store.set(id, data);\n          this.state = this.store[id];\n          this.emit('update', changes);\n          return changes;\n        } else {\n          return this._setState(data);\n        }\n      }\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(data) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        // this.emit('update', this.state, changes);\n        this.emit('update', changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state.id in this.store ? this.store[this.state.id] : {};\n    }\n  }]);\n\n  return CollectionModel;\n}(EventEmitter);\n\nexport default CollectionModel;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Listener =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Listener, _EventEmitter);\n\n  function Listener(postCommand) {\n    var _this;\n\n    _classCallCheck(this, Listener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Listener).call(this));\n    _this.postCommand = postCommand;\n    return _this;\n  }\n\n  _createClass(Listener, [{\n    key: \"start\",\n    value: function start() {\n      console.log('listen start');\n      this.postCommand({\n        listenCommand: {\n          command: 'start'\n        }\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      console.log('listen stop');\n      this.postCommand({\n        listenCommand: {\n          command: 'stop'\n        }\n      });\n    }\n  }, {\n    key: \"startContinuous\",\n    value: function startContinuous(options) {\n      console.log('startContinuous', options);\n      this.postCommand({\n        listenCommand: {\n          command: 'start-continuous',\n          arguments: options\n        }\n      });\n    }\n  }, {\n    key: \"stopContinuous\",\n    value: function stopContinuous() {\n      this.postCommand({\n        listenCommand: {\n          command: 'stop-continuous'\n        }\n      });\n    }\n  }, {\n    key: \"recognizedText\",\n    value: function recognizedText(text) {\n      this.emit('recognized', text);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.emit('start', text);\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.emit('stop', text);\n    }\n  }, {\n    key: \"onStartContinuous\",\n    value: function onStartContinuous() {\n      this.emit('start-continuous', text);\n    }\n  }, {\n    key: \"onStopContinuous\",\n    value: function onStopContinuous() {\n      this.emit('stop-continuous', text);\n    }\n  }]);\n\n  return Listener;\n}(EventEmitter);\n\nexport default Listener;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar State =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(State, _EventEmitter);\n\n  function State(defaults) {\n    var _this;\n\n    _classCallCheck(this, State);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(State).call(this));\n    _this.state = defaults || {};\n    return _this;\n  }\n\n  _createClass(State, [{\n    key: \"setState\",\n    value: function setState(data, callback) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        this.emit('update', this.state, changes);\n        if (callback) callback(changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.addListener('update', handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this.removeListener('update', handler);\n    }\n  }]);\n\n  return State;\n}(EventEmitter);\n\nexport default State;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Sound =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Sound, _EventEmitter);\n\n  function Sound(url, options) {\n    var _this;\n\n    _classCallCheck(this, Sound);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sound).call(this));\n    if (!options) options = {};\n    if (options.context) _this.context = options.context;\n\n    if (options.source) {\n      _this.source = options.source;\n    }\n\n    _this.connected = false;\n    _this.loaded = false;\n    _this.looping = false;\n\n    if (options.autoplay) {\n      _this.connect();\n\n      _this.on('load', function () {\n        if (options.loop) {\n          _this.loop();\n        } else _this.play(options.callback);\n      });\n    }\n\n    if (typeof url === 'string') {\n      _this.url = url;\n\n      _this.load();\n    } else if (typeof url === 'object') {\n      _this.loadArrayBuffer(url);\n    }\n\n    return _this;\n  }\n\n  _createClass(Sound, [{\n    key: \"connect\",\n    value: function connect() {\n      if (!this.context) {\n        this.createContext(); // this.context = new AudioContext();\n        // this.reset();\n      } // if (!this.source) {\n      // \tthis.source = this.context.createBufferSource();\n      // }\n\n\n      if (!this.source.buffer) this.source.buffer = this.buffer;\n      this.source.connect(this.context.destination);\n      this.connected = true;\n    }\n  }, {\n    key: \"loadArrayBuffer\",\n    value: function loadArrayBuffer(data) {}\n  }, {\n    key: \"load\",\n    value: function load() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open('GET', this.url, true);\n      request.responseType = 'arraybuffer';\n\n      request.onload = function () {\n        _this2.response = request.response;\n\n        if (_this2.context) {\n          // debugger;\n          _this2.loadData();\n        } else {\n          console.log('loaded no context', _this2.url);\n        }\n      };\n\n      request.send();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      if (!this.response) {\n        debugger;\n      }\n\n      this.context.decodeAudioData(this.response, function (response) {\n        _this3.buffer = response;\n\n        if (_this3.source) {\n          // debugger;\n          _this3.source.buffer = _this3.buffer;\n        }\n\n        _this3.loaded = true;\n\n        _this3.emit('load');\n      }, function (e) {\n        console.error('Sound: failed to load', this.url); // this.emit('error', e);\n      });\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      this.context = new AudioContext();\n      this.source = this.context.createBufferSource();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.createContext();\n      this.connect(); // this.source.buffer = this.buffer;\n      // this.source.connect(this.context.destination);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.source.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.source.resume();\n    }\n  }, {\n    key: \"play\",\n    value: function play(callback) {\n      var _this4 = this;\n\n      if (this.isPlaying) {\n        console.log('isPlaying');\n        return;\n      }\n\n      if (!this.loaded) {\n        if (!this.context) {\n          this.createContext();\n        }\n\n        this.once('load', function () {\n          _this4.connect();\n\n          _this4.source.loop = _this4.looping;\n\n          _this4.source.onended = function () {\n            _this4.stop();\n\n            if (callback) callback();\n          };\n\n          _this4.isPlaying = true;\n\n          _this4.source.start(0);\n        });\n        this.loadData();\n      } else {\n        if (!this.connected) {\n          // debugger;\n          this.connect();\n        }\n\n        this.source.onended = function () {\n          // debugger;\n          _this4.stop();\n\n          if (callback) callback();\n        };\n\n        this.isPlaying = true;\n        this.source.start(0);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isPlaying = false;\n      this.source.stop();\n      this.source.disconnect();\n      this.context.close();\n      this.connected = false;\n      this.looping = false;\n      this.reset();\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      this.looping = true;\n      this.play(); // if (!this.loaded) {\n      // \tthis.once('load', () => {\n      // \t\tthis.connect();\n      // \t\tthis.source.loop = true;\n      // \t\tthis.source.start(0);\n      // \t});\n      // \tthis.load();\n      // }\n      // else {\n      // \tif (!this.connected) this.connect();\n      // }\n      // this.source.loop = true;\n      // this.source.start(0);\n    }\n  }]);\n\n  return Sound;\n}(EventEmitter);\n\nexport default Sound;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport EventEmitter from 'events';\n\nvar MonauralScope =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(MonauralScope, _EventEmitter);\n\n  function MonauralScope(canvas, options) {\n    var _this;\n\n    _classCallCheck(this, MonauralScope);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonauralScope).call(this));\n    if (!options) options = {};\n    _this.canvas = canvas;\n    _this.width = _this.canvas.width;\n    _this.height = _this.canvas.height;\n    _this.audioContext = null;\n    _this.meter = null;\n    _this.mediaStreamSource = null;\n    _this._draw = _this.draw.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isRecording = false;\n\n    _this.setTheme({\n      lineWidth: options.lineWidth || 3,\n      strokeColor: options.strokeColor || '#FF0000',\n      clipColor: options.clipColor || options.strokeColor || '#FF0000',\n      fillColor: options.fillColor || 'rgba(255,0,0,0.1)',\n      bgOnColor: options.bgOnColor || null,\n      bgOffColor: options.bgOffColor || null,\n      dotColor: options.dotColor || '#FF0000',\n      dotSize: options.dotSize || 3,\n      background: options.background || null\n    });\n\n    return _this;\n  }\n\n  _createClass(MonauralScope, [{\n    key: \"setTheme\",\n    value: function setTheme(options) {\n      this.theme = options;\n      this.draw();\n    }\n  }, {\n    key: \"createAudioMeter\",\n    value: function createAudioMeter(audioContext, clipLevel, averaging, clipLag) {\n      // this.audioContext = audioContext;\n      var processor = audioContext.createScriptProcessor(512); //this.processor = processor;\n\n      processor.onaudioprocess = function (event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var bufLength = buf.length;\n        var sum = 0;\n        var x; // Do a root-mean-square on the samples: sum up the squares...\n\n        for (var i = 0; i < bufLength; i++) {\n          x = buf[i];\n\n          if (Math.abs(x) >= this.clipLevel) {\n            this.clipping = true;\n            this.lastClip = window.performance.now();\n          }\n\n          sum += x * x;\n        } // ... then take the square root of the sum.\n\n\n        var rms = Math.sqrt(sum / bufLength); // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n\n        this.volume = Math.max(rms, this.volume * this.averaging);\n        if (!this.maxVolume) this.maxVolume = this.volume;\n        this.maxVolume = Math.max(this.volume, this.maxVolume);\n      };\n\n      processor.clipping = false;\n      processor.lastClip = 0;\n      processor.volume = 0;\n      processor.clipLevel = clipLevel || 0.99; //0.98;\n\n      processor.averaging = averaging || 0.97; //0.95;\n\n      processor.clipLag = clipLag || 500; //750;\n\n      processor.connect(audioContext.destination);\n\n      processor.checkClipping = function () {\n        if (!this.clipping) return false;\n        if (this.lastClip + this.clipLag < window.performance.now()) this.clipping = false;\n        return this.clipping;\n      };\n\n      processor.shutdown = function () {\n        this.disconnect();\n        this.onaudioprocess = null;\n      };\n\n      return processor;\n    }\n  }, {\n    key: \"setIsRecording\",\n    value: function setIsRecording(isRecording) {\n      if (this.isRecording === isRecording) {\n        console.log('same');\n        return;\n      }\n\n      this.isRecording = isRecording;\n      if (isRecording) this.startRecording();else this.stopRecording();\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (this.isRecording) {\n        // if (this.audioContext) {\n        // \tif (this.meter) {\n        // \t\tthis.meter.disconnect(this.audioContext.destination);\n        // \t}\n        // } else {\n        // \tconsole.log('error: no audioContext');\n        // }\n        if (this.mediaStreamSource && this.meter) {\n          this.mediaStreamSource.disconnect(this.meter);\n        }\n\n        if (this.meter) {\n          this.meter.shutdown();\n        }\n\n        if (this.audioContext) {\n          this.audioContext.close();\n        }\n      }\n\n      this.isRecording = false;\n      this.isDrawing = false;\n    } // start and stop the mic to bring up the request dialog\n\n  }, {\n    key: \"requestMic\",\n    value: function requestMic() {\n      var _this2 = this;\n\n      this.startRecording(function () {\n        // sucess\n        _this2.stopRecording();\n      }, function () {\n        // error\n        _this2.stopRecording();\n      });\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording(successcb, errorcb) {\n      var _this3 = this;\n\n      if (this.isRecording) {\n        console.log('already recording');\n        return;\n      }\n\n      console.log('startRecording');\n      this.isRecording = true;\n      var audioContext = new AudioContext();\n      this.audioContext = audioContext;\n\n      var success = function success(stream) {\n        console.log('startRecording success');\n\n        if (_this3.audioContext) {\n          try {\n            _this3.mediaStreamSource = audioContext.createMediaStreamSource(stream);\n            _this3.meter = _this3.createAudioMeter(audioContext);\n\n            _this3.mediaStreamSource.connect(_this3.meter);\n\n            _this3.startDrawing();\n\n            if (successcb) successcb();\n          } catch (e) {\n            if (errorcb) errorcb();\n          }\n        }\n      };\n\n      var fail = function fail(e) {\n        console.log('startRecording fail'); //debugger;\n\n        if (errorcb) errorcb();\n      };\n\n      try {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.mediaDevices.getUserMedia; // ask for an audio input\n\n        navigator.getUserMedia({\n          \"audio\": {\n            \"mandatory\": {\n              \"googEchoCancellation\": \"false\",\n              \"googAutoGainControl\": \"false\",\n              \"googNoiseSuppression\": \"false\",\n              \"googHighpassFilter\": \"false\"\n            },\n            \"optional\": []\n          }\n        }, success, fail);\n      } catch (e) {\n        alert('getUserMedia threw exception :' + e);\n      }\n    }\n  }, {\n    key: \"loadAudioData\",\n    value: function loadAudioData(audioContext, source, callback) {\n      var _this4 = this;\n\n      this.audioContext = audioContext;\n      this.source = source;\n      source.connect(audioContext.destination);\n      var meter = this.createAudioMeter(audioContext);\n      this.meter = meter;\n      source.connect(this.meter);\n\n      source.onended = function () {\n        _this4.isPlaying = false; // source.disconnect(audioContext.destination);\n\n        source.disconnect();\n        delete source.buffer; // this.meter.shutdown();\n\n        source.stop();\n\n        _this4.stopDrawing();\n\n        audioContext.close(); // source.disconnect();\n\n        if (callback) callback();\n      };\n\n      this.isPlaying = true;\n      this.startDrawing();\n      source.start(0);\n    }\n  }, {\n    key: \"startDrawing\",\n    value: function startDrawing() {\n      this.isDrawing = true;\n      this.draw();\n    }\n  }, {\n    key: \"stopDrawing\",\n    value: function stopDrawing() {\n      this.meter.volume = 0;\n      this.draw();\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (!this.canvas) {\n        console.log('no canvas');\n        return;\n      }\n\n      var ctx = this.canvas.getContext('2d');\n\n      if (this.theme.background) {\n        ctx.fillStyle = this.theme.background;\n        ctx.fillRect(0, 0, this.width, this.height);\n      } else {\n        ctx.clearRect(0, 0, this.width, this.height);\n      }\n\n      if (this.theme.bgOnColor || this.theme.bgOffColor) {\n        var maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, maxsize, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.isPlaying || this.isRecording ? this.theme.bgOnColor : this.theme.bgOffColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      ctx.lineWidth = this.theme.lineWidth;\n\n      if (this.theme.dotSize) {\n        var size = this.theme.dotSize;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, size, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.theme.dotColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      if (!this.isRecording && !this.isDrawing) {\n        console.log('not drawing');\n      } else {\n        // console.log('IS drawing ', this.meter.volume);\n        if (!this.meter) {\n          console.error('no mater');\n          this.startDrawing();\n          this.startRecording();\n          return;\n        }\n\n        ctx.strokeStyle = this.meter.checkClipping() ? this.theme.clipColor : this.theme.strokeColor;\n\n        var _maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n\n        var _size = this.meter.volume * _maxsize * 5;\n\n        if (_size > this.width / 2 - this.theme.lineWidth) _size = this.width / 2 - this.theme.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, _size, 0, 2 * Math.PI, false);\n\n        if (this.theme.fillColor) {\n          ctx.fillStyle = this.theme.fillColor;\n          ctx.fill();\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.isDrawing) {\n          window.requestAnimationFrame(this._draw);\n        }\n      }\n    }\n  }]);\n\n  return MonauralScope;\n}(EventEmitter);\n\nexport default MonauralScope;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/client/node_modules/@babel/runtime/helpers/esm/inherits\";\n// import EventEmitter from 'events';\nimport spinBrowser from './spin/transports/browser';\nimport CollectionModel from './CollectionModel'; // import SingletonModel from './SingletonModel';\n\nimport Spin from './spin/spin';\nimport Listener from './Listen';\nimport State from './State';\nimport Store from './Store';\nimport logger from './logger';\nimport Color from './Color';\nimport Sound from './Sound'; // import AudioScope from './AudioScope';\n\nimport MonauralScope from './MonauralScope';\n\nfunction postMessage(msg) {\n  console.log('client post', msg);\n  var data = {\n    '_jaxcore_client': {\n      message: msg,\n      protocol: 1\n    }\n  }; // if (msg.spin) {\n  // \tconsole.log(data);\n  // \tdebugger;\n  // }\n\n  window.postMessage(data, window.document.location.protocol + window.document.location.host);\n}\n\nvar Listen = new Listener(postMessage); //.setPostCommand();\n\nspinBrowser.setPostCommand(postMessage);\n\nvar JaxcoreClient =\n/*#__PURE__*/\nfunction (_State) {\n  _inherits(JaxcoreClient, _State);\n\n  function JaxcoreClient() {\n    var _this;\n\n    _classCallCheck(this, JaxcoreClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JaxcoreClient).call(this));\n    _this.reconnect = true;\n\n    _this.setState({\n      connectedExtension: false,\n      extensionReady: false\n    });\n\n    var onMessage = function onMessage(event) {\n      //event.isTrusted &&\n      if (document.location.href.indexOf(event.origin) === 0) {\n        if (event.data._jaxcore_content) {\n          var msg = event.data._jaxcore_content.message;\n\n          if (msg.socketDisconnected) {\n            _this.setState({\n              connectedExtension: false\n            });\n          } else if ('extensionReady' in msg) {\n            //console.log('extensionReady', msg);\n            _this.setState({\n              extensionReady: true\n            });\n\n            _this.emit('extension-ready'); // debugger;\n\n          } else if ('connectedExtension' in msg) {\n            _this.setState({\n              connectedExtension: msg.connectedExtension\n            });\n\n            if (msg.connectedExtension) {\n              //callback(null, true);\n              console.log('connectedExtension !');\n\n              _this.emit('connectedExtension');\n            } else {// this.connectExtension();\n            }\n          } else if (msg.spin) {\n            console.log('got spin data from bg', msg.spin);\n            spinBrowser.data(msg.spin);\n          } else if (msg.listen) {\n            console.log('got listen data from bg', msg.spin); //alert('Listen said: ' + msg.listen.recognizedText);\n            // spinBrowser.data(msg.spin);\n\n            Listen.recognizedText(msg.listen.recognizedText);\n          } else if (event.data.target && event.data.target === 'inpage') {} else {\n            console.log('client unhandled message', event.data);\n          }\n        } else {// console.log('not _jaxcore_content', event.data, event.origin);\n        }\n      } else {\n        console.log('nope', event);\n      }\n    };\n\n    window.addEventListener(\"message\", onMessage);\n    spinBrowser.on('command', function (spin, args) {\n      console.log('spin command', spin, args);\n    });\n    return _this;\n  }\n\n  _createClass(JaxcoreClient, [{\n    key: \"disconnectExtension\",\n    value: function disconnectExtension() {\n      this.reconnect = false; // console.log('disconnectExtension');\n\n      postMessage({\n        disconnectExtension: true\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(callback) {\n      var _this2 = this;\n\n      this.once('connectedExtension', callback);\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this2.connectExtension();\n        });\n      }\n    }\n  }, {\n    key: \"connectExtension\",\n    value: function connectExtension(callback) {\n      if (this.state.connectedExtension) {\n        console.log('already connectedExtension');\n        this.emit('connectedExtension');\n      } else {\n        // TO DO CHANGE TO LISTENER ?\n        console.log('Jaxcore connectExtension');\n        postMessage({\n          connectExtension: true\n        });\n      }\n    }\n  }, {\n    key: \"connectSpins\",\n    value: function connectSpins(callback) {\n      var _this3 = this;\n\n      console.log('connectSpins');\n      spinBrowser.addListener('spin-created', function (spin) {\n        callback(spin);\n      });\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this3.connectExtension();\n        });\n      } // if (this.state.connectedExtension) {\n      //\n      // }\n      //\n      // if (this.state.connectedExtension) {\n      // \tthis.onCreate(callback);\n      // } else {\n      // \tthis.once('connectedExtension', () => {\n      // \t\tthis.onCreate(callback);\n      // \t});\n      // \t// setTimeout(() => {\n      // \t\tthis.connectExtension(callback);\n      // \t// }, 1000);\n      // }\n\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(callback) {\n      var _this4 = this;\n\n      spinBrowser.addListener('spin-created', function (spin) {\n        _this4.emit(); // if (spin.state.connected) {\n        // \tcallback(spin);\n        // } else {\n        // \tspin.once('connected', function () {\n        // \t\tcallback(spin)\n        // \t});\n        // }\n\n      });\n    }\n  }]);\n\n  return JaxcoreClient;\n}(State);\n\nvar createStore = function createStore(name) {\n  return new Store(name);\n};\n\nvar createLogger = logger.create;\nexport { CollectionModel, State, Store, createStore, logger, createLogger, Color, Sound, Spin, Listen, MonauralScope };\nvar jaxcore = new JaxcoreClient();\nSpin.connectAll = jaxcore.connectSpins.bind(jaxcore); // todo: refactor this in a better way\n\nexport default jaxcore; // var Client = require('./client');\n// // var ES6Client = require('./es6client');\n//\n// module.exports = {\n// \tlogger: logger,\n// \tcreateLogger: logger.create,\n// \tStore: Store,\n// \tcreateStore: function(name) {\n// \t\treturn new Store(name);\n// \t},\n// \tClient: Client\n// \t// ES6Client: ES6Client\n// };","var plugin = require('jaxcore-plugin'); // var log = plugin.createLogger('Spin Buffer');\n\n\nvar _instance = 0;\n\nfunction SpinBuffer(spin, config) {\n  this.log = plugin.createLogger('Spin Buffer ' + _instance++);\n  this.log('created buffer', spin.id);\n  this.delayTime = 0;\n  this.spinDelayed = false;\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n  this.spinDirection = 0;\n  this.lastSpinTime = 0;\n  if (!config) config = {};\n  this.defaultDelay = config.defaultDelay || 500;\n  this.staticTimeout = config.staticTimeout || 3000;\n  this.delayLength = this.defaultDelay;\n  this._onPushKnob = this.onPushKnob.bind(this);\n  spin.on('knob', this._onPushKnob);\n  var me = this;\n\n  this.destroy = function () {\n    spin.removeListener('knob', me._onPushKnob);\n  };\n}\n\nSpinBuffer.prototype = {};\n\nSpinBuffer.prototype.reset = function (forceStatic) {\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n\n  if (forceStatic) {\n    this.spinDirection = 0;\n  }\n};\n\nSpinBuffer.prototype.onPushKnob = function () {\n  this.log('reset');\n  this.reset();\n};\n\nSpinBuffer.prototype.spin = function (direction, kineticBuffer, staticBuffer) {\n  //if (!kineticBuffer) kineticBuffer = 0;\n  if (typeof staticBuffer === 'undefined') {\n    if (kineticBuffer) staticBuffer = kineticBuffer;else staticBuffer = 0;\n  }\n\n  kineticBuffer += 1;\n  staticBuffer += 1; // if (!kineticBuffer) kineticBuffer = 1;\n  // if (!staticBuffer) staticBuffer = kineticBuffer || 2;\n\n  var timeSinceLastSpin = new Date().getTime() - this.lastSpinTime;\n  this.lastSpinTime = new Date().getTime();\n\n  if (this.isDelayed()) {\n    this.reset();\n    return false;\n  }\n\n  var staticTimeoutExceeded = timeSinceLastSpin > this.staticTimeout; // after 3 sec reset static buffer\n\n  if (staticTimeoutExceeded) {\n    this.log('static timeout exceeded');\n    this.reset(true);\n  }\n\n  var directionChanged = direction !== this.spinDirection;\n\n  if (directionChanged) {\n    this.kineticBuffer = 0;\n    this.staticBuffer++;\n\n    if (this.staticBuffer >= staticBuffer) {\n      this.log('static buffer exeeded, spinDirection is now', direction);\n      this.spinDirection = direction;\n      this.reset();\n      return true;\n    } else {\n      this.log('static buffer:', this.staticBuffer, '-');\n      return false;\n    }\n  } else {\n    if (this.staticBuffer > 0) {\n      this.staticBuffer--;\n      this.log('static buffer:', this.staticBuffer, '+');\n      if (this.staticBuffer < 0) this.staticBuffer = 0;\n      return false;\n    }\n\n    this.kineticBuffer++;\n    this.staticBuffer = 0;\n    if (kineticBuffer > 0) this.log('kinetic buffer:', this.kineticBuffer, direction === 1 ? '+' : '-');\n\n    if (this.kineticBuffer >= kineticBuffer) {\n      if (kineticBuffer > 0) this.log('kinetic buffer exceeded');\n      this.reset();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nSpinBuffer.prototype.isDelayed = function () {\n  if (this.spinDelayed) {\n    var diff = new Date().getTime() - this.delayTime;\n    var d = diff > this.delayLength;\n\n    if (d) {\n      this.log('delay timed out', new Date().getTime() - this.delayTime);\n      this.delayLength = this.defaultDelay;\n      this.spinDelayed = false;\n      return false;\n    } else {\n      this.log('delaying for ' + (this.delayLength + ' ' + diff));\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nSpinBuffer.prototype.delay = function (ms) {\n  this.delayLength = ms || this.defaultDelay;\n  this.log('delaying for ' + this.delayLength + 'ms');\n  this.delayTime = new Date().getTime();\n  this.spinDelayed = true;\n};\n\nSpinBuffer.prototype.cancelDelay = function () {\n  this.delayTime = 0;\n  this.spinDelayed = false;\n};\n\nmodule.exports = SpinBuffer;","var isArray = function isArray(o) {\n  return typeof o === 'object' && Object.prototype.toString.apply(o) === '[object Array]';\n};\n\nvar isString = function isString(o) {\n  return typeof o === 'string' || o instanceof String;\n};\n\nfunction alpha(color, a) {\n  if (typeof a === 'number' && a >= 0 && a <= 1) {\n    var c = getRGB(color);\n    return rgb(c[0], c[1], c[2], a);\n  }\n\n  return color;\n}\n\nfunction lighten(c, l) {\n  if (c.value) c = c.value;else if (typeof l === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, 0, l));\n}\n\nfunction darken(c, l) {\n  return lighten(c, -l);\n}\n\nfunction saturate(c, s) {\n  if (c.value) c = c.value;else if (typeof s === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, s, 0));\n}\n\nfunction desaturate(c, s) {\n  return saturate(c, -s);\n}\n\nfunction hslval(x, y, r) {\n  if (r < 0) r += 1;\n  if (r > 1) r -= 1;\n  var c;\n  if (6 * r < 1) c = x + (y - x) * 6 * r;else if (2 * r < 1) c = y;else if (3 * r < 2) c = x + (y - x) * (2 / 3 - r) * 6;else c = x;\n  return c * 255;\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0],\n      s = hsl[1],\n      l = hsl[2],\n      r,\n      g,\n      b;\n\n  if (s === 0) {\n    r = g = b = l * 255;\n  } else {\n    var x, y;\n    if (l < 0.5) y = l * (1 + s);else y = l + s - l * s;\n    x = 2 * l - y;\n    r = hslval(x, y, h + 1 / 3);\n    g = hslval(x, y, h);\n    b = hslval(x, y, h - 1 / 3);\n  }\n\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  if (hsl.length === 4) return [r, g, b, hsl[3]];else return [r, g, b];\n}\n\nfunction hsl(h, s, l, a) {\n  var x = [h / 360, s / 100, l / 100];\n  var r = hsl2rgb(x).map(Math.round);\n  if (arguments.length === 4) r[3] = a;\n  return rgb(r);\n}\n\nfunction shiftHSL(c, h, s, l) {\n  if (typeof h === 'undefined') h = 0;\n  if (typeof s === 'undefined') s = 0;\n  if (typeof l === 'undefined') l = 0;\n  var o = getRGB(c);\n  var x = getHSL(o);\n  x[0] += h;\n  if (x[0] < 0) x[0] += 1;\n  if (x[0] > 1) x[0] -= 1;\n  x[1] *= 1 + s;\n  if (x[1] < 0) x[1] = 0;\n  if (x[1] > 1) x[1] = 1;\n  x[2] *= 1 + l;\n  if (x[2] < 0) x[2] = 0;\n  if (x[2] > 1) x[2] = 1;\n  var n = hsl2rgb(x);\n  if (o.length === 4) n[3] = o[3];\n  return n;\n}\n\nfunction shiftHue(c, h) {\n  if (typeof h === 'undefined') return c;\n  return rgb(shiftHSL(c, h, 0, 0));\n}\n\nfunction combine(sourceColor, targetColor, amount) {\n  amount = amount || 0.5;\n  var al = getAlpha(sourceColor);\n  var s = getRGB(sourceColor);\n  var t = getRGB(targetColor);\n  var r = Math.round((t[0] - s[0]) * amount);\n  var g = Math.round((t[1] - s[1]) * amount);\n  var b = Math.round((t[2] - s[2]) * amount);\n  return rgb(s[0] + r, s[1] + g, s[2] + b, al);\n}\n\nfunction tint(sourceColor, targetColor, amount) {\n  var sH = getHue(sourceColor);\n  var tH = getHue(targetColor);\n  var diff = tH - sH;\n  if (diff > 0 && diff > 0.5) diff -= 1;else if (diff < 0 && diff < -0.5) diff += 1;\n  var dH = diff * amount;\n  return rgb(shiftHSL(sourceColor, dH, null, null));\n}\n\nfunction hue(c, h) {\n  return setHSL(c, h);\n}\n\nfunction saturation(c, s) {\n  return setHSL(c, null, s);\n}\n\nfunction lightness(c, l) {\n  return setHSL(c, null, null, l);\n}\n\nfunction setHSL(c, h, s, l) {\n  var x = getHSL(c);\n  if (typeof h === 'undefined' || h === null) h = x[0];\n  if (typeof s === 'undefined' || s === null) s = x[1];\n  if (typeof l === 'undefined' || l === null) l = x[2];\n  if (x.length === 4) return rgb(hsl2rgb([h, s, l, x[3]]));else return rgb(hsl2rgb([h, s, l]));\n}\n\nfunction rgb() {\n  if (arguments.length === 1) {\n    var a = arguments[0];\n\n    if (typeof a === 'string') {\n      var r = getRGB(a);\n      if (isArray(r)) return rgb(r);else return getHex(r);\n    }\n\n    if (isArray(a) && a.length === 3) {\n      return getHex(a);\n    }\n\n    if (isArray(a) && a.length === 4) {\n      return 'rgba(' + Math.round(a[0]) + ',' + Math.round(a[1]) + ',' + Math.round(a[2]) + ',' + a[3] + ')';\n    }\n  } else if (arguments.length === 3) {\n    return getHex(Array.from(arguments));\n  } else if (arguments.length === 4) {\n    if (typeof arguments[3] === 'number' && arguments[3] > 0 && arguments[3] <= 1) {\n      return 'rgba(' + Math.round(arguments[0]) + ',' + Math.round(arguments[1]) + ',' + Math.round(arguments[2]) + ',' + arguments[3] + ')';\n    } else return getHex(Array.from(arguments));\n  }\n}\n\nfunction setRGB(c, r, g, b, a) {\n  c = getRGB(c);\n  if (typeof r === 'number') c[0] = r;\n  if (typeof g === 'number') c[1] = g;\n  if (typeof b === 'number') c[2] = b;\n  if (typeof a === 'number') c[3] = a;\n  return rgb(c);\n}\n\nfunction getAlpha(color) {\n  var x = getRGB(color);\n  if (x.length === 4) return x[3];\n  return 0;\n}\n\nfunction getRGB() {\n  if (isArray(arguments[0])) return arguments[0];\n\n  if (typeof arguments[0] === 'string') {\n    var c = arguments[0];\n\n    if (/^#/.test(c)) {\n      var h = c.substring(1);\n      if (/^[0-9a-f]{6}$/i.test(h)) return [parseInt(h.substring(0, 2), 16), parseInt(h.substring(2, 4), 16), parseInt(h.substring(4, 6), 16)];\n      if (/^[0-9a-f]{3}$/i.test(h)) return [parseInt(h[0] + h[0], 16), parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16)];\n      return [0, 0, 0];\n    }\n\n    var m;\n\n    if (m = c.match(/rgb\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3])];\n    }\n\n    if (m = c.match(/rgba\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [Number(m[1]), Number(m[2]), Number(m[3]), Number(m[4])];\n    } else {}\n  }\n}\n\nfunction getRed(c) {\n  return getRGB(c)[0];\n}\n\nfunction getGreen(c) {\n  return getRGB(c)[1];\n}\n\nfunction getBlue(c) {\n  return getRGB(c)[2];\n}\n\nfunction getHex(color, full) {\n  if (color) {\n    var c = getRGB(color);\n\n    if (c) {\n      var r = int2hex(Math.round(c[0]));\n      var g = int2hex(Math.round(c[1]));\n      var b = int2hex(Math.round(c[2]));\n      if (!full && r[0] === r[1] && g[0] === g[1] && b[0] === b[1]) return ('#' + r[0] + g[0] + b[0]).toUpperCase();\n      return ('#' + r + g + b).toUpperCase();\n    }\n  }\n\n  return '#000';\n}\n\nfunction int2hex(i) {\n  var v = i.toString(16);\n  return v.length === 1 ? '0' + v : v;\n}\n\nfunction getHSL(color) {\n  var rgb;\n  if (isArray(color)) rgb = color;else if (isString(color)) rgb = getRGB(color);else {\n    console.log('no rgb for ', color);\n    return [0, 0, 0];\n  }\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var x = Math.max(r, g, b);\n  var n = Math.min(r, g, b);\n  var l = (x + n) / 2;\n  var s = 0,\n      h = 0;\n\n  if (x === n) {\n    s = 0;\n    h = 0;\n  } else {\n    var d = x - n;\n    if (l > 0.5) s = d / (2 - x - n);else s = d / (x + n);\n    if (x === r) h = (g - b) / d + (g < b ? 6 : 0);\n    if (x === g) h = 2 + (b - r) / d;\n    if (x === b) h = 4 + (r - g) / d;\n    h /= 6;\n    if (h < 0) h += 1;\n  }\n\n  if (rgb.length === 4) return [h, s, l, rgb[3]];else return [h, s, l];\n}\n\nfunction getHue(c) {\n  return getHSL(c)[0];\n}\n\nfunction getSaturation(c) {\n  return getHSL(c)[1];\n}\n\nfunction getLightness(c) {\n  return getHSL(c)[2];\n}\n\nfunction invert(color) {\n  var rgba = getRGB(color);\n\n  for (var i = 0; i < 3; i++) {\n    rgba[i] = 255 - rgba[i];\n  }\n\n  return rgb(rgba);\n}\n\nmodule.exports = {\n  hsl2rgb: hsl2rgb,\n  hslval: hslval,\n  int2hex: int2hex,\n  alpha: alpha,\n  lighten: lighten,\n  darken: darken,\n  saturate: saturate,\n  desaturate: desaturate,\n  shiftHSL: shiftHSL,\n  shiftHue: shiftHue,\n  combine: combine,\n  tint: tint,\n  hue: hue,\n  saturation: saturation,\n  lightness: lightness,\n  hsl: hsl,\n  hsla: hsl,\n  setHSL: setHSL,\n  rgb: rgb,\n  rgba: rgb,\n  setRGB: setRGB,\n  getAlpha: getAlpha,\n  getRGB: getRGB,\n  getRed: getRed,\n  getGreen: getGreen,\n  getBlue: getBlue,\n  getHex: getHex,\n  getHSL: getHSL,\n  getHue: getHue,\n  getSaturation: getSaturation,\n  getLightness: getLightness,\n  invert: invert\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SpeakApp from './SpeakApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<SpeakApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}