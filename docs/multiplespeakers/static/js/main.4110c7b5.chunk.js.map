{"version":3,"sources":["../../../lib/queue.js","../../../lib/speak.js","../../../../jaxcore-client/lib/CollectionModel.js","../../../../jaxcore-client/lib/Listen.js","../../../../jaxcore-client/lib/State.js","../../../../jaxcore-client/lib/Sound.js","../../../../jaxcore-client/lib/MonauralScope.js","../../../../jaxcore-client/lib/index.js","../../../../jaxcore-client/lib/spin/transports/browser.js","../../../lib/profiles.js","../../../../jaxcore-client/lib/spin/spin.js","../../../../jaxcore-client/lib/logger.js","../../../../jaxcore-client/lib/Store.js","../../../../jaxcore-client/lib/Color.js","MultipleSpeakersApp.js","../../../../jaxcore-client/lib/spin/buffer.js","../../../../jaxcore-client/lib/colors.js","serviceWorker.js","index.js"],"names":["queue","_EventEmitter","SpeakerQueue","speak","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_queue","speaker","inherits","createClass","key","value","speech","push","_speakNext","_this2","isSpeaking","next","shift","getWorkerAudioData","text","options","audioContext","source","onStart","scope","loadAudioData","onStop","setTimeout","_onEnded","emit","events_default","a","speak_Speak","Speak","name","lang","profiles","defaultProfile","profiles_default","addProfile","profile","setProfile","engine","language","setLanguage","visualizer","setVisualizer","vis","getLanguageId","profileName","v","assign","slow","speed","fast","low","pitch","high","voice","delay","Promise","resolve","connect","destination","onended","close","callback","start","toLowerCase","workerPath","workers","sam","espeak","length","startsWith","l","i","path","Error","worker","Worker","addEventListener","e","console","log","data","rawdata","AudioContext","createBufferSource","audioBuffer","createBuffer","buffer","getChannelData","_i","decodeAudioData","voptions","processOptions","postMessage","cmd","replacements","forEach","replacement","from","to","replace","RegExp","type","p","variants","languageIds","ca","cs","de","el","en/en","en/en-n","en/en-rp","en/en-sc","en/en-us","en/en-wm","eo","es","es-la","fi","fr","hu","it","kn","la","lv","nl","pl","pt","pt-pt","ro","sk","sv","tr","zh","zh-yue","indexOf","setWorkers","speakerQueue","bind","clearQueue","on","once","__webpack_exports__","Listen","Listener","postCommand","listenCommand","command","arguments","lib_State","State","defaults","state","changes","hasChanges","s","handler","addListener","removeListener","lib_MonauralScope","MonauralScope","canvas","width","height","meter","mediaStreamSource","_draw","draw","assertThisInitialized","isRecording","setTheme","lineWidth","strokeColor","clipColor","fillColor","bgOnColor","bgOffColor","dotColor","dotSize","background","theme","clipLevel","averaging","clipLag","processor","createScriptProcessor","onaudioprocess","event","x","buf","inputBuffer","bufLength","sum","Math","abs","clipping","lastClip","window","performance","now","rms","sqrt","volume","max","maxVolume","checkClipping","shutdown","disconnect","startRecording","stopRecording","isDrawing","successcb","errorcb","_this3","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","mediaDevices","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","stream","createMediaStreamSource","createAudioMeter","startDrawing","alert","_this4","isPlaying","stop","stopDrawing","ctx","getContext","fillStyle","fillRect","clearRect","maxsize","min","beginPath","arc","PI","fill","closePath","size","error","strokeStyle","_maxsize","_size","stroke","requestAnimationFrame","msg","_jaxcore_client","message","protocol","document","location","host","__webpack_require__","d","lib_Listen","browser_default","setPostCommand","lib_JaxcoreClient","_State","JaxcoreClient","reconnect","setState","connectedExtension","extensionReady","href","origin","_jaxcore_content","socketDisconnected","spin","listen","recognizedText","target","args","disconnectExtension","connectExtension","jaxcore","logger_default","create","spin_default","connectAll","connectSpins","EventEmitter","Spin","BrowserTransport","constructor","prototype","store","id","add","created","update","spinIds","destroyed","c","knobPushed","buttonPushed","_lastSpinPosition","spinPosition","spinDirection","connected","remove","sendCommand","method","postCommandFn","spinCommand","fn","spinBrowser","module","exports","Jack","default","amplitude","wordgap","variant","Pris","phoneticName","Roy","Scotty","Xenu","Cylon","Leon","Rachel","Zhora","Sam","throat","mouth","Elf","Robo","Granny","plugin","createLogger","spinStore","createStore","Client","SpinBuffer","_instance","device","transport","instance","ip","Date","setStore","setDefaults","spinPreviousTime","spinTime","knobPushTime","knobReleaseTime","knobPushDuration","knobHold","buttonPushTime","buttonReleaseTime","buttonPushDuration","buttonHold","batteryVoltage","batteryPercent","isCharging","isCharged","sleeping","inactivityTime","createSettings","brightness","knobHoldThreshold","buttonHoldThreshold","sleepEnabled","sleepTimer","Buffer","config","settings","settingDefaults","settingNames","changeSettings","_buffer","apply","Array","slice","bufferDelay","bufferReset","reset","cancelHoldEvents","clearTimeout","_knobHoldTimer","_buttonHoldTimer","isConnected","_connected","resetDefaults","_sleeping","_removeEvents","knobReleased","buttonReleased","processSpin","position","direction","processEncoder","throttled","getTime","processKnob","pushed","me","wasHeld","processButton","processStatus","round","first","processSleep","status","millis","flash","color","quickFlash","repeat","bleDevice","join","lightsOn","lights","lightsOff","setThrottle","throttle","setBrightness","setName","rotate","mode","color1","color2","scale","percent","color3","sleep","delaySleep","setKnobHoldThreshold","th","setButtonHoldThreshold","setSleepTimer","minutes","ms","destroy","debug","q","logger","quiet","chalk","green","yellow","cyan","magenta","_quiet","map","arg","index","loggerName","colors","n","unshift","Store","ids","removeAllListeners","set","isColor","Color","rgb","toString","alpha","lighten","darken","saturate","desaturate","shiftHSL","h","shiftHue","combine","t","tint","hue","saturation","lightness","invert","setRGB","hsl","setHSL","red","r","g","blue","b","getAlpha","getRGB","getHex","full","getRed","getGreen","getBlue","getHSL","getHue","getSaturation","getLightness","rgba","hsla","global","MultipleSpeakersApp","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","redRef","React","createRef","orangeRef","yellowRef","greenRef","cyanRef","blueRef","purpleRef","activeSpeakers","orange","purple","app","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","getTheme","scopes","current","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","ref","onClick","introduceYourselves","active","setActiveSpeaker","Component","delayTime","spinDelayed","staticBuffer","kineticBuffer","lastSpinTime","defaultDelay","staticTimeout","delayLength","_onPushKnob","onPushKnob","forceStatic","timeSinceLastSpin","isDelayed","diff","cancelDelay","isArray","o","isString","String","hslval","y","hsl2rgb","m","test","substring","parseInt","match","Number","int2hex","toUpperCase","sourceColor","targetColor","amount","al","sH","Boolean","hostname","ReactDOM","render","react_default","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4110c7b5.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from \"events\";\n\nvar SpeakerQueue =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(SpeakerQueue, _EventEmitter);\n\n  function SpeakerQueue(speak) {\n    var _this;\n\n    _classCallCheck(this, SpeakerQueue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpeakerQueue).call(this));\n    _this._queue = [];\n    _this.speaker = speak;\n    return _this;\n  }\n\n  _createClass(SpeakerQueue, [{\n    key: \"clearQueue\",\n    value: function clearQueue() {\n      this._queue = [];\n    }\n  }, {\n    key: \"queue\",\n    value: function queue(speech) {\n      this._queue.push(speech);\n\n      this._speakNext();\n    }\n  }, {\n    key: \"_speakNext\",\n    value: function _speakNext() {\n      var _this2 = this;\n\n      if (this.isSpeaking) {\n        return;\n      }\n\n      var next = this._queue.shift();\n\n      if (next) {\n        this.isSpeaking = true;\n        this.speaker.getWorkerAudioData(next.text, next.options, function (audioContext, source) {\n          if (next.onStart) {\n            next.onStart(next);\n          }\n\n          next.scope.loadAudioData(audioContext, source, function () {\n            if (next.onStop) {\n              setTimeout(function () {\n                next.onStop(next);\n              }, 1);\n            }\n\n            _this2._onEnded();\n          });\n        });\n      } else {\n        this.emit('finish');\n      }\n    }\n  }, {\n    key: \"_onEnded\",\n    value: function _onEnded() {\n      this.isSpeaking = false;\n\n      this._speakNext();\n    }\n  }]);\n\n  return SpeakerQueue;\n}(EventEmitter);\n\nexport default SpeakerQueue;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\nimport SpeakerQueue from './queue';\nimport profiles from './profiles';\nvar variants = ['f1', 'f2', 'f3', 'f4', 'f5', 'm1', 'm2', 'm3', 'm4', 'm5', 'm6', 'm7', 'croak', 'klatt', 'klatt2', 'klatt3', 'whisper', 'whisperf'];\nvar languageIds = {\n  'ca': 'Catalan',\n  'cs': 'Czech',\n  'de': 'German',\n  'el': 'Greek',\n  'en/en': 'English',\n  'en/en-n': 'English (N)',\n  'en/en-rp': 'English (RP)',\n  'en/en-sc': 'English (Scottish)',\n  'en/en-us': 'English (US)',\n  'en/en-wm': 'English (WM)',\n  'eo': 'Esperanto',\n  'es': 'Spanish',\n  'es-la': 'Spanish (Latin America)',\n  'fi': 'Finnish',\n  'fr': 'French',\n  'hu': 'Hungarian',\n  'it': 'Italian',\n  'kn': 'Kannada',\n  'la': 'Latin',\n  'lv': 'Latvian',\n  'nl': 'Dutch',\n  'pl': 'Polish',\n  'pt': 'Portuguese (Brazil)',\n  'pt-pt': 'Portuguese, European',\n  'ro': 'Romanian',\n  'sk': 'Slovak',\n  'sv': 'Swedish',\n  'tr': 'Turkish',\n  'zh': 'Chinese (Mandarin)',\n  'zh-yue': 'Chinese (Cantonese)'\n};\n\nvar Speak =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Speak, _EventEmitter);\n\n  function Speak(options) {\n    var _this;\n\n    _classCallCheck(this, Speak);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speak).call(this));\n    if (!options) options = {};\n    _this.lang = null;\n    _this.profiles = {};\n    _this.defaultProfile = null;\n\n    for (var name in profiles) {\n      _this.addProfile(profiles[name]);\n    }\n\n    if (options.profile) {\n      _this.setProfile(options.profile);\n    } else {\n      _this.setProfile('Jack');\n    }\n\n    if (_this.profile.engine === 'espeak') {\n      if (options.language) {\n        _this.setLanguage(options.language);\n      }\n    }\n\n    if (!_this.lang) {\n      _this.setLanguage('en_us');\n    }\n\n    if (options.visualizer) {\n      _this.setVisualizer(options.visualizer);\n    }\n\n    return _this;\n  }\n\n  _createClass(Speak, [{\n    key: \"setVisualizer\",\n    value: function setVisualizer(vis) {\n      this.visualizer = vis;\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      this.lang = Speak.getLanguageId(lang);\n    }\n  }, {\n    key: \"processOptions\",\n    value: function processOptions(options) {\n      if (!options) {\n        options = {};\n      }\n\n      var profileName = options.profile ? options.profile : this.defaultProfile;\n      var profile = this.profiles[profileName]['default'];\n      var v = Object.assign({}, profile);\n      if (options.slow) v.speed = this.profiles[profileName]['slow'].speed;\n      if (options.fast) v.speed = this.profiles[profileName]['fast'].speed;\n      if (options.low) v.pitch = this.profiles[profileName]['low'].pitch;\n      if (options.high) v.pitch = this.profiles[profileName]['high'].pitch;\n      if (options.pitch) v.pitch = this.profiles[profileName]['pitch'].pitch;\n      if (options.speed) v.speed = this.profiles[profileName]['speed'].speed;\n\n      if (options.language) {\n        v.voice = Speak.getLanguageId(options.language);\n      } else {\n        v.voice = this.lang;\n      }\n\n      if (options.delay) {\n        v.delay = options.delay;\n      }\n\n      return v;\n    }\n  }, {\n    key: \"speak\",\n    value: function speak(text, options) {\n      var _this2 = this;\n\n      options = options || {};\n\n      if (this.visualizer) {\n        return new Promise(function (resolve) {\n          _this2.getWorkerAudioData(text, options, function (audioContext, source) {\n            _this2.visualizer.loadAudioData(audioContext, source, resolve);\n          });\n        });\n      } else {\n        this.getWorkerAudioData(text, options, function (audioContext, source) {\n          // this.visualizer.loadAudioData(audioContext, source, resolve);\n          source.connect(audioContext.destination);\n\n          source.onended = function () {\n            source.connect(audioContext.destination);\n            audioContext.close();\n            if (callback) callback();\n          };\n\n          source.start(0);\n        });\n      }\n    }\n  }, {\n    key: \"getWorkerAudioData\",\n    value: function getWorkerAudioData(text, options, callback) {\n      text = text.toLowerCase();\n      if (!options.profile) options.profile = this.defaultProfile || 'Jack';\n      var engine = this.profiles[options.profile].engine;\n      var workerPath;\n\n      if (engine === 'sam') {\n        workerPath = Speak.workers.sam;\n      } else if (engine === 'espeak') {\n        if (typeof Speak.workers.espeak === 'string') {\n          workerPath = Speak.workers.espeak;\n        } else if (Speak.workers.espeak.length) {\n          var lang = options.language;\n\n          if (lang.startsWith('en-')) {\n            lang = 'en/' + l;\n          }\n\n          debugger;\n\n          for (var i = 0; i < Speak.workers.espeak.length; i++) {\n            if (Speak.workers.espeak[i].language === options.language) {\n              debugger;\n              workerPath = Speak.workers.espeak[i].path;\n              break;\n            }\n          }\n        }\n      }\n\n      if (!workerPath) throw new Error('no worker path for this language');\n      var worker = new Worker(workerPath);\n      worker.addEventListener('message', function (e) {\n        console.log('received from worker:', e.data);\n\n        if (e.data.rawdata) {\n          var audioContext = new AudioContext();\n          var source = audioContext.createBufferSource();\n\n          if (engine === 'sam') {\n            var data = e.data.rawdata;\n            var audioBuffer = audioContext.createBuffer(1, data.length, 22050);\n            var buffer = audioBuffer.getChannelData(0);\n\n            for (var _i = 0; _i < data.length; _i++) {\n              buffer[_i] = data[_i];\n            }\n\n            source.buffer = audioBuffer;\n            callback(audioContext, source);\n          } else {\n            audioContext.decodeAudioData(e.data.rawdata, function (buffer) {\n              source.buffer = buffer;\n              callback(audioContext, source);\n            }, function (e) {\n              console.log('error', e);\n            });\n          }\n        }\n      }, false);\n      var voptions = this.processOptions(options);\n      worker.postMessage({\n        cmd: 'speak',\n        text: text,\n        options: voptions\n      });\n    }\n  }, {\n    key: \"replacementsFor\",\n    value: function replacementsFor(text, replacements) {\n      replacements.forEach(function (replacement) {\n        var from = replacement[0];\n        var to = replacement[1];\n        text = text.replace(new RegExp(from, 'gi'), to);\n      });\n      return text;\n    } // todo:\n    // multipartData() {\n    // \tvar parts = [\n    // \t\t{ text: \"Travel to\",      voice: \"en/en-us\", variant: \"m3\" },\n    // \t\t{ text: \"Paris\",          voice: \"fr\",       variant: \"f5\" },\n    // \t\t{ text: \"at light speed\", voice: \"en/en-us\", variant: \"m3\" }\n    // \t];\n    // }\n\n  }, {\n    key: \"addProfile\",\n    value: function addProfile(profile) {\n      var profileTypes = ['high', 'low', 'fast', 'slow'];\n      profileTypes.forEach(function (type) {\n        if (type !== 'default' && type !== 'name') {\n          var p = Object.assign({}, profile['default']);\n\n          for (var i in profile[type]) {\n            p[i] = profile[type][i];\n          }\n\n          profile[type] = p;\n        }\n      });\n      this.profiles[profile.name] = profile;\n    }\n  }, {\n    key: \"setProfile\",\n    value: function setProfile(name) {\n      this.defaultProfile = name;\n      this.profile = profiles[name];\n      return this;\n    }\n  }]);\n\n  return Speak;\n}(EventEmitter);\n\nSpeak.variants = variants;\nSpeak.profiles = profiles;\nSpeak.languageIds = languageIds;\n\nSpeak.getLanguageId = function (lang) {\n  if (lang.indexOf('_') > -1) lang = lang.replace('_', '-'); // if (lang === 'en-us') lang = 'en/en-us';\n  // if (lang === 'en') lang = 'en/en';\n\n  if (lang.startsWith('en') && lang.indexOf('/') === -1) lang = 'en/' + lang;\n  return lang;\n};\n\nSpeak.addProfile = function (profile) {\n  for (var name in profile) {\n    Speak.profiles[name] = profile[name];\n  }\n};\n\nSpeak.setWorkers = function (workers) {\n  Speak.workers = workers;\n};\n\nvar speakerQueue = new SpeakerQueue(new Speak());\nSpeak.queue = speakerQueue.queue.bind(speakerQueue);\nSpeak.clearQueue = speakerQueue.clearQueue.bind(speakerQueue);\nSpeak.on = speakerQueue.on.bind(speakerQueue);\nSpeak.once = speakerQueue.once.bind(speakerQueue);\nexport default Speak;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\n// The object previously known as Client (minus bindInterface)\nimport EventEmitter from 'events';\n\nvar CollectionModel =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(CollectionModel, _EventEmitter);\n\n  function CollectionModel() {\n    _classCallCheck(this, CollectionModel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CollectionModel).apply(this, arguments));\n  }\n\n  _createClass(CollectionModel, [{\n    key: \"setStore\",\n    value: function setStore(store, singleton) {\n      if (singleton) {\n        this.store = null;\n        this.state = store;\n      } else {\n        this.store = store;\n      }\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(data) {\n      if (typeof arguments[0] === 'string') {\n        var type = arguments[0];\n        data = arguments[1];\n        var d = Object.assign({}, this.state[type]);\n        this.state[type] = d;\n        var changes = {};\n        changes[type] = {};\n\n        for (var name in data) {\n          if (d[name] !== data[name]) {\n            d[name] = data[name];\n            changes[type][name] = data[name];\n          }\n        }\n\n        return changes;\n      } else {\n        if (this.store) {\n          var id = this.state ? this.state.id : data.id;\n          var changes = this.store.set(id, data);\n          this.state = this.store[id];\n          this.emit('update', changes);\n          return changes;\n        } else {\n          return this._setState(data);\n        }\n      }\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(data) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        // this.emit('update', this.state, changes);\n        this.emit('update', changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state.id in this.store ? this.store[this.state.id] : {};\n    }\n  }]);\n\n  return CollectionModel;\n}(EventEmitter);\n\nexport default CollectionModel;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Listener =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Listener, _EventEmitter);\n\n  function Listener(postCommand) {\n    var _this;\n\n    _classCallCheck(this, Listener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Listener).call(this));\n    _this.postCommand = postCommand;\n    return _this;\n  }\n\n  _createClass(Listener, [{\n    key: \"start\",\n    value: function start() {\n      console.log('listen start');\n      this.postCommand({\n        listenCommand: {\n          command: 'start'\n        }\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      console.log('listen stop');\n      this.postCommand({\n        listenCommand: {\n          command: 'stop'\n        }\n      });\n    }\n  }, {\n    key: \"startContinuous\",\n    value: function startContinuous(options) {\n      console.log('startContinuous', options);\n      this.postCommand({\n        listenCommand: {\n          command: 'start-continuous',\n          arguments: options\n        }\n      });\n    }\n  }, {\n    key: \"stopContinuous\",\n    value: function stopContinuous() {\n      this.postCommand({\n        listenCommand: {\n          command: 'stop-continuous'\n        }\n      });\n    }\n  }, {\n    key: \"recognizedText\",\n    value: function recognizedText(text) {\n      this.emit('recognized', text);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.emit('start', text);\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.emit('stop', text);\n    }\n  }, {\n    key: \"onStartContinuous\",\n    value: function onStartContinuous() {\n      this.emit('start-continuous', text);\n    }\n  }, {\n    key: \"onStopContinuous\",\n    value: function onStopContinuous() {\n      this.emit('stop-continuous', text);\n    }\n  }]);\n\n  return Listener;\n}(EventEmitter);\n\nexport default Listener;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar State =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(State, _EventEmitter);\n\n  function State(defaults) {\n    var _this;\n\n    _classCallCheck(this, State);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(State).call(this));\n    _this.state = defaults || {};\n    return _this;\n  }\n\n  _createClass(State, [{\n    key: \"setState\",\n    value: function setState(data, callback) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        this.emit('update', this.state, changes);\n        if (callback) callback(changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.addListener('update', handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this.removeListener('update', handler);\n    }\n  }]);\n\n  return State;\n}(EventEmitter);\n\nexport default State;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Sound =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Sound, _EventEmitter);\n\n  function Sound(url, options) {\n    var _this;\n\n    _classCallCheck(this, Sound);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sound).call(this));\n    if (!options) options = {};\n    if (options.context) _this.context = options.context;\n\n    if (options.source) {\n      _this.source = options.source;\n    }\n\n    _this.connected = false;\n    _this.loaded = false;\n    _this.looping = false;\n\n    if (options.autoplay) {\n      _this.connect();\n\n      _this.on('load', function () {\n        if (options.loop) {\n          _this.loop();\n        } else _this.play(options.callback);\n      });\n    }\n\n    if (typeof url === 'string') {\n      _this.url = url;\n\n      _this.load();\n    } else if (typeof url === 'object') {\n      _this.loadArrayBuffer(url);\n    }\n\n    return _this;\n  }\n\n  _createClass(Sound, [{\n    key: \"connect\",\n    value: function connect() {\n      if (!this.context) {\n        this.createContext(); // this.context = new AudioContext();\n        // this.reset();\n      } // if (!this.source) {\n      // \tthis.source = this.context.createBufferSource();\n      // }\n\n\n      if (!this.source.buffer) this.source.buffer = this.buffer;\n      this.source.connect(this.context.destination);\n      this.connected = true;\n    }\n  }, {\n    key: \"loadArrayBuffer\",\n    value: function loadArrayBuffer(data) {}\n  }, {\n    key: \"load\",\n    value: function load() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open('GET', this.url, true);\n      request.responseType = 'arraybuffer';\n\n      request.onload = function () {\n        _this2.response = request.response;\n\n        if (_this2.context) {\n          // debugger;\n          _this2.loadData();\n        } else {\n          console.log('loaded no context', _this2.url);\n        }\n      };\n\n      request.send();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      if (!this.response) {\n        debugger;\n      }\n\n      this.context.decodeAudioData(this.response, function (response) {\n        _this3.buffer = response;\n\n        if (_this3.source) {\n          // debugger;\n          _this3.source.buffer = _this3.buffer;\n        }\n\n        _this3.loaded = true;\n\n        _this3.emit('load');\n      }, function (e) {\n        console.error('Sound: failed to load', this.url); // this.emit('error', e);\n      });\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      this.context = new AudioContext();\n      this.source = this.context.createBufferSource();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.createContext();\n      this.connect(); // this.source.buffer = this.buffer;\n      // this.source.connect(this.context.destination);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.source.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.source.resume();\n    }\n  }, {\n    key: \"play\",\n    value: function play(callback) {\n      var _this4 = this;\n\n      if (this.isPlaying) {\n        console.log('isPlaying');\n        return;\n      }\n\n      if (!this.loaded) {\n        if (!this.context) {\n          this.createContext();\n        }\n\n        this.once('load', function () {\n          _this4.connect();\n\n          _this4.source.loop = _this4.looping;\n\n          _this4.source.onended = function () {\n            _this4.stop();\n\n            if (callback) callback();\n          };\n\n          _this4.isPlaying = true;\n\n          _this4.source.start(0);\n        });\n        this.loadData();\n      } else {\n        if (!this.connected) {\n          // debugger;\n          this.connect();\n        }\n\n        this.source.onended = function () {\n          // debugger;\n          _this4.stop();\n\n          if (callback) callback();\n        };\n\n        this.isPlaying = true;\n        this.source.start(0);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isPlaying = false;\n      this.source.stop();\n      this.source.disconnect();\n      this.context.close();\n      this.connected = false;\n      this.looping = false;\n      this.reset();\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      this.looping = true;\n      this.play(); // if (!this.loaded) {\n      // \tthis.once('load', () => {\n      // \t\tthis.connect();\n      // \t\tthis.source.loop = true;\n      // \t\tthis.source.start(0);\n      // \t});\n      // \tthis.load();\n      // }\n      // else {\n      // \tif (!this.connected) this.connect();\n      // }\n      // this.source.loop = true;\n      // this.source.start(0);\n    }\n  }]);\n\n  return Sound;\n}(EventEmitter);\n\nexport default Sound;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport EventEmitter from 'events';\n\nvar MonauralScope =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(MonauralScope, _EventEmitter);\n\n  function MonauralScope(canvas, options) {\n    var _this;\n\n    _classCallCheck(this, MonauralScope);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonauralScope).call(this));\n    if (!options) options = {};\n    _this.canvas = canvas;\n    _this.width = _this.canvas.width;\n    _this.height = _this.canvas.height;\n    _this.audioContext = null;\n    _this.meter = null;\n    _this.mediaStreamSource = null;\n    _this._draw = _this.draw.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isRecording = false;\n\n    _this.setTheme({\n      lineWidth: options.lineWidth || 3,\n      strokeColor: options.strokeColor || '#FF0000',\n      clipColor: options.clipColor || options.strokeColor || '#FF0000',\n      fillColor: options.fillColor || 'rgba(255,0,0,0.1)',\n      bgOnColor: options.bgOnColor || null,\n      bgOffColor: options.bgOffColor || null,\n      dotColor: options.dotColor || '#FF0000',\n      dotSize: options.dotSize || 3,\n      background: options.background || null\n    });\n\n    return _this;\n  }\n\n  _createClass(MonauralScope, [{\n    key: \"setTheme\",\n    value: function setTheme(options) {\n      this.theme = options;\n      this.draw();\n    }\n  }, {\n    key: \"createAudioMeter\",\n    value: function createAudioMeter(audioContext, clipLevel, averaging, clipLag) {\n      // this.audioContext = audioContext;\n      var processor = audioContext.createScriptProcessor(512); //this.processor = processor;\n\n      processor.onaudioprocess = function (event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var bufLength = buf.length;\n        var sum = 0;\n        var x; // Do a root-mean-square on the samples: sum up the squares...\n\n        for (var i = 0; i < bufLength; i++) {\n          x = buf[i];\n\n          if (Math.abs(x) >= this.clipLevel) {\n            this.clipping = true;\n            this.lastClip = window.performance.now();\n          }\n\n          sum += x * x;\n        } // ... then take the square root of the sum.\n\n\n        var rms = Math.sqrt(sum / bufLength); // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n\n        this.volume = Math.max(rms, this.volume * this.averaging);\n        if (!this.maxVolume) this.maxVolume = this.volume;\n        this.maxVolume = Math.max(this.volume, this.maxVolume);\n      };\n\n      processor.clipping = false;\n      processor.lastClip = 0;\n      processor.volume = 0;\n      processor.clipLevel = clipLevel || 0.99; //0.98;\n\n      processor.averaging = averaging || 0.97; //0.95;\n\n      processor.clipLag = clipLag || 500; //750;\n\n      processor.connect(audioContext.destination);\n\n      processor.checkClipping = function () {\n        if (!this.clipping) return false;\n        if (this.lastClip + this.clipLag < window.performance.now()) this.clipping = false;\n        return this.clipping;\n      };\n\n      processor.shutdown = function () {\n        this.disconnect();\n        this.onaudioprocess = null;\n      };\n\n      return processor;\n    }\n  }, {\n    key: \"setIsRecording\",\n    value: function setIsRecording(isRecording) {\n      if (this.isRecording === isRecording) {\n        console.log('same');\n        return;\n      }\n\n      this.isRecording = isRecording;\n      if (isRecording) this.startRecording();else this.stopRecording();\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (this.isRecording) {\n        // if (this.audioContext) {\n        // \tif (this.meter) {\n        // \t\tthis.meter.disconnect(this.audioContext.destination);\n        // \t}\n        // } else {\n        // \tconsole.log('error: no audioContext');\n        // }\n        if (this.mediaStreamSource && this.meter) {\n          this.mediaStreamSource.disconnect(this.meter);\n        }\n\n        if (this.meter) {\n          this.meter.shutdown();\n        }\n\n        if (this.audioContext) {\n          this.audioContext.close();\n        }\n      }\n\n      this.isRecording = false;\n      this.isDrawing = false;\n    } // start and stop the mic to bring up the request dialog\n\n  }, {\n    key: \"requestMic\",\n    value: function requestMic() {\n      var _this2 = this;\n\n      this.startRecording(function () {\n        // sucess\n        _this2.stopRecording();\n      }, function () {\n        // error\n        _this2.stopRecording();\n      });\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording(successcb, errorcb) {\n      var _this3 = this;\n\n      if (this.isRecording) {\n        console.log('already recording');\n        return;\n      }\n\n      console.log('startRecording');\n      this.isRecording = true;\n      var audioContext = new AudioContext();\n      this.audioContext = audioContext;\n\n      var success = function success(stream) {\n        console.log('startRecording success');\n\n        if (_this3.audioContext) {\n          try {\n            _this3.mediaStreamSource = audioContext.createMediaStreamSource(stream);\n            _this3.meter = _this3.createAudioMeter(audioContext);\n\n            _this3.mediaStreamSource.connect(_this3.meter);\n\n            _this3.startDrawing();\n\n            if (successcb) successcb();\n          } catch (e) {\n            if (errorcb) errorcb();\n          }\n        }\n      };\n\n      var fail = function fail(e) {\n        console.log('startRecording fail'); //debugger;\n\n        if (errorcb) errorcb();\n      };\n\n      try {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.mediaDevices.getUserMedia; // ask for an audio input\n\n        navigator.getUserMedia({\n          \"audio\": {\n            \"mandatory\": {\n              \"googEchoCancellation\": \"false\",\n              \"googAutoGainControl\": \"false\",\n              \"googNoiseSuppression\": \"false\",\n              \"googHighpassFilter\": \"false\"\n            },\n            \"optional\": []\n          }\n        }, success, fail);\n      } catch (e) {\n        alert('getUserMedia threw exception :' + e);\n      }\n    }\n  }, {\n    key: \"loadAudioData\",\n    value: function loadAudioData(audioContext, source, callback) {\n      var _this4 = this;\n\n      this.audioContext = audioContext;\n      this.source = source;\n      source.connect(audioContext.destination);\n      var meter = this.createAudioMeter(audioContext);\n      this.meter = meter;\n      source.connect(this.meter);\n\n      source.onended = function () {\n        _this4.isPlaying = false; // source.disconnect(audioContext.destination);\n\n        source.disconnect();\n        delete source.buffer; // this.meter.shutdown();\n\n        source.stop();\n\n        _this4.stopDrawing();\n\n        audioContext.close(); // source.disconnect();\n\n        if (callback) callback();\n      };\n\n      this.isPlaying = true;\n      this.startDrawing();\n      source.start(0);\n    }\n  }, {\n    key: \"startDrawing\",\n    value: function startDrawing() {\n      this.isDrawing = true;\n      this.draw();\n    }\n  }, {\n    key: \"stopDrawing\",\n    value: function stopDrawing() {\n      this.meter.volume = 0;\n      this.draw();\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (!this.canvas) {\n        console.log('no canvas');\n        return;\n      }\n\n      var ctx = this.canvas.getContext('2d');\n\n      if (this.theme.background) {\n        ctx.fillStyle = this.theme.background;\n        ctx.fillRect(0, 0, this.width, this.height);\n      } else {\n        ctx.clearRect(0, 0, this.width, this.height);\n      }\n\n      if (this.theme.bgOnColor || this.theme.bgOffColor) {\n        var maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, maxsize, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.isPlaying || this.isRecording ? this.theme.bgOnColor : this.theme.bgOffColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      ctx.lineWidth = this.theme.lineWidth;\n\n      if (this.theme.dotSize) {\n        var size = this.theme.dotSize;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, size, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.theme.dotColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      if (!this.isRecording && !this.isDrawing) {\n        console.log('not drawing');\n      } else {\n        // console.log('IS drawing ', this.meter.volume);\n        if (!this.meter) {\n          console.error('no mater');\n          this.startDrawing();\n          this.startRecording();\n          return;\n        }\n\n        ctx.strokeStyle = this.meter.checkClipping() ? this.theme.clipColor : this.theme.strokeColor;\n\n        var _maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n\n        var _size = this.meter.volume * _maxsize * 5;\n\n        if (_size > this.width / 2 - this.theme.lineWidth) _size = this.width / 2 - this.theme.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, _size, 0, 2 * Math.PI, false);\n\n        if (this.theme.fillColor) {\n          ctx.fillStyle = this.theme.fillColor;\n          ctx.fill();\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.isDrawing) {\n          window.requestAnimationFrame(this._draw);\n        }\n      }\n    }\n  }]);\n\n  return MonauralScope;\n}(EventEmitter);\n\nexport default MonauralScope;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\n// import EventEmitter from 'events';\nimport spinBrowser from './spin/transports/browser';\nimport CollectionModel from './CollectionModel'; // import SingletonModel from './SingletonModel';\n\nimport Spin from './spin/spin';\nimport Listener from './Listen';\nimport State from './State';\nimport Store from './Store';\nimport logger from './logger';\nimport Color from './Color';\nimport Sound from './Sound'; // import AudioScope from './AudioScope';\n\nimport MonauralScope from './MonauralScope';\n\nfunction postMessage(msg) {\n  console.log('client post', msg);\n  var data = {\n    '_jaxcore_client': {\n      message: msg,\n      protocol: 1\n    }\n  }; // if (msg.spin) {\n  // \tconsole.log(data);\n  // \tdebugger;\n  // }\n\n  window.postMessage(data, window.document.location.protocol + window.document.location.host);\n}\n\nvar Listen = new Listener(postMessage); //.setPostCommand();\n\nspinBrowser.setPostCommand(postMessage);\n\nvar JaxcoreClient =\n/*#__PURE__*/\nfunction (_State) {\n  _inherits(JaxcoreClient, _State);\n\n  function JaxcoreClient() {\n    var _this;\n\n    _classCallCheck(this, JaxcoreClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JaxcoreClient).call(this));\n    _this.reconnect = true;\n\n    _this.setState({\n      connectedExtension: false,\n      extensionReady: false\n    });\n\n    var onMessage = function onMessage(event) {\n      //event.isTrusted &&\n      if (document.location.href.indexOf(event.origin) === 0) {\n        if (event.data._jaxcore_content) {\n          var msg = event.data._jaxcore_content.message;\n\n          if (msg.socketDisconnected) {\n            _this.setState({\n              connectedExtension: false\n            });\n          } else if ('extensionReady' in msg) {\n            //console.log('extensionReady', msg);\n            _this.setState({\n              extensionReady: true\n            });\n\n            _this.emit('extension-ready'); // debugger;\n\n          } else if ('connectedExtension' in msg) {\n            _this.setState({\n              connectedExtension: msg.connectedExtension\n            });\n\n            if (msg.connectedExtension) {\n              //callback(null, true);\n              console.log('connectedExtension !');\n\n              _this.emit('connectedExtension');\n            } else {// this.connectExtension();\n            }\n          } else if (msg.spin) {\n            console.log('got spin data from bg', msg.spin);\n            spinBrowser.data(msg.spin);\n          } else if (msg.listen) {\n            console.log('got listen data from bg', msg.spin); //alert('Listen said: ' + msg.listen.recognizedText);\n            // spinBrowser.data(msg.spin);\n\n            Listen.recognizedText(msg.listen.recognizedText);\n          } else if (event.data.target && event.data.target === 'inpage') {} else {\n            console.log('client unhandled message', event.data);\n          }\n        } else {// console.log('not _jaxcore_content', event.data, event.origin);\n        }\n      } else {\n        console.log('nope', event);\n      }\n    };\n\n    window.addEventListener(\"message\", onMessage);\n    spinBrowser.on('command', function (spin, args) {\n      console.log('spin command', spin, args);\n    });\n    return _this;\n  }\n\n  _createClass(JaxcoreClient, [{\n    key: \"disconnectExtension\",\n    value: function disconnectExtension() {\n      this.reconnect = false; // console.log('disconnectExtension');\n\n      postMessage({\n        disconnectExtension: true\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(callback) {\n      var _this2 = this;\n\n      this.once('connectedExtension', callback);\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this2.connectExtension();\n        });\n      }\n    }\n  }, {\n    key: \"connectExtension\",\n    value: function connectExtension(callback) {\n      if (this.state.connectedExtension) {\n        console.log('already connectedExtension');\n        this.emit('connectedExtension');\n      } else {\n        // TO DO CHANGE TO LISTENER ?\n        console.log('Jaxcore connectExtension');\n        postMessage({\n          connectExtension: true\n        });\n      }\n    }\n  }, {\n    key: \"connectSpins\",\n    value: function connectSpins(callback) {\n      var _this3 = this;\n\n      console.log('connectSpins');\n      spinBrowser.addListener('spin-created', function (spin) {\n        callback(spin);\n      });\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this3.connectExtension();\n        });\n      } // if (this.state.connectedExtension) {\n      //\n      // }\n      //\n      // if (this.state.connectedExtension) {\n      // \tthis.onCreate(callback);\n      // } else {\n      // \tthis.once('connectedExtension', () => {\n      // \t\tthis.onCreate(callback);\n      // \t});\n      // \t// setTimeout(() => {\n      // \t\tthis.connectExtension(callback);\n      // \t// }, 1000);\n      // }\n\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(callback) {\n      var _this4 = this;\n\n      spinBrowser.addListener('spin-created', function (spin) {\n        _this4.emit(); // if (spin.state.connected) {\n        // \tcallback(spin);\n        // } else {\n        // \tspin.once('connected', function () {\n        // \t\tcallback(spin)\n        // \t});\n        // }\n\n      });\n    }\n  }]);\n\n  return JaxcoreClient;\n}(State);\n\nvar createStore = function createStore(name) {\n  return new Store(name);\n};\n\nvar createLogger = logger.create;\nexport { CollectionModel, State, Store, createStore, logger, createLogger, Color, Sound, Spin, Listen, MonauralScope };\nvar jaxcore = new JaxcoreClient();\nSpin.connectAll = jaxcore.connectSpins.bind(jaxcore); // todo: refactor this in a better way\n\nexport default jaxcore; // var Client = require('./client');\n// // var ES6Client = require('./es6client');\n//\n// module.exports = {\n// \tlogger: logger,\n// \tcreateLogger: logger.create,\n// \tStore: Store,\n// \tcreateStore: function(name) {\n// \t\treturn new Store(name);\n// \t},\n// \tClient: Client\n// \t// ES6Client: ES6Client\n// };","var EventEmitter = require('events');\n\nvar Spin = require('../spin');\n\nfunction BrowserTransport() {\n  this.constructor();\n}\n\nBrowserTransport.prototype = new EventEmitter();\nBrowserTransport.prototype.constructor = EventEmitter;\n\nBrowserTransport.prototype.data = function (data) {\n  // console.log('onStoreUpdate', data);\n  if (data.store) {\n    // console.log('transport store', data.store);\n    for (var id in data.store) {\n      // console.log('on store', id, data.store[id]);\n      this.add(data.store[id]);\n    } //this.emit('spin-connected', spin);\n\n  } else if (data.created) {\n    // console.log('transport created', data.id, data.created);\n    this.add(data.created);\n  } else if (data.update) {\n    if (data.id in Spin.spinIds) {\n      // console.log('transport update', data.id);\n      this.update(data.id, data.update); //Spin.store.set();\n    } else {\n      console.log('transport postcreate', data.id);\n      data.update.id = data.id;\n      this.add(data.update); // this.add(data);\n    }\n  } else if (data.destroyed) {// console.log('transport created', data.id, data.created);\n  }\n};\n\nBrowserTransport.prototype.update = function (id, changes) {\n  var spin = Spin.spinIds[id]; // var changed = spin.setState(changes);\n  // if (!changed) {\n  // \tconsole.log('no changes');\n  // \treturn;\n  // }\n\n  for (var c in changes) {\n    spin.state[c] = changes[c];\n  } // console.log('update changed', changed);\n\n\n  if ('knobPushed' in changes) {\n    spin.emit('knob', changes.knobPushed);\n  }\n\n  if ('buttonPushed' in changes) {\n    spin.emit('button', changes.buttonPushed);\n  }\n\n  if ('spinPosition' in changes) {\n    // let diff;\n    // let throttled = false;\n    // if (spin._lastSpinPosition !== undefined) {\n    // \tdiff = spin.state.spinPosition - spin._lastSpinPosition;\n    // \tif (Math.abs(diff) > 1) {\n    // \t\tthrottled = true;\n    // \t\twhile (spin._lastSpinPosition !== spin.state.spinPosition) {\n    // \t\t\tconsole.log('skipping from', spin._lastSpinPosition, 'to', spin.state.spinPosition);\n    // \t\t\tspin._lastSpinPosition += diff>0? 1 : -1;\n    // \t\t\tspin.emit('spin', spin.state.spinDirection, spin._lastSpinPosition);\n    // \t\t}\n    // \t}\n    // }\n    // if (!throttled) {\n    // \tconsole.log('SPIN not throttled', spin.state.spinPosition);\n    // \tspin._lastSpinPosition = spin.state.spinPosition;\n    // \tspin.emit('spin', spin.state.spinDirection, spin.state.spinPosition);\n    // }\n    spin._lastSpinPosition = spin.state.spinPosition; // TODO: connected gets set to false upon reconnections\n    // if (spin.state.connected) {\n    // \tconsole.log('emit connected', spin.state.spinPosition);\n\n    spin.emit('spin', spin.state.spinDirection, spin.state.spinPosition); // }\n    // else {\n    // \tconsole.log('not connected?', spin.state.connected);\n    // }\n    // if (spin._lastSpinPosition === undefined) {\n    // \tconsole.log('first _lastSpinPosition', spin.state.spinPosition);\n    // \tdebugger;\n    // }\n    // else {\n    // }\n    // this.emit('update', spin.state);\n  }\n\n  if ('connected' in changes) {\n    if (changes.connected) {\n      this.emit('spin-connected', spin);\n      spin.emit('connect');\n    } else {\n      this.emit('spin-disconnected', spin);\n      spin.emit('disconnect');\n    }\n  }\n\n  console.log('update', changes);\n  spin.emit('update', changes); // spin.on('update', function(changes) {\n  // \tconsole.log('on update', changes);\n  // });\n};\n\nBrowserTransport.prototype.add = function (state) {\n  if (state.id in Spin.spinIds) {\n    // console.log('already added', state.id);\n    this.update(state.id, state);\n    return;\n  }\n\n  var spin = Spin.create(state, this);\n  this.emit('spin-created', spin); // if ('knobPushed' in data) {\n  // \tspin.processKnob(data['knobPushed']);\n  // }\n  // if ('buttonPushed' in data) {\n  // \tspin.processButton(data['buttonPushed']);\n  // }\n  // var me = this;\n  // if (spin.state.connected) {\n  // \t// me.emit('spin-created', spin);\n  // }\n  // else {\n  // \tspin.once('connect', function() {\n  // \t\tme.emit('spin-connected', spin);\n  // \t});\n  // }\n};\n\nBrowserTransport.prototype.remove = function (data) {};\n\nBrowserTransport.prototype.sendCommand = function (spin, args) {\n  // this.emit('command', spin, args);\n  console.log('sendCommand', spin.id, args);\n  var id = args.shift();\n  var method = args.shift();\n  console.log('args', args); //debugger;\n\n  this.postCommandFn({\n    spinCommand: {\n      id: id,\n      method: method,\n      args: args\n    }\n  });\n};\n\nBrowserTransport.prototype.setPostCommand = function (fn) {\n  this.postCommandFn = fn;\n};\n\nvar spinBrowser = new BrowserTransport();\nmodule.exports = spinBrowser;","module.exports = {\n  \"Jack\": {\n    \"name\": \"Jack\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 10,\n      speed: 180,\n      variant: 'm2'\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 0\n    },\n    \"slow\": {\n      speed: 120\n    },\n    \"fast\": {\n      speed: 250\n    }\n  },\n  \"Pris\": {\n    \"name\": \"Pris\",\n    \"phoneticName\": \"Priss\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 47,\n      speed: 130,\n      variant: 'f5'\n    },\n    \"high\": {\n      pitch: 80\n    },\n    \"low\": {\n      pitch: 20\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Roy\": {\n    \"name\": \"Roy\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 35,\n      speed: 180,\n      variant: 'm1'\n    },\n    \"high\": {\n      pitch: 3\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Scotty\": {\n    \"name\": \"Scotty\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 35,\n      speed: 200,\n      variant: 'm3'\n    },\n    \"high\": {\n      pitch: 3\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 230\n    }\n  },\n  \"Xenu\": {\n    \"name\": \"Xenu\",\n    \"phoneticName\": \"zee-new\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 1,\n      pitch: 35,\n      speed: 170,\n      variant: 'klatt3'\n    },\n    \"high\": {\n      pitch: 65\n    },\n    \"low\": {\n      pitch: 0\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Cylon\": {\n    \"name\": \"Cylon\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 1,\n      pitch: 35,\n      speed: 170,\n      variant: 'whisperf'\n    },\n    \"high\": {\n      pitch: 65,\n      speed: 150\n    },\n    \"low\": {\n      pitch: 0,\n      speed: 140\n    },\n    \"slow\": {\n      pitch: 20,\n      speed: 100,\n      wordgap: 1\n    },\n    \"fast\": {\n      speed: 200,\n      wordgap: 0\n    }\n  },\n  \"Leon\": {\n    \"name\": \"Leon\",\n    \"phoneticName\": \"Leeon\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 40,\n      speed: 150,\n      variant: 'm7'\n    },\n    \"high\": {\n      pitch: 55\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Rachel\": {\n    \"name\": \"Rachel\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 60,\n      speed: 150,\n      variant: 'f2'\n    },\n    \"high\": {\n      pitch: 75\n    },\n    \"low\": {\n      pitch: 40\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Zhora\": {\n    \"name\": \"Zhora\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 60,\n      speed: 150,\n      variant: 'f4'\n    },\n    \"high\": {\n      pitch: 75\n    },\n    \"low\": {\n      pitch: 40\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Sam\": {\n    \"name\": \"Sam\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 64,\n      pitch: 64,\n      throat: 128,\n      mouth: 128\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 110\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 40\n    }\n  },\n  \"Elf\": {\n    \"name\": \"Elf\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 72,\n      pitch: 64,\n      throat: 110,\n      mouth: 160\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 110\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 40\n    }\n  },\n  \"Robo\": {\n    \"name\": \"Robo\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 82,\n      pitch: 60,\n      throat: 190,\n      mouth: 190\n    },\n    \"high\": {\n      pitch: 40\n    },\n    \"low\": {\n      pitch: 100\n    },\n    \"slow\": {\n      speed: 120\n    },\n    \"fast\": {\n      speed: 50\n    }\n  },\n  \"Granny\": {\n    \"name\": \"Granny\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 82,\n      pitch: 35,\n      throat: 145,\n      mouth: 145\n    },\n    \"high\": {\n      pitch: 25\n    },\n    \"low\": {\n      pitch: 120\n    },\n    \"slow\": {\n      speed: 130\n    },\n    \"fast\": {\n      speed: 40\n    }\n  }\n};","var EventEmitter = require('events');\n\nvar plugin = require('jaxcore-plugin');\n\nvar log = plugin.createLogger('Spin Service');\nvar spinStore = plugin.createStore('Spin Store');\nvar Client = plugin.Client;\n\nvar SpinBuffer = require('./buffer'); // var udp, tcp, usb;\n// var SpinUDPService = require('./udp');\n// var udp = new SpinUDPService();\n//\n// var SpinTCPService = require('./tcp');\n// var tcp = new SpinTCPService();\n//\n// var SpinUSBService = require('./usb');\n// var usb = new SpinUSBService();\n//\n// var SpinBLEService = require('./ble');\n// var ble = new SpinBLEService();\n\n\nvar spinIds = {};\nvar spinIps = {}; // tcp.on('connect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp connect', id);\n//\n// \tudp.connectedTCP(id);\n//\n// \tspinIps[ip] = id;\n//\n// \tif (id in spinIds) {\n// \t\tspinIds[id]._connected();\n// \t\t// spinIds[id].emit('connect', spinIds[id]);\n// \t}\n// \t// var ip = socket.remoteAddress;\n// \t// log('connected',id,ip);\n// });\n//\n// tcp.on('disconnect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp disconnect', id, ip, spinIps);\n//\n// \tudp.disconnectedTCP(id);\n//\n// \tif (ip in spinIps) {\n//\n//\n// \t\tlog('destroying ', id, ip, spinIps[ip]);\n// \t\t//spinIds[id]._disconnected();\n//\n// \t\tspinIds[id].destroy();\n// \t\tdelete spinIds[id];\n// \t\tdelete spinIps[ip];\n//\n// \t}\n// \telse {\n// \t\tlog('got disconnected from unknown', ip);\n// \t}\n// });\n//\n// usb.on('connect', function (id) {\n// \tif (id in spinIds) {\n// \t\tlog('on usb connect', id);\n// \t\tspinIds[id]._connected();\n// \t}\n// \telse {\n// \t\tlog('error on usb connect', id);\n// \t}\n// });\n\nvar _instance = 0;\n\nfunction Spin(device, transport) {\n  this.constructor();\n  if (transport) this.transport = transport;else {\n    debugger;\n  }\n  var instance = _instance++;\n  this.log = plugin.createLogger('Spin ' + instance);\n  var ip = device.ip;\n  var id = device.id;\n  spinIds[id] = this;\n  this.id = id; // if (device.port) {\n  // \tthis.udpPort = device.port;\n  // }\n  // if (device.usbDevice) {\n  // \tthis.usbDevice = device.usbDevice;\n  // }\n  // if (device.blePeripheral) {\n  // \tthis.blePeripheral = device.blePeripheral;\n  // }\n\n  var now = new Date();\n  this.setStore(spinStore);\n  this.setDefaults(device, {\n    id: id,\n    ip: ip,\n    // remove ?\n    instance: instance,\n    connected: false,\n    spinPosition: 0,\n    spinDirection: 1,\n    spinPreviousTime: now,\n    spinTime: now,\n    knobPushed: false,\n    knobPushTime: now,\n    knobReleaseTime: now,\n    knobPushDuration: 0,\n    knobHold: false,\n    buttonPushed: false,\n    buttonPushTime: now,\n    buttonReleaseTime: now,\n    buttonPushDuration: 0,\n    buttonHold: false,\n    batteryVoltage: 0,\n    batteryPercent: 0,\n    isCharging: false,\n    isCharged: false,\n    sleeping: false,\n    inactivityTime: 0\n  });\n  this.createSettings({\n    brightness: 16,\n    knobHoldThreshold: 2000,\n    buttonHoldThreshold: 2000,\n    sleepEnabled: true,\n    sleepTimer: 0\n  }); // if (this.usbDevice) {\n  // \t// usb.addSpin(this);\n  // }\n  // else {\n  // \t// tcp.addSpin(spinIds, id);\n  // }\n}\n\nSpin.store = spinStore;\nSpin.spinIds = spinIds;\nSpin.Buffer = SpinBuffer;\nSpin.prototype = new Client();\nSpin.prototype.constructor = Client;\n\nSpin.prototype.setDefaults = function (config, defaults) {\n  this.setState(config);\n  var d = {};\n\n  for (var i in defaults) {\n    if (!(i in config)) {\n      d[i] = defaults[i];\n    }\n  }\n\n  this.setState(d);\n};\n\nSpin.prototype.createSettings = function (settings) {\n  this.settingDefaults = {};\n  this.settingNames = [];\n\n  for (var i in settings) {\n    this.settingNames.push(i);\n    this.settingDefaults[i] = settings[i];\n    this.state[i] = settings[i];\n  } //this.log('created settings', this.state);\n\n};\n\nSpin.prototype.changeSettings = function (settings) {\n  log('changing settings', settings);\n  var changes = {};\n  var hasChanges = false;\n\n  for (var name in settings) {\n    if (name in this.settingDefaults) {\n      var value = settings[name];\n      var d = {};\n      d[name] = settings[name];\n      var c = this.setState(d);\n\n      if (c) {\n        this.log('changed setting:', name + ' = ' + value, '(default ' + this.settingDefaults[name] + ')');\n        hasChanges = true;\n        changes[name] = value;\n      }\n    }\n  }\n\n  if (hasChanges) {\n    this.log('settings-changed', changes);\n    this.emit('settings-changed', changes);\n  }\n};\n\nSpin.prototype.buffer = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.spin.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferDelay = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.delay.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferReset = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.reset.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.cancelHoldEvents = function () {\n  clearTimeout(this._knobHoldTimer);\n  clearTimeout(this._buttonHoldTimer);\n};\n\nSpin.prototype.isConnected = function () {\n  return this.state.connected;\n};\n\nSpin.prototype._connected = function () {\n  this.resetDefaults();\n  this.setState({\n    connected: true,\n    sleeping: false\n  });\n  this.emit('connect', this);\n};\n\nSpin.prototype.connect = function () {\n  Spin.transport.connect(this); // if (this.usbDevice) {\n  // \tusb.connectSpin(this);\n  // }\n  // else {\n  // \tthis.log('connecting (' + this.udpPort + ')');\n  // \tudp.connectTCP(this.state.id, this.state.ip, this.udpPort);\n  // }\n};\n\nSpin.prototype._sleeping = function () {\n  this.setState({\n    sleeping: true\n  });\n  this.emit('sleeping');\n};\n\nSpin.prototype._removeEvents = function () {\n  var id = this.id; //tcp.disconnect(this.state.id, this.state.ip);\n\n  Spin.transport.remove(this); // if (this.usbDevice) {\n  // \tusb.removeSpin(this);\n  // }\n  // else {\n  // \ttcp.removeSpin(this);\n  // }\n};\n\nSpin.prototype.disconnect = function () {\n  this.setState({\n    connected: false\n  });\n  this.resetDefaults();\n  this.emit('disconnect', this);\n};\n\nSpin.prototype.resetDefaults = function () {\n  this.setState({\n    spinPosition: 0,\n    knobPushed: false,\n    knobReleased: true,\n    buttonPushed: false,\n    buttonReleased: true\n  });\n};\n\nSpin.prototype.processSpin = function (position) {\n  console.log('processSpin', position);\n  var direction = position > this.state.spinPosition ? 1 : -1;\n\n  if (position !== this.state.spinPosition) {\n    // var diff = this.state.spinPosition - position;\n    //\n    // if (Math.abs(diff) > 1 && this.state.throttle!=0) {\n    // \tvar throttledPosition = this.state.spinPosition;\n    // \t// while (this.state.spinPosition !== position) {\n    // \t// \tthrottledPosition = throttledPosition + direction;\n    // \t// \tthis.processEncoder(throttledPosition, direction, true);\n    // \t// \tthis.log(direction, 'position:', throttledPosition, this.state.spinPosition === position?'(synced)':'(throttled)');\n    // \t// }\n    // }\n    // else {\n    // \tthis.log(direction, 'position:', position);\n    // \tthis.processEncoder(position, direction, false);\n    // }\n    //\n    // this.setState({\n    // \tdirection\n    // });\n    this.processEncoder(position, direction, false);\n  }\n};\n\nSpin.prototype.processEncoder = function (position, direction, throttled) {\n  var changes = {};\n  this.cancelHoldEvents();\n\n  if (direction !== this.state.spinDirection) {\n    changes.spinDirection = direction;\n  }\n\n  changes.spinPosition = position;\n  changes.spinPreviousTime = this.state.spinTime;\n  changes.spinTime = new Date().getTime();\n  this.setState(changes);\n  this.emit('spin', direction, position, throttled); // this.emit('update', changes);\n};\n\nSpin.prototype.processKnob = function (pushed) {\n  //this.log('KNOB', pushed);\n  var me = this;\n  var changes = {};\n  changes.knobPushed = pushed;\n  changes.knobReleased = !pushed;\n\n  if (pushed) {\n    changes.knobPushTime = new Date().getTime();\n    this.setState(changes);\n    clearTimeout(this._knobHoldTimer);\n    this._knobHoldTimer = setTimeout(function () {\n      me.log('knobHoldThreshold exceeded');\n      me.setState({\n        knobHold: true\n      });\n      me.emit('knob-hold');\n    }, this.state.knobHoldThreshold);\n  } else {\n    var wasHeld = this.state.knobHold;\n\n    if (wasHeld) {\n      changes.knobHold = false;\n      me.emit('knob-hold');\n      this.log('knob was held, cancelling presses');\n    }\n\n    changes.knobReleaseTime = new Date().getTime(); // changes.knobReleaseTime;\n    // changes.knobReleaseTime - this.state.knobPushTime;\n\n    clearTimeout(this._knobHoldTimer); // if (me.state.knobPushDuration > me.state.knobLongPressThreshold) {\n    // \tme.log('knobLongPressThreshold exceeded');\n    // \tme.emit('knob-longpress');\n    // }\n    // else {\n    // \tme.emit('knob-press');\n    // }\n\n    this.setState(changes);\n\n    if (wasHeld) {\n      this.emit('knob-longpress');\n    } else {\n      this.emit('knob-press');\n    }\n  }\n\n  this.emit('knob', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processButton = function (pushed) {\n  var me = this;\n  var changes = {};\n  changes.buttonPushed = pushed;\n  changes.buttonReleased = !pushed;\n\n  if (pushed) {\n    changes.buttonPushTime = new Date().getTime();\n    clearTimeout(this._buttonHoldTimer);\n    this._buttonHoldTimer = setTimeout(function () {\n      me.log('buttonHoldThreshold exceeded'); // me.setState({\n      // \tbuttonHold: true\n      // });\n\n      changes.buttonHold = true;\n      me.emit('button-hold');\n    }, this.state.buttonHoldThreshold);\n  } else {\n    var wasHeld = this.state.buttonHold;\n\n    if (wasHeld) {\n      changes.buttonHold = false;\n      this.log('button was held, cancelling presses');\n    }\n\n    changes.buttonReleaseTime = new Date().getTime();\n    changes.buttonPushDuration = changes.buttonReleaseTime - this.state.buttonPushTime;\n    clearTimeout(this._buttonHoldTimer); // if (me.state.buttonPushDuration > me.state.buttonLongPressThreshold) {\n    // \tme.log('buttonLongPressThreshold exceeded');\n    // \tme.emit('button-longpress');\n    // }\n    // else {\n    // \tme.emit('button-press');\n    // }\n  } //debugger;\n\n\n  this.setState(changes);\n\n  if (wasHeld) {\n    this.emit('button-longpress');\n  } else {\n    this.emit('button-press');\n  }\n\n  this.emit('button', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processStatus = function (batteryVoltage, isCharging, isCharged, sleepTimer, inactivityTime, sleepEnabled) {\n  // round off batteryVoltage\n  batteryVoltage = Math.round(batteryVoltage * 10) / 10;\n  var first = this.state.batteryVoltage === 0;\n  var changes = {};\n  var hasChanges = false;\n\n  if (this.state.sleepTimer !== sleepTimer) {\n    this.state.sleepTimer = changes.sleepTimer = sleepTimer;\n    hasChanges = true;\n  }\n\n  if (this.state.inactivityTime !== inactivityTime) {\n    this.state.inactivityTime = changes.inactivityTime = inactivityTime;\n  }\n\n  if (this.state.sleepEnabled !== sleepEnabled) {\n    this.state.sleepEnabled = changes.sleepEnabled = sleepEnabled;\n    hasChanges = true;\n  }\n\n  if (this.state.isCharged !== isCharged) {\n    this.state.isCharged = isCharged;\n    changes.isCharged = isCharged;\n    if (!first) this.emit('charged', isCharged);\n  }\n\n  if (this.state.batteryVoltage !== batteryVoltage) {\n    hasChanges = true;\n    this.state.batteryVoltage = changes.batteryVoltage = batteryVoltage;\n    this.state.batteryPercent = changes.batteryPercent = isCharging ? 1 : Math.min(batteryVoltage / 4.2, 1);\n\n    if (!first) {\n      // dont emit event on first reception\n      this.emit('battery', batteryVoltage, changes.batteryPercent);\n    }\n\n    if (this.state.isCharging !== isCharging) {\n      this.state.isCharging = isCharging;\n      changes.isCharging = isCharging;\n      if (!first) this.emit('charging', isCharging);\n    }\n  } // if (hasChanges) this.emit('update', changes);\n\n};\n\nSpin.prototype.processSleep = function (status, millis) {\n  switch (status) {\n    case 0:\n      this.emit('wake');\n      break;\n\n    case 1:\n      this.emit('sleep-warning', millis);\n      break;\n\n    case 2:\n      this._sleeping();\n\n      break;\n  }\n};\n\nSpin.prototype.sendCommand = function () {\n  var args = Array.prototype.slice.call(arguments);\n  this.transport.sendCommand(this, args); // if (this.usbDevice) {\n  // \tusb.sendCommand.apply(usb, args);\n  // }\n  // else {\n  // \ttcp.sendCommand.apply(tcp, args);\n  // } //this.id, 'FLASH', color.join(',') + ',' + repeat);\n};\n\nSpin.prototype.flash = function (color) {\n  this.sendCommand(this.id, 'FLASH', color); //color.join(','));\n  // if (this.bleDevice) this.bleDevice.flash(color);\n  // else {\n  // \tcolor.push(1);\n  // \tthis.sendCommand(this.id, 'FLASH', color.join(','));\n  // }\n};\n\nSpin.prototype.quickFlash = function (color, repeat) {\n  if (!repeat) repeat = 1;\n  if (this.bleDevice) this.bleDevice.quickFlash(color, repeat);else this.sendCommand(this.id, 'QUICKFLASH', color.join(',') + ',' + repeat);\n}; // Spin.prototype.quickFlashSingle = function (color, index) {\n// \tif (!index) index = 0;\n// \tindex = parseInt(index);\n// \tthis.sendCommand(this.id, 'QUICKFLASHONE', color.join(',') + ',' + index);\n// };\n\n\nSpin.prototype.lightsOn = function (color) {\n  if (this.bleDevice) this.bleDevice.lights(color);else this.sendCommand(this.id, 'LIGHTSON', color);\n};\n\nSpin.prototype.lightsOff = function () {\n  if (this.bleDevice) this.bleDevice.lights([0, 0, 0]);else this.sendCommand(this.id, 'LIGHTSOFF');\n};\n\nSpin.prototype.setThrottle = function (throttle) {\n  this.setState({\n    throttle: 0\n  });\n  if (!this.bleDevice) this.sendCommand(this.id, 'THROTTLE', throttle);\n};\n\nSpin.prototype.setBrightness = function (brightness) {\n  if (this.bleDevice) this.bleDevice.setBrightness(brightness);else this.sendCommand(this.id, 'BRIGHTNESS', brightness);\n};\n\nSpin.prototype.setName = function (name) {\n  if (this.bleDevice) this.bleDevice.setName(name);\n}; // Spin.prototype.setRotateColors = function (mode, colorLeft, colorRight) {\n// \tthis.sendCommand(this.id, 'ROTATECOLORS', colorLeft.concat(colorRight));\n// };\n\n\nSpin.prototype.rotate = function (direction, mode, color1, color2) {\n  if (!mode) mode = 0;\n  this.log('rotate', direction, mode);\n  if (this.bleDevice) this.bleDevice.rotate(mode, direction, color1, color2);else this.sendCommand(this.id, 'ROTATE', [mode, direction]);\n}; // Spin.prototype.setScaleColors = function (mode, colorLow, colorHigh, colorPoint) {\n// \tthis.sendCommand(this.id, 'SCALECOLORS', colorLow.concat(colorHigh).concat(colorPoint));\n// };\n\n\nSpin.prototype.scale = function (percent, mode, color1, color2, color3) {\n  if (this.bleDevice) this.bleDevice.scale(mode, percent, color1, color2, color3);else this.sendCommand(this.id, 'SCALAR', [mode, percent]);\n};\n\nSpin.prototype.sleep = function () {\n  if (this.bleDevice) this.bleDevice.sleep();\n  this.sendCommand(this.id, 'SLEEP');\n};\n\nSpin.prototype.delaySleep = function () {\n  if (this.bleDevice) this.bleDevice.delaySleep();else this.sendCommand(this.id, 'DELAYSLEEP');\n}; // Spin.prototype.setSleepEnabled = function (enabled) {\n// \tif (enabled) this.sendCommand(this.id, 'ENABLESLEEP');\n// \telse this.sendCommand(this.id, 'DISABLESLEEP');\n// };\n// Spin.prototype.enableSleep = function () {\n// \ttcp.sendCommand(this.id, 'ENABLESLEEP');\n// };\n// Spin.prototype.disableSleep = function () {\n// \ttcp.sendCommand(this.id, 'DISABLESLEEP');\n// };\n\n\nSpin.prototype.setKnobHoldThreshold = function (th) {\n  this.changeSettings({\n    knobHoldThreshold: th\n  });\n};\n\nSpin.prototype.setButtonHoldThreshold = function (th) {\n  this.changeSettings({\n    buttonHoldThreshold: th\n  });\n};\n\nSpin.prototype.setSleepTimer = function (minutes) {\n  if (this.bleDevice) this.bleDevice.setSleepTimer(minutes);else {\n    var ms = minutes * 60 * 1000;\n    this.sendCommand(this.id, 'SLEEPTIMER', ms);\n  }\n};\n\nSpin.prototype.destroy = function () {\n  this.disconnect();\n  this.log('destroying');\n\n  this._removeEvents();\n\n  delete this.state;\n};\n\nSpin.debug = function (q) {\n  plugin.logger.quiet(!q);\n};\n\nSpin.spinIds; // Spin.startServices = function () {\n// \tudp.startService();\n// \ttcp.startService();\n// };\n//\n// Spin.scan = function () {\n// \tSpin.startServices();\n//\n// \tvar _id;\n// \tvar callback;\n// \tif (arguments.length === 2) {\n// \t\tif (arguments[0] === null) {\n// \t\t\tlog('scanning');\n// \t\t}\n// \t\telse {\n// \t\t\tlog('scanning for ' + arguments[0]);\n// \t\t}\n// \t\tcallback = arguments[1];\n// \t}\n// \telse {\n// \t\tcallback = arguments[0];\n// \t\tlog('scanning');\n// \t}\n//\n// \t// var found = {};\n//\n// \tvar stop = function () {\n// \t\tudp.removeListener('ping', scanPing);\n// \t\tlog('stopped scanning');\n// \t};\n//\n// \tvar rescan = function () {\n// \t\t// found = {};\n// \t\tSpin.scan(callback);\n// \t};\n//\n// \tvar scanPing = function (pingNumber, ip, id, port, protocol, version, name, lastModified) {\n// \t\tif (!udp.isConnecting(id)) {\n//\n// \t\t\tif (!_id || _id === id) {\n// \t\t\t\t// if (found[id]) {\n// \t\t\t\t// \tlog('previously found', id);\n// \t\t\t\t// }\n// \t\t\t\t// else {\n// \t\t\t\t// \tfound[id] = true;\n//\n// \t\t\t\tcallback({\n// \t\t\t\t\tip: ip,\n// \t\t\t\t\tid: id,\n// \t\t\t\t\tport: port\n// \t\t\t\t}, stop, rescan);\n//\n// \t\t\t\t//}\n// \t\t\t}\n//\n// \t\t}\n// \t\telse log('connectAll isConnecting', id);\n// \t};\n//\n// \tudp.addListener('ping', scanPing);\n// };\n//\n// Spin.connectAll = function (callback) {\n// \tSpin.connectWifi(callback);\n// \t// Spin.connectUSB(callback);\n// \tSpin.connectBLE(callback);\n// };\n//\n// Spin.connectWifi = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tlog('connectAll found', device);\n// \t\tvar spin = Spin.create(device);\n// \t\tspin.once('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n// \t\tspin.connect();\n// \t});\n// };\n//\n// Spin.connectOne = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tdone();\n// \t\tlog('connectOne found', device);\n//\n// \t\tvar spin = Spin.create(device);\n//\n// \t\tspin.on('disconnect', function () {\n// \t\t\tlog('scan disconnect');\n// \t\t\trescan();\n// \t\t});\n//\n// \t\tcallback(spin);\n//\n// \t\tspin.connect();\n// \t});\n//\n// \t// Spin.connectTo(null, callback);\n// };\n//\n\nSpin.create = function (device, transport) {\n  if (device.id in spinIds) {\n    log('device exists', device);\n    spinIds[device.id].destroy();\n    delete spinIds[device.id];\n    var spin = new Spin(device, transport);\n    return spinIds[device.id];\n  } else {\n    log('creating new device', device, transport);\n    return new Spin(device, transport);\n  }\n}; //\n// Spin.connectTo = function (id, callback) {\n// \tSpin.scan(id, function (device, done, rescan) {\n// \t\tif (!id || device.id === id) {\n// \t\t\tdone();\n//\n// \t\t\tlog('connectTo found', device);\n//\n// \t\t\tvar spin = Spin.create(device);\n//\n// \t\t\tspin.on('disconnect', function () {\n// \t\t\t\tlog('scan disconnect');\n// \t\t\t\trescan();\n// \t\t\t});\n//\n// \t\t\tcallback(spin);\n//\n// \t\t\tspin.connect();\n// \t\t}\n// \t});\n// };\n//\n// Spin.connectUSBDevice = function (devicePath, callback) {\n// \tif (devicePath in usb.ids) {\n// \t\tlog(devicePath,'already exists');\n// \t\tusb.open(devicePath);\n// \t\treturn false;\n// \t}\n// \tlog('connecting usb', devicePath);\n//\n// \tvar spin = Spin.create({\n// \t\tid: devicePath,\n// \t\tusbDevice: devicePath\n// \t});\n//\n// \tspin.on('connect', function () {\n// \t\tlog('usb connect');\n// \t\tcallback(spin);\n// \t});\n//\n// \tspin.on('disconnect', function () {\n// \t\tlog('usb disconnect');\n// \t});\n//\n// \tspin.connect();\n// \treturn true;\n// };\n//\n// function startInterval(cb,t) {\n// \tcb();\n// \treturn setInterval(cb,t);\n// }\n//\n// Spin.connectUSB = function () {\n// \tvar devicePath, callback;\n// \tif (arguments.length === 1) {\n// \t\tcallback = arguments[0];\n// \t\tstartInterval(function() {\n// \t\t\tusb.getSpinUSBPorts(function(devicePaths) {\n// \t\t\t\tlog('usb', devicePaths);\n// \t\t\t\tdevicePaths.forEach(function(devicePath) {\n// \t\t\t\t\tSpin.connectUSBDevice(devicePath, callback);\n// \t\t\t\t});\n// \t\t\t});\n// \t\t},5000);\n// \t}\n// \telse if (arguments.length === 2) {\n// \t\tdevicePath = arguments[0];\n// \t\tcallback = arguments[1];\n// \t\tSpin.connectUSBDevice(devicePath, callback);\n// \t}\n// };\n//\n// Spin.connectBLE = function() {\n// \tif (typeof ble==='undefined') return;\n// \tvar deviceId, callback;\n//\n// \tif (arguments.length===2) {\n// \t\tdeviceId = arguments[0];\n// \t\tcallback = arguments[1];\n// \t}\n// \telse callback = arguments[0];\n//\n// \tble.on('discover', function(peripheral) {\n// \t\tvar id = peripheral.id;\n// \t\tif (deviceId) {\n// \t\t\tif (id !== deviceId) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t}\n//\n// \t\tif (deviceId) {\n// \t\t\tble.stopScan();\n// \t\t}\n//\n// \t\tif (id in ble.ids) {\n// \t\t\tlog('ble already exists',id);\n// \t\t\t//ble.connect(devicePath);\n// \t\t\treturn false;\n// \t\t}\n//\n// \t\tlog('connecting ble', id);\n//\n// \t\tvar spin = Spin.create({\n// \t\t\tid: id,\n// \t\t\tblePeripheral: peripheral\n// \t\t});\n//\n// \t\tspin.on('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n//\n// \t\t// spin.on('disconnect', function() {\n// \t\t// \t//callback(spin);\n// \t\t// \tconsole.log('disconnect ble??');\n// \t\t// });\n//\n// \t\tble.connectSpin(spin);\n//\n// \t});\n//\n// \tble.scan();\n// };\n\n\nmodule.exports = Spin;","// var chalk = require('chalk');\nvar chalk = {\n  green: console.log,\n  yellow: console.log,\n  cyan: console.log,\n  magenta: console.log\n};\n\nvar _quiet = process.env.NODE_ENV !== 'dev';\n\nvar logger = {\n  quiet: function quiet(q) {\n    _quiet = q;\n  },\n  log: function log() {\n    if (_quiet) return;\n    var args = Array.prototype.slice.call(arguments);\n    args = args.map(function (arg, index) {\n      if (index === 0 && typeof arg === 'object' && arg.loggerName) {\n        return chalk.green(arg.loggerName);\n      }\n\n      if (typeof arg === 'string') {\n        if (index >= 2 && typeof args[0] === 'object' && args[0].loggerName && typeof args[1] === 'string') return arg;\n        return chalk.cyan(arg);\n      }\n\n      if (typeof arg === 'number') return chalk.magenta(arg);\n      if (arg === null) return chalk.yellow('null');\n      if (typeof arg === 'undefined') return chalk.yellow('undefined');\n      return arg;\n    });\n    console.log.apply(null, args);\n  },\n  create: function create(name, colors) {\n    return function (n) {\n      return function log() {\n        var args = Array.prototype.slice.call(arguments);\n        args.unshift({\n          loggerName: n\n        });\n        logger.log.apply(logger, args);\n      };\n    }(name);\n  }\n};\nmodule.exports = logger;","var EventEmitter = require('events');\n\nvar createLogger = require('./logger').create;\n\nfunction Store(name) {\n  this.constructor();\n  this.log = createLogger(name);\n  this.log('created');\n  this.ids = {};\n}\n\nStore.prototype = new EventEmitter();\nStore.prototype.constructor = EventEmitter;\n\nStore.prototype.destroy = function (id) {\n  this.log('destroying', id);\n  this[id].removeAllListeners('created');\n  this[id].removeAllListeners('update');\n  delete this.ids[id];\n  delete this[id];\n  this.emit('destroyed', id);\n};\n\nStore.prototype.set = function (id, data) {\n  // console.log('set', id, data);\n  if (!id) {\n    console.log('no set id', data);\n    return;\n  }\n\n  var changes = {};\n  var hasChanges = false;\n  var created = false;\n\n  if (!this[id]) {\n    this[id] = data;\n    this.ids[id] = true;\n    this.emit('created', id, data);\n    this.log('created', id, data);\n    hasChanges = true;\n    created = true;\n    changes = data;\n  } else {\n    var s = this[id];\n\n    for (var i in data) {\n      if (s[i] !== data[i]) {\n        hasChanges = true;\n        changes[i] = s[i] = data[i];\n      }\n    }\n  }\n\n  if (hasChanges) {\n    if (!created) {// this.log(id + ' update', changes);\n      // console.log(id + ' update', changes);\n    }\n\n    this.emit('update', id, changes);\n    return changes;\n  } else {\n    return null;\n  }\n};\n\nmodule.exports = Store;","function isColor(c) {\n  return c instanceof Color;\n}\n\nvar colors = require('./colors');\n\nvar Color = function Color() {\n  if (arguments.length === 1 && typeof arguments[0] === 'number' && arguments[0] >= 0 && arguments[0] <= 255) {\n    return this.value = colors.rgb(arguments[0], arguments[0], arguments[0]);\n  }\n\n  if (isColor(arguments[0])) this.value = arguments[0].value;else this.value = arguments.length > 0 ? colors.rgb.apply(null, Array.from(arguments)) : '#000';\n};\n\nColor.prototype = {\n  toString: function toString() {\n    return this.value;\n  },\n  // setters\n\n  /**\n   * Sets the transparency of a color\n   *\n   * @method alpha\n   * @memberof Color\n   * @param {Number} alpha transparency level between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').alpha(0.5);  // returns {value:\"rgba(255,0,0,0.5)\"}\n   *\n   */\n  alpha: function alpha(v) {\n    return new Color(colors.alpha(this.value, v));\n  },\n\n  /**\n   * Increases the \"lightness\" of a color value\n   *\n   * @method lighten\n   * @memberof Color\n   * @param {Number} lightenBy amount to lighten between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').lighten(0.5); // returns {value:\"#FF8080\"}\n   *\n   */\n  lighten: function lighten(v) {\n    return new Color(colors.lighten(this.value, v));\n  },\n\n  /**\n   * Decreases the \"lightness\" of a color value\n   *\n   * @method darken\n   * @memberof Color\n   * @param {Number} darkenBy amount to darken between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').darken(0.5); // returns {value:\"#800000\"}\n   *\n   */\n  darken: function darken(v) {\n    return new Color(colors.darken(this.value, v));\n  },\n\n  /**\n   * Increases the \"saturation\" of a color value\n   *\n   * @method saturate\n   * @memberof Color\n   * @param {Number} saturateBy amount to saturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(125,0,0)').saturate(0.2); // returns {value:\"#7D0000\"}\n   *\n   */\n  saturate: function saturate(v) {\n    return new Color(colors.saturate(this.value, v));\n  },\n\n  /**\n   * Decreases the \"saturation\" of a color value\n   *\n   * @method desaturate\n   * @memberof Color\n   * @param {Number} desaturateBy amount to desaturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(125,0,0).desaturate(0.2); // returns {value:\"#710C0C\"}\n   *\n   */\n  desaturate: function desaturate(v) {\n    return new Color(colors.desaturate(this.value, v));\n  },\n\n  /**\n   * Modify the hue, lightness, and saturation of a color\n   *\n   * @method shiftHSL\n   * @memberof Color\n   * @param {Number} hue amount to change the hue by, between 0 and 1\n   * @param {Number} saturation amount to change the hue by, between 0 and 1\n   * @param {Number} lightness amount to change the hue by, between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHSL(0.1,0.2,0.3); // returns {value:\"#94FF4D\"}\n   *\n   */\n  shiftHSL: function shiftHSL(h, s, l, a) {\n    var c = new Color(colors.shiftHSL(this.value, h, s, l));\n    if (a) c = c.alpha(a);\n    return c;\n  },\n\n  /**\n   * Shifts the \"hue\" of a color value by a given percentage\n   *\n   * @method shiftHue\n   * @memberof Color\n   * @param {Number} hueShift amount to modify the hue by between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHue(0.25); // returns {value:\"#00FF7F\"}\n   *\n   */\n  shiftHue: function shiftHue(v) {\n    return new Color(colors.shiftHue(this.value, v));\n  },\n\n  /**\n   * Shifts the hue of a color closer to another color by a given percentage\n   *\n   * @method combine\n   * @memberof Color\n   * @param {Object} targetColor color string, array, or object\n   * @param {Number} [amount=0.5] how close to the target color between 0 and 1 (0.5 is half-way between)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(0).combine('#fff'); // returns {value:\"#808080\"}\n   * new Color(255,0,0).combine('#00f',0.7); // returns {value:\"#4D00B3\"}\n   *\n   */\n  combine: function combine(t, v) {\n    if (isColor(t)) t = t.value;\n    var c = colors.combine(this.value, t, v);\n    return new Color(c);\n  },\n\n  /**\n   * Shifts the \"hue\" of a color closer to another color by a given percentage\n   *\n   * @method tint\n   * @memberof Color\n   * @param {String} targetColor color string or array\n   * @param {Number} amount amount to shift the hue toward the target color between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').tint('#00f',0.5); // returns {value:\"#F0F\"}\n   * new Color('rgb(0,0,100)').tint('rgb(100,0,0)',0.1); // returns {value:\"#140064\"}\n   *\n   */\n  tint: function tint(t, v) {\n    if (isColor(t)) t = t.value;\n    return new Color(colors.tint(this.value, t, v));\n  },\n\n  /**\n   * Set the \"hue\" of a color\n   *\n   * @method hue\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hue(2/3); // returns {value:\"#00F\"}\n   * new Color('#0f0').hue(1); // returns {value:\"#F00\"}\n   * new Color('#00f').hue(1/3); // returns {value:\"#0F0\"}\n   *\n   */\n  hue: function hue(v) {\n    return new Color(colors.hue(this.value, v));\n  },\n\n  /**\n   * Set the \"saturation\" of a color\n   *\n   * @method saturation\n   * @memberof Color\n   * @param {Number} saturation saturation value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,50,50)').saturation(0); // returns {value:\"#4B4B4B\")\n   * new Color('rgb(50,0,0)').saturation(0.5);  // returns {value:\"#260C0C\")\n   * new Color('rgb(50,50,100)').saturation(1); // returns {value:\"#000096\")\n   *\n   */\n  saturation: function saturation(v) {\n    return new Color(colors.saturation(this.value, v));\n  },\n\n  /**\n   * Set the lightness of a color, how close to white or black the color will be\n   *\n   * @method lightness\n   * @memberof Color\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').lightness(0); // returns {value:\"#000\"}\n   * new Color('rgb(255,0,0)').lightness(0.5); // returns {value:\"#F00\"}\n   * new Color('rgb(255,0,0)').lightness(1); // returns {value:\"#FFF\"}\n   *\n   */\n  lightness: function lightness(v) {\n    return new Color(colors.lightness(this.value, v));\n  },\n\n  /**\n   * Inverts the color\n   *\n   * @method invert\n   * @memberof Color\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').invert(1); // returns {value:\"#0FF\"}  // cyan\n   * new Color('#fff').invert();  // returns {value:\"#000\"}   // black\n   *\n   */\n  invert: function invert() {\n    return new Color(colors.invert(this.value));\n  },\n\n  /**\n   * Modify the red, green, or blue component of a color\n   *\n   * @method rgb\n   * @memberof Color\n   * @param {Number} red red component (0-255)\n   * @param {Number} green green component (0-255)\n   * @param {Number} blue blue component (0-255)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').rgb(null,null,255); // returns {value:\"#F0F\"}\n   * new Color('#0f0').rgb(null,255,null); // returns {value:\"#0F0\"}\n   * new Color('#ff0').rgb(null,null,255); // returns {value:\"#FFF\"}\n   * new Color('#fff').rgb(100);           // returns {value:\"#64FFFF\"}\n   *\n   */\n  rgb: function rgb() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setRGB.apply(null, a));\n  },\n\n  /**\n   * Set the hue, saturation, or lightness of a color and return the new color\n   *\n   * @method hsl\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @param {Number} saturation saturation value between 0 and 1\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hsl(null,0.5,0.5); // returns {value:\"#BF4040\"}\n   *\n   */\n  hsl: function hsl() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setHSL.apply(null, a));\n  },\n\n  /**\n   * Set the red component of a color\n   *\n   * @method red\n   * @memberof Color\n   * @param {Number} red red component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,255)').red(255);  // returns {value:\"#F0F\"}\n   *\n   */\n  red: function red(r) {\n    return this.rgb(r);\n  },\n\n  /**\n   * Set the green component of a color\n   *\n   * @method green\n   * @memberof Color\n   * @param {Number} green green component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').green(255);  // returns {value:\"#FF0\"}\n   *\n   */\n  green: function green(g) {\n    return this.rgb(null, g);\n  },\n\n  /**\n   * Set the blue component of a color\n   *\n   * @method blue\n   * @memberof Color\n   * @param {Number} blue blue component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#FF0').blue(255);  // returns {value:\"#FFF\"}\n   *\n   */\n  blue: function blue(b) {\n    return this.rgb(null, null, b);\n  },\n  // getters\n\n  /**\n   * Returns the transparency of a color\n   *\n   * @method getAlpha\n   * @memberof Color\n   * @return {Number} alpha transparency level between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getAlpha(); // returns 0\n   * new Color('rgba(255,0,0,0.5)').getAlpha(); // returns 0.5\n   *\n   */\n  getAlpha: function getAlpha() {\n    return colors.getAlpha(this.value);\n  },\n\n  /**\n   * Returns the computed red, green, blue, and alpha values as an array\n   *\n   * @method getRGB\n   * @memberof Color\n   * @return {Number[]} rgb array\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getRGB(); // returns [255,0,0]\n   * new Color('rgba(255,0,0,0.5)').getRGB()(); // returns [255,0,0,0.5]\n   *\n   */\n  getRGB: function getRGB() {\n    return colors.getRGB(this.value);\n  },\n\n  /**\n   * Returns the hexidecimal value of the color\n   *\n   * @method getHex\n   * @memberof Color\n   * @param {Boolean} full return the full 6 character hexidecimal value (eg. do not shorten #FFFFFF to #FFF)\n   * @return {String} hex color value\n   * @instance\n   *\n   * @example\n   * new Color('rgba(255,0,0,0.5)').getHex(); // returns \"#F0F\"\n   * new Color('rgba(255,0,0,0.5)').getHex(true); // returns \"#FF0000\"\n   *\n   */\n  getHex: function getHex(full) {\n    return colors.getHex(this.value, full);\n  },\n\n  /**\n   * Returns the red component of a color string\n   *\n   * @method getRed\n   * @memberof Color\n   * @return {Number} red component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getRed(); // returns 255\n   *\n   */\n  getRed: function getRed() {\n    return this.getRGB()[0];\n  },\n\n  /**\n   * Returns the green component of a color string\n   *\n   * @method getGreen\n   * @memberof Color\n   * @return {Number} green component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getGreen(); // returns 255\n   *\n   */\n  getGreen: function getGreen() {\n    return this.getRGB()[1];\n  },\n\n  /**\n   * Returns the blue component of a color string\n   *\n   * @method getBlue\n   * @memberof Color\n   * @return {Number} blue component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getBlue(); // returns 255\n   *\n   */\n  getBlue: function getBlue() {\n    return this.getRGB()[2];\n  },\n\n  /**\n   * Returns an [h,s,l] array from color string\n   *\n   * @method getHSL\n   * @memberof Color\n   * @return {Number[]} hsl array of [hue,saturation,lightness]\n   * @instance\n   *\n   * @example\n   * new Color('#f00').getHSL(); // returns [0,1,0.5]\n   *\n   */\n  getHSL: function getHSL() {\n    return colors.getHSL(this.value);\n  },\n\n  /**\n   * Return the \"hue\" of a color\n   *\n   * @method getHue\n   * @memberof Color\n   * @return {Number} hue hue value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#a1b2c1').getHue(); // returns {value:\"0.578125\"}\n   * new Color('#f00').getHue(); // returns 0\n   * new Color('#0f0').getHue(); // returns 0.3333333333333333\n   * new Color('#00f').getHue(); // returns 0.6666666666666666\n   *\n   */\n  getHue: function getHue() {\n    return this.getHSL()[0];\n  },\n\n  /**\n   * Return the \"saturation\" of a color\n   *\n   * @method getSaturation\n   * @memberof Color\n   * @return {Number} saturation saturation value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,100,100)').getSaturation(); // returns 0\n   * new Color('rgb(100,50,100)').getSaturation();  // returns 0.8333333333333334\n   * new Color('rgb(100,0,100)').getSaturation();   // returns 1\n   *\n   */\n  getSaturation: function getSaturation() {\n    return this.getHSL()[1];\n  },\n\n  /**\n   * Return the lightness of a color (how close to white or black the color is)\n   *\n   * @method getLightness\n   * @memberof Color\n   * @return {Number} lightness lightness value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,0)').getLightness();       // returns 0\n   * new Color('rgb(100,50,100)').getLightness();  // returns 0.29411764705882354\n   * new Color('rgb(255,255,255)').getLightness(); // returns 1\n   *\n   */\n  getLightness: function getLightness() {\n    return this.getHSL()[2];\n  }\n};\nColor.prototype.rgba = Color.prototype.rgb;\nColor.prototype.hsla = Color.prototype.hsl;\nmodule.exports = Color;","import React, {Component} from 'react';\nimport Speak from 'jaxcore-speak';\nimport {MonauralScope} from 'jaxcore-client';\n\nglobal.Speak = Speak;\n\nSpeak.setWorkers({\n\t'espeak': 'webworkers/espeak-all-worker.js',\n\t\n\t// if you only need one language (english, french, spanish) then only load that worker\n\t// 'espeak': 'webworkers/espeak-en-worker.js',\n\t\n\t// // the following format is mainly just for this demo for testing the individual language builds\n\t// 'espeak': [\n\t// \t{\n\t// \t\tlanguage: 'en',\n\t// \t\tpath: 'webworkers/espeak-en-worker.js'\n\t// \t},\n\t// \t{\n\t// \t\tlanguage: 'es',\n\t// \t\tpath: 'webworkers/espeak-es-worker.js'\n\t// \t},\n\t// \t{\n\t// \t\tlanguage: 'fr',\n\t// \t\tpath: 'webworkers/espeak-fr-worker.js'\n\t// \t},\n\t// ],\n\t\n\t'sam': 'webworkers/sam-worker.js'\n});\n\nclass MultipleSpeakersApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.redRef = React.createRef();\n\t\tthis.orangeRef = React.createRef();\n\t\tthis.yellowRef = React.createRef();\n\t\tthis.greenRef = React.createRef();\n\t\tthis.cyanRef = React.createRef();\n\t\tthis.blueRef = React.createRef();\n\t\tthis.purpleRef = React.createRef();\n\t\t\n\t\tthis.state = {\n\t\t\ttext: '',\n\t\t\tactiveSpeakers: {\n\t\t\t\tred: false,\n\t\t\t\torange: false,\n\t\t\t\tyellow: false,\n\t\t\t\tgreen: false,\n\t\t\t\tcyan: false,\n\t\t\t\tblue: false,\n\t\t\t\tpurple: false\n\t\t\t}\n\t\t};\n\t\t\n\t\tglobal.app = this;\n\t}\n\t\n\tcomponentDidMount() {\n\t\tconst colors = {\n\t\t\tred: '255,0,0',\n\t\t\torange: '255,128,0',\n\t\t\tyellow: '255,255,0',\n\t\t\tgreen: '0,255,0',\n\t\t\tcyan: '0,255,255',\n\t\t\tblue: '0,0,255',\n\t\t\tpurple: '255,0,255',\n\t\t};\n\t\t\n\t\tconst getTheme = function (color) {\n\t\t\treturn {\n\t\t\t\tstrokeColor: 'rgb(' + colors[color] + ')',\n\t\t\t\tclipColor: 'black',\n\t\t\t\tfillColor: 'rgba(' + colors[color] + ',0.2)',\n\t\t\t\tdotColor: 'rgb(' + colors[color] + ')',\n\t\t\t\tbgOffColor: '#fafafa',\n\t\t\t\tbgOnColor: '#eee'\n\t\t\t}\n\t\t};\n\t\t\n\t\tthis.scopes = {\n\t\t\tred: new MonauralScope(this.redRef.current, getTheme('red')),\n\t\t\torange: new MonauralScope(this.orangeRef.current, getTheme('orange')),\n\t\t\tyellow: new MonauralScope(this.yellowRef.current, getTheme('yellow')),\n\t\t\tgreen: new MonauralScope(this.greenRef.current, getTheme('green')),\n\t\t\tcyan: new MonauralScope(this.cyanRef.current, getTheme('cyan')),\n\t\t\tblue: new MonauralScope(this.blueRef.current, getTheme('blue')),\n\t\t\tpurple: new MonauralScope(this.purpleRef.current, getTheme('purple'))\n\t\t};\n\t\t\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<div id=\"scopes\">\n\t\t\t\t\t<div id=\"red\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.red?' active':'')}>Jack</div>\n\t\t\t\t\t\t<canvas ref={this.redRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"orange\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.orange?' active':'')}>Scotty</div>\n\t\t\t\t\t\t<canvas ref={this.orangeRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"yellow\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.yellow?' active':'')}>Roy</div>\n\t\t\t\t\t\t<canvas ref={this.yellowRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"green\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.green?' active':'')}>Leon</div>\n\t\t\t\t\t\t<canvas ref={this.greenRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"cyan\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.cyan?' active':'')}>Robo</div>\n\t\t\t\t\t\t<canvas ref={this.cyanRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"blue\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.blue?' active':'')}>Zhora</div>\n\t\t\t\t\t\t<canvas ref={this.blueRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"purple\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.purple?' active':'')}>Cylon</div>\n\t\t\t\t\t\t<canvas ref={this.purpleRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div id=\"controls\">\n\t\t\t\t\t<button onClick={e => this.introduceYourselves()}>Introduce Yourselves</button>\n\t\t\t\t\t<button onClick={e => this.clearQueue()}>Stop</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tclearQueue() {\n\t\tSpeak.clearQueue();\n\t}\n\t\n\tsetActiveSpeaker(color, active) {\n\t\tconst {activeSpeakers} = this.state;\n\t\tactiveSpeakers[color] = active;\n\t\tthis.setState(activeSpeakers);\n\t}\n\t\n\tintroduceYourselves() {\n\t\t\n\t\tSpeak.once('finish', () => {\n\t\t\tconsole.log('queue finished');\n\t\t});\n\t\t\n\t\tSpeak.queue({\n\t\t\ttext: \"hello, i am jack\",\n\t\t\tscope: this.scopes.red,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Jack',\n\t\t\t\tlanguage: 'en'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Jack saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('red', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Jack finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('red', false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tSpeak.queue({\n\t\t\ttext: \"aye this is scotty, gled to meet you\",\n\t\t\tscope: this.scopes.orange,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Scotty',\n\t\t\t\tlanguage: 'en-sc'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Scotty saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('orange', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Scotty finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('orange', false);\n\t\t\t}\n\t\t});\n\t\t\n\n\t\tSpeak.queue({\n\t\t\ttext: \"this is roy, at your service\",\n\t\t\tscope: this.scopes.yellow,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Roy',\n\t\t\t\tlanguage: 'en-wm'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Roy saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('yellow', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Roy finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('yellow', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"hola, mi nombre es leon\",\n\t\t\tscope: this.scopes.green,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Leon',\n\t\t\t\tlanguage: 'es'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Leon saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('green', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Leon finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('green', false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tSpeak.queue({\n\t\t\ttext: \"greetings, i am robo\",\n\t\t\tscope: this.scopes.cyan,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Robo'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Robo saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('cyan', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Robo finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('cyan', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"bonjour. je m'appelle zhora\",\n\t\t\tscope: this.scopes.blue,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Zhora',\n\t\t\t\tlanguage: 'fr'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Zhora saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('blue', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Zhora finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('blue', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"we are the cylon\",\n\t\t\tscope: this.scopes.purple,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Cylon',\n\t\t\t\tlanguage: 'en'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Cylon aying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('purple', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Cylon finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('purple', false);\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\t\n}\n\nexport default MultipleSpeakersApp;\n","var plugin = require('jaxcore-plugin'); // var log = plugin.createLogger('Spin Buffer');\n\n\nvar _instance = 0;\n\nfunction SpinBuffer(spin, config) {\n  this.log = plugin.createLogger('Spin Buffer ' + _instance++);\n  this.log('created buffer', spin.id);\n  this.delayTime = 0;\n  this.spinDelayed = false;\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n  this.spinDirection = 0;\n  this.lastSpinTime = 0;\n  if (!config) config = {};\n  this.defaultDelay = config.defaultDelay || 500;\n  this.staticTimeout = config.staticTimeout || 3000;\n  this.delayLength = this.defaultDelay;\n  this._onPushKnob = this.onPushKnob.bind(this);\n  spin.on('knob', this._onPushKnob);\n  var me = this;\n\n  this.destroy = function () {\n    spin.removeListener('knob', me._onPushKnob);\n  };\n}\n\nSpinBuffer.prototype = {};\n\nSpinBuffer.prototype.reset = function (forceStatic) {\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n\n  if (forceStatic) {\n    this.spinDirection = 0;\n  }\n};\n\nSpinBuffer.prototype.onPushKnob = function () {\n  this.log('reset');\n  this.reset();\n};\n\nSpinBuffer.prototype.spin = function (direction, kineticBuffer, staticBuffer) {\n  //if (!kineticBuffer) kineticBuffer = 0;\n  if (typeof staticBuffer === 'undefined') {\n    if (kineticBuffer) staticBuffer = kineticBuffer;else staticBuffer = 0;\n  }\n\n  kineticBuffer += 1;\n  staticBuffer += 1; // if (!kineticBuffer) kineticBuffer = 1;\n  // if (!staticBuffer) staticBuffer = kineticBuffer || 2;\n\n  var timeSinceLastSpin = new Date().getTime() - this.lastSpinTime;\n  this.lastSpinTime = new Date().getTime();\n\n  if (this.isDelayed()) {\n    this.reset();\n    return false;\n  }\n\n  var staticTimeoutExceeded = timeSinceLastSpin > this.staticTimeout; // after 3 sec reset static buffer\n\n  if (staticTimeoutExceeded) {\n    this.log('static timeout exceeded');\n    this.reset(true);\n  }\n\n  var directionChanged = direction !== this.spinDirection;\n\n  if (directionChanged) {\n    this.kineticBuffer = 0;\n    this.staticBuffer++;\n\n    if (this.staticBuffer >= staticBuffer) {\n      this.log('static buffer exeeded, spinDirection is now', direction);\n      this.spinDirection = direction;\n      this.reset();\n      return true;\n    } else {\n      this.log('static buffer:', this.staticBuffer, '-');\n      return false;\n    }\n  } else {\n    if (this.staticBuffer > 0) {\n      this.staticBuffer--;\n      this.log('static buffer:', this.staticBuffer, '+');\n      if (this.staticBuffer < 0) this.staticBuffer = 0;\n      return false;\n    }\n\n    this.kineticBuffer++;\n    this.staticBuffer = 0;\n    if (kineticBuffer > 0) this.log('kinetic buffer:', this.kineticBuffer, direction === 1 ? '+' : '-');\n\n    if (this.kineticBuffer >= kineticBuffer) {\n      if (kineticBuffer > 0) this.log('kinetic buffer exceeded');\n      this.reset();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nSpinBuffer.prototype.isDelayed = function () {\n  if (this.spinDelayed) {\n    var diff = new Date().getTime() - this.delayTime;\n    var d = diff > this.delayLength;\n\n    if (d) {\n      this.log('delay timed out', new Date().getTime() - this.delayTime);\n      this.delayLength = this.defaultDelay;\n      this.spinDelayed = false;\n      return false;\n    } else {\n      this.log('delaying for ' + (this.delayLength + ' ' + diff));\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nSpinBuffer.prototype.delay = function (ms) {\n  this.delayLength = ms || this.defaultDelay;\n  this.log('delaying for ' + this.delayLength + 'ms');\n  this.delayTime = new Date().getTime();\n  this.spinDelayed = true;\n};\n\nSpinBuffer.prototype.cancelDelay = function () {\n  this.delayTime = 0;\n  this.spinDelayed = false;\n};\n\nmodule.exports = SpinBuffer;","var isArray = function isArray(o) {\n  return typeof o === 'object' && Object.prototype.toString.apply(o) === '[object Array]';\n};\n\nvar isString = function isString(o) {\n  return typeof o === 'string' || o instanceof String;\n};\n\nfunction alpha(color, a) {\n  if (typeof a === 'number' && a >= 0 && a <= 1) {\n    var c = getRGB(color);\n    return rgb(c[0], c[1], c[2], a);\n  }\n\n  return color;\n}\n\nfunction lighten(c, l) {\n  if (c.value) c = c.value;else if (typeof l === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, 0, l));\n}\n\nfunction darken(c, l) {\n  return lighten(c, -l);\n}\n\nfunction saturate(c, s) {\n  if (c.value) c = c.value;else if (typeof s === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, s, 0));\n}\n\nfunction desaturate(c, s) {\n  return saturate(c, -s);\n}\n\nfunction hslval(x, y, r) {\n  if (r < 0) r += 1;\n  if (r > 1) r -= 1;\n  var c;\n  if (6 * r < 1) c = x + (y - x) * 6 * r;else if (2 * r < 1) c = y;else if (3 * r < 2) c = x + (y - x) * (2 / 3 - r) * 6;else c = x;\n  return c * 255;\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0],\n      s = hsl[1],\n      l = hsl[2],\n      r,\n      g,\n      b;\n\n  if (s === 0) {\n    r = g = b = l * 255;\n  } else {\n    var x, y;\n    if (l < 0.5) y = l * (1 + s);else y = l + s - l * s;\n    x = 2 * l - y;\n    r = hslval(x, y, h + 1 / 3);\n    g = hslval(x, y, h);\n    b = hslval(x, y, h - 1 / 3);\n  }\n\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  if (hsl.length === 4) return [r, g, b, hsl[3]];else return [r, g, b];\n}\n\nfunction hsl(h, s, l, a) {\n  var x = [h / 360, s / 100, l / 100];\n  var r = hsl2rgb(x).map(Math.round);\n  if (arguments.length === 4) r[3] = a;\n  return rgb(r);\n}\n\nfunction shiftHSL(c, h, s, l) {\n  if (typeof h === 'undefined') h = 0;\n  if (typeof s === 'undefined') s = 0;\n  if (typeof l === 'undefined') l = 0;\n  var o = getRGB(c);\n  var x = getHSL(o);\n  x[0] += h;\n  if (x[0] < 0) x[0] += 1;\n  if (x[0] > 1) x[0] -= 1;\n  x[1] *= 1 + s;\n  if (x[1] < 0) x[1] = 0;\n  if (x[1] > 1) x[1] = 1;\n  x[2] *= 1 + l;\n  if (x[2] < 0) x[2] = 0;\n  if (x[2] > 1) x[2] = 1;\n  var n = hsl2rgb(x);\n  if (o.length === 4) n[3] = o[3];\n  return n;\n}\n\nfunction shiftHue(c, h) {\n  if (typeof h === 'undefined') return c;\n  return rgb(shiftHSL(c, h, 0, 0));\n}\n\nfunction combine(sourceColor, targetColor, amount) {\n  amount = amount || 0.5;\n  var al = getAlpha(sourceColor);\n  var s = getRGB(sourceColor);\n  var t = getRGB(targetColor);\n  var r = Math.round((t[0] - s[0]) * amount);\n  var g = Math.round((t[1] - s[1]) * amount);\n  var b = Math.round((t[2] - s[2]) * amount);\n  return rgb(s[0] + r, s[1] + g, s[2] + b, al);\n}\n\nfunction tint(sourceColor, targetColor, amount) {\n  var sH = getHue(sourceColor);\n  var tH = getHue(targetColor);\n  var diff = tH - sH;\n  if (diff > 0 && diff > 0.5) diff -= 1;else if (diff < 0 && diff < -0.5) diff += 1;\n  var dH = diff * amount;\n  return rgb(shiftHSL(sourceColor, dH, null, null));\n}\n\nfunction hue(c, h) {\n  return setHSL(c, h);\n}\n\nfunction saturation(c, s) {\n  return setHSL(c, null, s);\n}\n\nfunction lightness(c, l) {\n  return setHSL(c, null, null, l);\n}\n\nfunction setHSL(c, h, s, l) {\n  var x = getHSL(c);\n  if (typeof h === 'undefined' || h === null) h = x[0];\n  if (typeof s === 'undefined' || s === null) s = x[1];\n  if (typeof l === 'undefined' || l === null) l = x[2];\n  if (x.length === 4) return rgb(hsl2rgb([h, s, l, x[3]]));else return rgb(hsl2rgb([h, s, l]));\n}\n\nfunction rgb() {\n  if (arguments.length === 1) {\n    var a = arguments[0];\n\n    if (typeof a === 'string') {\n      var r = getRGB(a);\n      if (isArray(r)) return rgb(r);else return getHex(r);\n    }\n\n    if (isArray(a) && a.length === 3) {\n      return getHex(a);\n    }\n\n    if (isArray(a) && a.length === 4) {\n      return 'rgba(' + Math.round(a[0]) + ',' + Math.round(a[1]) + ',' + Math.round(a[2]) + ',' + a[3] + ')';\n    }\n  } else if (arguments.length === 3) {\n    return getHex(Array.from(arguments));\n  } else if (arguments.length === 4) {\n    if (typeof arguments[3] === 'number' && arguments[3] > 0 && arguments[3] <= 1) {\n      return 'rgba(' + Math.round(arguments[0]) + ',' + Math.round(arguments[1]) + ',' + Math.round(arguments[2]) + ',' + arguments[3] + ')';\n    } else return getHex(Array.from(arguments));\n  }\n}\n\nfunction setRGB(c, r, g, b, a) {\n  c = getRGB(c);\n  if (typeof r === 'number') c[0] = r;\n  if (typeof g === 'number') c[1] = g;\n  if (typeof b === 'number') c[2] = b;\n  if (typeof a === 'number') c[3] = a;\n  return rgb(c);\n}\n\nfunction getAlpha(color) {\n  var x = getRGB(color);\n  if (x.length === 4) return x[3];\n  return 0;\n}\n\nfunction getRGB() {\n  if (isArray(arguments[0])) return arguments[0];\n\n  if (typeof arguments[0] === 'string') {\n    var c = arguments[0];\n\n    if (/^#/.test(c)) {\n      var h = c.substring(1);\n      if (/^[0-9a-f]{6}$/i.test(h)) return [parseInt(h.substring(0, 2), 16), parseInt(h.substring(2, 4), 16), parseInt(h.substring(4, 6), 16)];\n      if (/^[0-9a-f]{3}$/i.test(h)) return [parseInt(h[0] + h[0], 16), parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16)];\n      return [0, 0, 0];\n    }\n\n    var m;\n\n    if (m = c.match(/rgb\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3])];\n    }\n\n    if (m = c.match(/rgba\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [Number(m[1]), Number(m[2]), Number(m[3]), Number(m[4])];\n    } else {}\n  }\n}\n\nfunction getRed(c) {\n  return getRGB(c)[0];\n}\n\nfunction getGreen(c) {\n  return getRGB(c)[1];\n}\n\nfunction getBlue(c) {\n  return getRGB(c)[2];\n}\n\nfunction getHex(color, full) {\n  if (color) {\n    var c = getRGB(color);\n\n    if (c) {\n      var r = int2hex(Math.round(c[0]));\n      var g = int2hex(Math.round(c[1]));\n      var b = int2hex(Math.round(c[2]));\n      if (!full && r[0] === r[1] && g[0] === g[1] && b[0] === b[1]) return ('#' + r[0] + g[0] + b[0]).toUpperCase();\n      return ('#' + r + g + b).toUpperCase();\n    }\n  }\n\n  return '#000';\n}\n\nfunction int2hex(i) {\n  var v = i.toString(16);\n  return v.length === 1 ? '0' + v : v;\n}\n\nfunction getHSL(color) {\n  var rgb;\n  if (isArray(color)) rgb = color;else if (isString(color)) rgb = getRGB(color);else {\n    console.log('no rgb for ', color);\n    return [0, 0, 0];\n  }\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var x = Math.max(r, g, b);\n  var n = Math.min(r, g, b);\n  var l = (x + n) / 2;\n  var s = 0,\n      h = 0;\n\n  if (x === n) {\n    s = 0;\n    h = 0;\n  } else {\n    var d = x - n;\n    if (l > 0.5) s = d / (2 - x - n);else s = d / (x + n);\n    if (x === r) h = (g - b) / d + (g < b ? 6 : 0);\n    if (x === g) h = 2 + (b - r) / d;\n    if (x === b) h = 4 + (r - g) / d;\n    h /= 6;\n    if (h < 0) h += 1;\n  }\n\n  if (rgb.length === 4) return [h, s, l, rgb[3]];else return [h, s, l];\n}\n\nfunction getHue(c) {\n  return getHSL(c)[0];\n}\n\nfunction getSaturation(c) {\n  return getHSL(c)[1];\n}\n\nfunction getLightness(c) {\n  return getHSL(c)[2];\n}\n\nfunction invert(color) {\n  var rgba = getRGB(color);\n\n  for (var i = 0; i < 3; i++) {\n    rgba[i] = 255 - rgba[i];\n  }\n\n  return rgb(rgba);\n}\n\nmodule.exports = {\n  hsl2rgb: hsl2rgb,\n  hslval: hslval,\n  int2hex: int2hex,\n  alpha: alpha,\n  lighten: lighten,\n  darken: darken,\n  saturate: saturate,\n  desaturate: desaturate,\n  shiftHSL: shiftHSL,\n  shiftHue: shiftHue,\n  combine: combine,\n  tint: tint,\n  hue: hue,\n  saturation: saturation,\n  lightness: lightness,\n  hsl: hsl,\n  hsla: hsl,\n  setHSL: setHSL,\n  rgb: rgb,\n  rgba: rgb,\n  setRGB: setRGB,\n  getAlpha: getAlpha,\n  getRGB: getRGB,\n  getRed: getRed,\n  getGreen: getGreen,\n  getBlue: getBlue,\n  getHex: getHex,\n  getHSL: getHSL,\n  getHue: getHue,\n  getSaturation: getSaturation,\n  getLightness: getLightness,\n  invert: invert\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MultipleSpeakersApp from './MultipleSpeakersApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MultipleSpeakersApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}