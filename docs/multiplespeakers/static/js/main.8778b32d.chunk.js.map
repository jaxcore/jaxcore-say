{"version":3,"sources":["../../../lib/queue.js","../../../lib/speak.js","../../../../jaxcore-client/lib/CollectionModel.js","../../../../jaxcore-client/lib/Listen.js","../../../../jaxcore-client/lib/State.js","../../../../jaxcore-client/lib/Sound.js","../../../../jaxcore-client/lib/MonauralScope.js","../../../../jaxcore-client/lib/index.js","../../../../jaxcore-client/lib/spin/transports/browser.js","../../../lib/profiles.js","../../../../jaxcore-client/lib/spin/spin.js","../../../../jaxcore-client/lib/logger.js","../../../../jaxcore-client/lib/Store.js","../../../../jaxcore-client/lib/Color.js","MultipleSpeakersApp.js","../../../../jaxcore-client/lib/spin/buffer.js","../../../../jaxcore-client/lib/colors.js","serviceWorker.js","index.js"],"names":["queue","_EventEmitter","SpeakerQueue","speak","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_queue","speaker","inherits","createClass","key","value","speech","push","_speakNext","_this2","isSpeaking","next","shift","getWorkerAudioData","text","options","audioContext","source","onStart","scope","loadAudioData","onStop","setTimeout","_onEnded","emit","events_default","a","speak_Speak","Speak","name","lang","profiles","defaultProfile","profiles_default","addProfile","profile","setProfile","engine","language","setLanguage","visualizer","setVisualizer","vis","getLanguageId","profileName","v","assign","slow","speed","fast","low","pitch","high","voice","delay","Promise","resolve","connect","destination","onended","close","callback","start","toLowerCase","workerPath","workers","sam","espeak","length","i","path","Error","worker","Worker","addEventListener","e","console","log","data","rawdata","AudioContext","createBufferSource","audioBuffer","createBuffer","buffer","getChannelData","_i","decodeAudioData","voptions","processOptions","postMessage","cmd","replacements","forEach","replacement","from","to","replace","RegExp","type","p","variants","languageIds","ca","cs","de","el","en/en","en/en-n","en/en-rp","en/en-sc","en/en-us","en/en-wm","eo","es","es-la","fi","fr","hu","it","kn","la","lv","nl","pl","pt","pt-pt","ro","sk","sv","tr","zh","zh-yue","indexOf","setWorkers","speakerQueue","bind","clearQueue","on","once","__webpack_exports__","Listen","Listener","postCommand","listenCommand","command","arguments","lib_State","State","defaults","state","changes","hasChanges","s","handler","addListener","removeListener","lib_MonauralScope","MonauralScope","canvas","width","height","meter","mediaStreamSource","_draw","draw","assertThisInitialized","isRecording","setTheme","lineWidth","strokeColor","clipColor","fillColor","bgOnColor","bgOffColor","dotColor","dotSize","background","theme","clipLevel","averaging","clipLag","processor","createScriptProcessor","onaudioprocess","event","x","buf","inputBuffer","bufLength","sum","Math","abs","clipping","lastClip","window","performance","now","rms","sqrt","volume","max","maxVolume","checkClipping","shutdown","disconnect","startRecording","stopRecording","isDrawing","successcb","errorcb","_this3","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","mediaDevices","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","stream","createMediaStreamSource","createAudioMeter","startDrawing","alert","_this4","isPlaying","stop","stopDrawing","ctx","getContext","fillStyle","fillRect","clearRect","maxsize","min","beginPath","arc","PI","fill","closePath","size","error","strokeStyle","_maxsize","_size","stroke","requestAnimationFrame","msg","_jaxcore_client","message","protocol","document","location","host","__webpack_require__","d","lib_Listen","browser_default","setPostCommand","lib_JaxcoreClient","_State","JaxcoreClient","reconnect","setState","connectedExtension","extensionReady","href","origin","_jaxcore_content","socketDisconnected","spin","listen","recognizedText","target","args","disconnectExtension","connectExtension","jaxcore","logger_default","create","spin_default","connectAll","connectSpins","EventEmitter","Spin","BrowserTransport","constructor","prototype","store","id","add","created","update","spinIds","destroyed","c","knobPushed","buttonPushed","_lastSpinPosition","spinPosition","spinDirection","connected","remove","sendCommand","method","postCommandFn","spinCommand","fn","spinBrowser","module","exports","Jack","default","amplitude","wordgap","variant","Pris","phoneticName","Roy","Xenu","Cylon","Leon","Rachel","Zhora","Sam","throat","mouth","Elf","Robo","Granny","plugin","createLogger","spinStore","createStore","Client","SpinBuffer","_instance","device","transport","instance","ip","Date","setStore","setDefaults","spinPreviousTime","spinTime","knobPushTime","knobReleaseTime","knobPushDuration","knobHold","buttonPushTime","buttonReleaseTime","buttonPushDuration","buttonHold","batteryVoltage","batteryPercent","isCharging","isCharged","sleeping","inactivityTime","createSettings","brightness","knobHoldThreshold","buttonHoldThreshold","sleepEnabled","sleepTimer","Buffer","config","settings","settingDefaults","settingNames","changeSettings","_buffer","apply","Array","slice","bufferDelay","bufferReset","reset","cancelHoldEvents","clearTimeout","_knobHoldTimer","_buttonHoldTimer","isConnected","_connected","resetDefaults","_sleeping","_removeEvents","knobReleased","buttonReleased","processSpin","position","direction","processEncoder","throttled","getTime","processKnob","pushed","me","wasHeld","processButton","processStatus","round","first","processSleep","status","millis","flash","color","quickFlash","repeat","bleDevice","join","lightsOn","lights","lightsOff","setThrottle","throttle","setBrightness","setName","rotate","mode","color1","color2","scale","percent","color3","sleep","delaySleep","setKnobHoldThreshold","th","setButtonHoldThreshold","setSleepTimer","minutes","ms","destroy","debug","q","logger","quiet","chalk","green","yellow","cyan","magenta","_quiet","map","arg","index","loggerName","colors","n","unshift","Store","ids","removeAllListeners","set","isColor","Color","rgb","toString","alpha","lighten","darken","saturate","desaturate","shiftHSL","h","l","shiftHue","combine","t","tint","hue","saturation","lightness","invert","setRGB","hsl","setHSL","red","r","g","blue","b","getAlpha","getRGB","getHex","full","getRed","getGreen","getBlue","getHSL","getHue","getSaturation","getLightness","rgba","hsla","global","MultipleSpeakersApp","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","redRef","React","createRef","yellowRef","greenRef","cyanRef","blueRef","purpleRef","activeSpeakers","purple","app","_Users_dstein_dev_jaxcore_jaxcore_speak_examples_multiplespeakers_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","getTheme","scopes","current","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","ref","onClick","introduceYourselves","active","setActiveSpeaker","Component","delayTime","spinDelayed","staticBuffer","kineticBuffer","lastSpinTime","defaultDelay","staticTimeout","delayLength","_onPushKnob","onPushKnob","forceStatic","timeSinceLastSpin","isDelayed","diff","cancelDelay","isArray","o","isString","String","hslval","y","hsl2rgb","m","test","substring","parseInt","match","Number","int2hex","toUpperCase","sourceColor","targetColor","amount","al","sH","Boolean","hostname","ReactDOM","render","react_default","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8778b32d.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from \"events\";\n\nvar SpeakerQueue =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(SpeakerQueue, _EventEmitter);\n\n  function SpeakerQueue(speak) {\n    var _this;\n\n    _classCallCheck(this, SpeakerQueue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpeakerQueue).call(this));\n    _this._queue = [];\n    _this.speaker = speak;\n    return _this;\n  }\n\n  _createClass(SpeakerQueue, [{\n    key: \"clearQueue\",\n    value: function clearQueue() {\n      this._queue = [];\n    }\n  }, {\n    key: \"queue\",\n    value: function queue(speech) {\n      this._queue.push(speech);\n\n      this._speakNext();\n    }\n  }, {\n    key: \"_speakNext\",\n    value: function _speakNext() {\n      var _this2 = this;\n\n      if (this.isSpeaking) {\n        return;\n      }\n\n      var next = this._queue.shift();\n\n      if (next) {\n        this.isSpeaking = true;\n        this.speaker.getWorkerAudioData(next.text, next.options, function (audioContext, source) {\n          if (next.onStart) {\n            next.onStart(next);\n          }\n\n          next.scope.loadAudioData(audioContext, source, function () {\n            if (next.onStop) {\n              setTimeout(function () {\n                next.onStop(next);\n              }, 1);\n            }\n\n            _this2._onEnded();\n          });\n        });\n      } else {\n        this.emit('finish');\n      }\n    }\n  }, {\n    key: \"_onEnded\",\n    value: function _onEnded() {\n      this.isSpeaking = false;\n\n      this._speakNext();\n    }\n  }]);\n\n  return SpeakerQueue;\n}(EventEmitter);\n\nexport default SpeakerQueue;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\nimport SpeakerQueue from './queue';\nimport profiles from './profiles';\nvar variants = ['f1', 'f2', 'f3', 'f4', 'f5', 'm1', 'm2', 'm3', 'm4', 'm5', 'm6', 'm7', 'croak', 'klatt', 'klatt2', 'klatt3', 'whisper', 'whisperf'];\nvar languageIds = {\n  'ca': 'Catalan',\n  'cs': 'Czech',\n  'de': 'German',\n  'el': 'Greek',\n  'en/en': 'English',\n  'en/en-n': 'English (N)',\n  'en/en-rp': 'English (RP)',\n  'en/en-sc': 'English (Scottish)',\n  'en/en-us': 'English (US)',\n  'en/en-wm': 'English (WM)',\n  'eo': 'Esperanto',\n  'es': 'Spanish',\n  'es-la': 'Spanish (Latin America)',\n  'fi': 'Finnish',\n  'fr': 'French',\n  'hu': 'Hungarian',\n  'it': 'Italian',\n  'kn': 'Kannada',\n  'la': 'Latin',\n  'lv': 'Latvian',\n  'nl': 'Dutch',\n  'pl': 'Polish',\n  'pt': 'Portuguese (Brazil)',\n  'pt-pt': 'Portuguese, European',\n  'ro': 'Romanian',\n  'sk': 'Slovak',\n  'sv': 'Swedish',\n  'tr': 'Turkish',\n  'zh': 'Chinese (Mandarin)',\n  'zh-yue': 'Chinese (Cantonese)'\n};\n\nvar Speak =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Speak, _EventEmitter);\n\n  function Speak(options) {\n    var _this;\n\n    _classCallCheck(this, Speak);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speak).call(this));\n    if (!options) options = {};\n    _this.lang = null;\n    _this.profiles = {};\n    _this.defaultProfile = null;\n\n    for (var name in profiles) {\n      _this.addProfile(profiles[name]);\n    }\n\n    if (options.profile) {\n      _this.setProfile(options.profile);\n    } else {\n      _this.setProfile('Jack');\n    }\n\n    if (_this.profile.engine === 'espeak') {\n      if (options.language) {\n        _this.setLanguage(options.language);\n      }\n    }\n\n    if (!_this.lang) {\n      _this.setLanguage('en_us');\n    }\n\n    if (options.visualizer) {\n      _this.setVisualizer(options.visualizer);\n    }\n\n    return _this;\n  }\n\n  _createClass(Speak, [{\n    key: \"setVisualizer\",\n    value: function setVisualizer(vis) {\n      this.visualizer = vis;\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      this.lang = Speak.getLanguageId(lang);\n    }\n  }, {\n    key: \"processOptions\",\n    value: function processOptions(options) {\n      if (!options) {\n        options = {};\n      }\n\n      var profileName = options.profile ? options.profile : this.defaultProfile;\n      var profile = this.profiles[profileName]['default'];\n      var v = Object.assign({}, profile);\n      if (options.slow) v.speed = this.profiles[profileName]['slow'].speed;\n      if (options.fast) v.speed = this.profiles[profileName]['fast'].speed;\n      if (options.low) v.pitch = this.profiles[profileName]['low'].pitch;\n      if (options.high) v.pitch = this.profiles[profileName]['high'].pitch;\n      if (options.pitch) v.pitch = this.profiles[profileName]['pitch'].pitch;\n      if (options.speed) v.speed = this.profiles[profileName]['speed'].speed;\n\n      if (options.language) {\n        v.voice = Speak.getLanguageId(options.language);\n      } else {\n        v.voice = this.lang;\n      }\n\n      if (options.delay) {\n        v.delay = options.delay;\n      }\n\n      return v;\n    }\n  }, {\n    key: \"speak\",\n    value: function speak(text, options) {\n      var _this2 = this;\n\n      options = options || {};\n\n      if (this.visualizer) {\n        return new Promise(function (resolve) {\n          _this2.getWorkerAudioData(text, options, function (audioContext, source) {\n            _this2.visualizer.loadAudioData(audioContext, source, resolve);\n          });\n        });\n      } else {\n        this.getWorkerAudioData(text, options, function (audioContext, source) {\n          // this.visualizer.loadAudioData(audioContext, source, resolve);\n          source.connect(audioContext.destination);\n\n          source.onended = function () {\n            source.connect(audioContext.destination);\n            audioContext.close();\n            if (callback) callback();\n          };\n\n          source.start(0);\n        });\n      }\n    }\n  }, {\n    key: \"getWorkerAudioData\",\n    value: function getWorkerAudioData(text, options, callback) {\n      text = text.toLowerCase();\n      if (!options.profile) options.profile = this.defaultProfile || 'Jack';\n      var engine = this.profiles[options.profile].engine;\n      var workerPath;\n\n      if (engine === 'sam') {\n        workerPath = Speak.workers.sam;\n      } else if (engine === 'espeak') {\n        if (typeof Speak.workers.espeak === 'string') {\n          workerPath = Speak.workers.espeak;\n        } else if (Speak.workers.espeak.length) {\n          for (var i = 0; i < Speak.workers.espeak.length; i++) {\n            if (Speak.workers.espeak[i].language === options.language) {\n              workerPath = Speak.workers.espeak[i].path;\n              break;\n            }\n          }\n        }\n      }\n\n      if (!workerPath) throw new Error('no worker path for this language');\n      var worker = new Worker(workerPath);\n      worker.addEventListener('message', function (e) {\n        console.log('received from worker:', e.data);\n\n        if (e.data.rawdata) {\n          var audioContext = new AudioContext();\n          var source = audioContext.createBufferSource();\n\n          if (engine === 'sam') {\n            var data = e.data.rawdata;\n            var audioBuffer = audioContext.createBuffer(1, data.length, 22050);\n            var buffer = audioBuffer.getChannelData(0);\n\n            for (var _i = 0; _i < data.length; _i++) {\n              buffer[_i] = data[_i];\n            }\n\n            source.buffer = audioBuffer;\n            callback(audioContext, source);\n          } else {\n            audioContext.decodeAudioData(e.data.rawdata, function (buffer) {\n              source.buffer = buffer;\n              callback(audioContext, source);\n            }, function (e) {\n              console.log('error', e);\n            });\n          }\n        }\n      }, false);\n      var voptions = this.processOptions(options);\n      worker.postMessage({\n        cmd: 'speak',\n        text: text,\n        options: voptions\n      });\n    }\n  }, {\n    key: \"replacementsFor\",\n    value: function replacementsFor(text, replacements) {\n      replacements.forEach(function (replacement) {\n        var from = replacement[0];\n        var to = replacement[1];\n        text = text.replace(new RegExp(from, 'gi'), to);\n      });\n      return text;\n    } // todo:\n    // multipartData() {\n    // \tvar parts = [\n    // \t\t{ text: \"Travel to\",      voice: \"en/en-us\", variant: \"m3\" },\n    // \t\t{ text: \"Paris\",          voice: \"fr\",       variant: \"f5\" },\n    // \t\t{ text: \"at light speed\", voice: \"en/en-us\", variant: \"m3\" }\n    // \t];\n    // }\n\n  }, {\n    key: \"addProfile\",\n    value: function addProfile(profile) {\n      var profileTypes = ['high', 'low', 'fast', 'slow'];\n      profileTypes.forEach(function (type) {\n        if (type !== 'default' && type !== 'name') {\n          var p = Object.assign({}, profile['default']);\n\n          for (var i in profile[type]) {\n            p[i] = profile[type][i];\n          }\n\n          profile[type] = p;\n        }\n      });\n      this.profiles[profile.name] = profile;\n    }\n  }, {\n    key: \"setProfile\",\n    value: function setProfile(name) {\n      this.defaultProfile = name;\n      this.profile = profiles[name];\n      return this;\n    }\n  }]);\n\n  return Speak;\n}(EventEmitter);\n\nSpeak.variants = variants;\nSpeak.profiles = profiles;\nSpeak.languageIds = languageIds;\n\nSpeak.getLanguageId = function (lang) {\n  if (lang.indexOf('_') > -1) lang = lang.replace('_', '-');\n  if (lang === 'en-us') lang = 'en/en-us';\n  if (lang === 'en') lang = 'en/en';\n  return lang;\n};\n\nSpeak.addProfile = function (profile) {\n  for (var name in profile) {\n    Speak.profiles[name] = profile[name];\n  }\n};\n\nSpeak.setWorkers = function (workers) {\n  Speak.workers = workers;\n};\n\nvar speakerQueue = new SpeakerQueue(new Speak());\nSpeak.queue = speakerQueue.queue.bind(speakerQueue);\nSpeak.clearQueue = speakerQueue.clearQueue.bind(speakerQueue);\nSpeak.on = speakerQueue.on.bind(speakerQueue);\nSpeak.once = speakerQueue.once.bind(speakerQueue);\nexport default Speak;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\n// The object previously known as Client (minus bindInterface)\nimport EventEmitter from 'events';\n\nvar CollectionModel =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(CollectionModel, _EventEmitter);\n\n  function CollectionModel() {\n    _classCallCheck(this, CollectionModel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CollectionModel).apply(this, arguments));\n  }\n\n  _createClass(CollectionModel, [{\n    key: \"setStore\",\n    value: function setStore(store, singleton) {\n      if (singleton) {\n        this.store = null;\n        this.state = store;\n      } else {\n        this.store = store;\n      }\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(data) {\n      if (typeof arguments[0] === 'string') {\n        var type = arguments[0];\n        data = arguments[1];\n        var d = Object.assign({}, this.state[type]);\n        this.state[type] = d;\n        var changes = {};\n        changes[type] = {};\n\n        for (var name in data) {\n          if (d[name] !== data[name]) {\n            d[name] = data[name];\n            changes[type][name] = data[name];\n          }\n        }\n\n        return changes;\n      } else {\n        if (this.store) {\n          var id = this.state ? this.state.id : data.id;\n          var changes = this.store.set(id, data);\n          this.state = this.store[id];\n          this.emit('update', changes);\n          return changes;\n        } else {\n          return this._setState(data);\n        }\n      }\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(data) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        // this.emit('update', this.state, changes);\n        this.emit('update', changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state.id in this.store ? this.store[this.state.id] : {};\n    }\n  }]);\n\n  return CollectionModel;\n}(EventEmitter);\n\nexport default CollectionModel;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Listener =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Listener, _EventEmitter);\n\n  function Listener(postCommand) {\n    var _this;\n\n    _classCallCheck(this, Listener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Listener).call(this));\n    _this.postCommand = postCommand;\n    return _this;\n  }\n\n  _createClass(Listener, [{\n    key: \"start\",\n    value: function start() {\n      console.log('listen start');\n      this.postCommand({\n        listenCommand: {\n          command: 'start'\n        }\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      console.log('listen stop');\n      this.postCommand({\n        listenCommand: {\n          command: 'stop'\n        }\n      });\n    }\n  }, {\n    key: \"startContinuous\",\n    value: function startContinuous(options) {\n      console.log('startContinuous', options);\n      this.postCommand({\n        listenCommand: {\n          command: 'start-continuous',\n          arguments: options\n        }\n      });\n    }\n  }, {\n    key: \"stopContinuous\",\n    value: function stopContinuous() {\n      this.postCommand({\n        listenCommand: {\n          command: 'stop-continuous'\n        }\n      });\n    }\n  }, {\n    key: \"recognizedText\",\n    value: function recognizedText(text) {\n      this.emit('recognized', text);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.emit('start', text);\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.emit('stop', text);\n    }\n  }, {\n    key: \"onStartContinuous\",\n    value: function onStartContinuous() {\n      this.emit('start-continuous', text);\n    }\n  }, {\n    key: \"onStopContinuous\",\n    value: function onStopContinuous() {\n      this.emit('stop-continuous', text);\n    }\n  }]);\n\n  return Listener;\n}(EventEmitter);\n\nexport default Listener;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar State =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(State, _EventEmitter);\n\n  function State(defaults) {\n    var _this;\n\n    _classCallCheck(this, State);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(State).call(this));\n    _this.state = defaults || {};\n    return _this;\n  }\n\n  _createClass(State, [{\n    key: \"setState\",\n    value: function setState(data, callback) {\n      var changes = {};\n      var hasChanges = false;\n      var s = this.state;\n\n      for (var i in data) {\n        if (typeof data[i] === 'object' || s[i] !== data[i]) {\n          hasChanges = true;\n          changes[i] = data[i];\n          this.state[i] = data[i];\n        }\n      }\n\n      if (hasChanges) {\n        //this.state = Object.assign({}, this.state, changes);\n        //console.log('emit update', changes);\n        this.emit('update', this.state, changes);\n        if (callback) callback(changes);\n        return changes;\n      } else {\n        //if (callback) callback();\n        return null;\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.addListener('update', handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this.removeListener('update', handler);\n    }\n  }]);\n\n  return State;\n}(EventEmitter);\n\nexport default State;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport EventEmitter from 'events';\n\nvar Sound =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Sound, _EventEmitter);\n\n  function Sound(url, options) {\n    var _this;\n\n    _classCallCheck(this, Sound);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sound).call(this));\n    if (!options) options = {};\n    if (options.context) _this.context = options.context;\n\n    if (options.source) {\n      _this.source = options.source;\n    }\n\n    _this.connected = false;\n    _this.loaded = false;\n    _this.looping = false;\n\n    if (options.autoplay) {\n      _this.connect();\n\n      _this.on('load', function () {\n        if (options.loop) {\n          _this.loop();\n        } else _this.play(options.callback);\n      });\n    }\n\n    if (typeof url === 'string') {\n      _this.url = url;\n\n      _this.load();\n    } else if (typeof url === 'object') {\n      _this.loadArrayBuffer(url);\n    }\n\n    return _this;\n  }\n\n  _createClass(Sound, [{\n    key: \"connect\",\n    value: function connect() {\n      if (!this.context) {\n        this.createContext(); // this.context = new AudioContext();\n        // this.reset();\n      } // if (!this.source) {\n      // \tthis.source = this.context.createBufferSource();\n      // }\n\n\n      if (!this.source.buffer) this.source.buffer = this.buffer;\n      this.source.connect(this.context.destination);\n      this.connected = true;\n    }\n  }, {\n    key: \"loadArrayBuffer\",\n    value: function loadArrayBuffer(data) {}\n  }, {\n    key: \"load\",\n    value: function load() {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open('GET', this.url, true);\n      request.responseType = 'arraybuffer';\n\n      request.onload = function () {\n        _this2.response = request.response;\n\n        if (_this2.context) {\n          // debugger;\n          _this2.loadData();\n        } else {\n          console.log('loaded no context', _this2.url);\n        }\n      };\n\n      request.send();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this3 = this;\n\n      if (!this.response) {\n        debugger;\n      }\n\n      this.context.decodeAudioData(this.response, function (response) {\n        _this3.buffer = response;\n\n        if (_this3.source) {\n          // debugger;\n          _this3.source.buffer = _this3.buffer;\n        }\n\n        _this3.loaded = true;\n\n        _this3.emit('load');\n      }, function (e) {\n        console.error('Sound: failed to load', this.url); // this.emit('error', e);\n      });\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      this.context = new AudioContext();\n      this.source = this.context.createBufferSource();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.createContext();\n      this.connect(); // this.source.buffer = this.buffer;\n      // this.source.connect(this.context.destination);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.source.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.source.resume();\n    }\n  }, {\n    key: \"play\",\n    value: function play(callback) {\n      var _this4 = this;\n\n      if (this.isPlaying) {\n        console.log('isPlaying');\n        return;\n      }\n\n      if (!this.loaded) {\n        if (!this.context) {\n          this.createContext();\n        }\n\n        this.once('load', function () {\n          _this4.connect();\n\n          _this4.source.loop = _this4.looping;\n\n          _this4.source.onended = function () {\n            _this4.stop();\n\n            if (callback) callback();\n          };\n\n          _this4.isPlaying = true;\n\n          _this4.source.start(0);\n        });\n        this.loadData();\n      } else {\n        if (!this.connected) {\n          // debugger;\n          this.connect();\n        }\n\n        this.source.onended = function () {\n          // debugger;\n          _this4.stop();\n\n          if (callback) callback();\n        };\n\n        this.isPlaying = true;\n        this.source.start(0);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.isPlaying = false;\n      this.source.stop();\n      this.source.disconnect();\n      this.context.close();\n      this.connected = false;\n      this.looping = false;\n      this.reset();\n    }\n  }, {\n    key: \"loop\",\n    value: function loop() {\n      this.looping = true;\n      this.play(); // if (!this.loaded) {\n      // \tthis.once('load', () => {\n      // \t\tthis.connect();\n      // \t\tthis.source.loop = true;\n      // \t\tthis.source.start(0);\n      // \t});\n      // \tthis.load();\n      // }\n      // else {\n      // \tif (!this.connected) this.connect();\n      // }\n      // this.source.loop = true;\n      // this.source.start(0);\n    }\n  }]);\n\n  return Sound;\n}(EventEmitter);\n\nexport default Sound;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport EventEmitter from 'events';\n\nvar MonauralScope =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(MonauralScope, _EventEmitter);\n\n  function MonauralScope(canvas, options) {\n    var _this;\n\n    _classCallCheck(this, MonauralScope);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonauralScope).call(this));\n    if (!options) options = {};\n    _this.canvas = canvas;\n    _this.width = _this.canvas.width;\n    _this.height = _this.canvas.height;\n    _this.audioContext = null;\n    _this.meter = null;\n    _this.mediaStreamSource = null;\n    _this._draw = _this.draw.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isRecording = false;\n\n    _this.setTheme({\n      lineWidth: options.lineWidth || 3,\n      strokeColor: options.strokeColor || '#FF0000',\n      clipColor: options.clipColor || options.strokeColor || '#FF0000',\n      fillColor: options.fillColor || 'rgba(255,0,0,0.1)',\n      bgOnColor: options.bgOnColor || null,\n      bgOffColor: options.bgOffColor || null,\n      dotColor: options.dotColor || '#FF0000',\n      dotSize: options.dotSize || 3,\n      background: options.background || null\n    });\n\n    return _this;\n  }\n\n  _createClass(MonauralScope, [{\n    key: \"setTheme\",\n    value: function setTheme(options) {\n      this.theme = options;\n      this.draw();\n    }\n  }, {\n    key: \"createAudioMeter\",\n    value: function createAudioMeter(audioContext, clipLevel, averaging, clipLag) {\n      // this.audioContext = audioContext;\n      var processor = audioContext.createScriptProcessor(512); //this.processor = processor;\n\n      processor.onaudioprocess = function (event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var bufLength = buf.length;\n        var sum = 0;\n        var x; // Do a root-mean-square on the samples: sum up the squares...\n\n        for (var i = 0; i < bufLength; i++) {\n          x = buf[i];\n\n          if (Math.abs(x) >= this.clipLevel) {\n            this.clipping = true;\n            this.lastClip = window.performance.now();\n          }\n\n          sum += x * x;\n        } // ... then take the square root of the sum.\n\n\n        var rms = Math.sqrt(sum / bufLength); // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n\n        this.volume = Math.max(rms, this.volume * this.averaging);\n        if (!this.maxVolume) this.maxVolume = this.volume;\n        this.maxVolume = Math.max(this.volume, this.maxVolume);\n      };\n\n      processor.clipping = false;\n      processor.lastClip = 0;\n      processor.volume = 0;\n      processor.clipLevel = clipLevel || 0.99; //0.98;\n\n      processor.averaging = averaging || 0.97; //0.95;\n\n      processor.clipLag = clipLag || 500; //750;\n\n      processor.connect(audioContext.destination);\n\n      processor.checkClipping = function () {\n        if (!this.clipping) return false;\n        if (this.lastClip + this.clipLag < window.performance.now()) this.clipping = false;\n        return this.clipping;\n      };\n\n      processor.shutdown = function () {\n        this.disconnect();\n        this.onaudioprocess = null;\n      };\n\n      return processor;\n    }\n  }, {\n    key: \"setIsRecording\",\n    value: function setIsRecording(isRecording) {\n      if (this.isRecording === isRecording) {\n        console.log('same');\n        return;\n      }\n\n      this.isRecording = isRecording;\n      if (isRecording) this.startRecording();else this.stopRecording();\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (this.isRecording) {\n        // if (this.audioContext) {\n        // \tif (this.meter) {\n        // \t\tthis.meter.disconnect(this.audioContext.destination);\n        // \t}\n        // } else {\n        // \tconsole.log('error: no audioContext');\n        // }\n        if (this.mediaStreamSource && this.meter) {\n          this.mediaStreamSource.disconnect(this.meter);\n        }\n\n        if (this.meter) {\n          this.meter.shutdown();\n        }\n\n        if (this.audioContext) {\n          this.audioContext.close();\n        }\n      }\n\n      this.isRecording = false;\n      this.isDrawing = false;\n    } // start and stop the mic to bring up the request dialog\n\n  }, {\n    key: \"requestMic\",\n    value: function requestMic() {\n      var _this2 = this;\n\n      this.startRecording(function () {\n        // sucess\n        _this2.stopRecording();\n      }, function () {\n        // error\n        _this2.stopRecording();\n      });\n    }\n  }, {\n    key: \"startRecording\",\n    value: function startRecording(successcb, errorcb) {\n      var _this3 = this;\n\n      if (this.isRecording) {\n        console.log('already recording');\n        return;\n      }\n\n      console.log('startRecording');\n      this.isRecording = true;\n      var audioContext = new AudioContext();\n      this.audioContext = audioContext;\n\n      var success = function success(stream) {\n        console.log('startRecording success');\n\n        if (_this3.audioContext) {\n          try {\n            _this3.mediaStreamSource = audioContext.createMediaStreamSource(stream);\n            _this3.meter = _this3.createAudioMeter(audioContext);\n\n            _this3.mediaStreamSource.connect(_this3.meter);\n\n            _this3.startDrawing();\n\n            if (successcb) successcb();\n          } catch (e) {\n            if (errorcb) errorcb();\n          }\n        }\n      };\n\n      var fail = function fail(e) {\n        console.log('startRecording fail'); //debugger;\n\n        if (errorcb) errorcb();\n      };\n\n      try {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.mediaDevices.getUserMedia; // ask for an audio input\n\n        navigator.getUserMedia({\n          \"audio\": {\n            \"mandatory\": {\n              \"googEchoCancellation\": \"false\",\n              \"googAutoGainControl\": \"false\",\n              \"googNoiseSuppression\": \"false\",\n              \"googHighpassFilter\": \"false\"\n            },\n            \"optional\": []\n          }\n        }, success, fail);\n      } catch (e) {\n        alert('getUserMedia threw exception :' + e);\n      }\n    }\n  }, {\n    key: \"loadAudioData\",\n    value: function loadAudioData(audioContext, source, callback) {\n      var _this4 = this;\n\n      this.audioContext = audioContext;\n      this.source = source;\n      source.connect(audioContext.destination);\n      var meter = this.createAudioMeter(audioContext);\n      this.meter = meter;\n      source.connect(this.meter);\n\n      source.onended = function () {\n        _this4.isPlaying = false; // source.disconnect(audioContext.destination);\n\n        source.disconnect();\n        delete source.buffer; // this.meter.shutdown();\n\n        source.stop();\n\n        _this4.stopDrawing();\n\n        audioContext.close(); // source.disconnect();\n\n        if (callback) callback();\n      };\n\n      this.isPlaying = true;\n      this.startDrawing();\n      source.start(0);\n    }\n  }, {\n    key: \"startDrawing\",\n    value: function startDrawing() {\n      this.isDrawing = true;\n      this.draw();\n    }\n  }, {\n    key: \"stopDrawing\",\n    value: function stopDrawing() {\n      this.meter.volume = 0;\n      this.draw();\n      this.isDrawing = false;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (!this.canvas) {\n        console.log('no canvas');\n        return;\n      }\n\n      var ctx = this.canvas.getContext('2d');\n\n      if (this.theme.background) {\n        ctx.fillStyle = this.theme.background;\n        ctx.fillRect(0, 0, this.width, this.height);\n      } else {\n        ctx.clearRect(0, 0, this.width, this.height);\n      }\n\n      if (this.theme.bgOnColor || this.theme.bgOffColor) {\n        var maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, maxsize, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.isPlaying || this.isRecording ? this.theme.bgOnColor : this.theme.bgOffColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      ctx.lineWidth = this.theme.lineWidth;\n\n      if (this.theme.dotSize) {\n        var size = this.theme.dotSize;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, size, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.theme.dotColor;\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      if (!this.isRecording && !this.isDrawing) {\n        console.log('not drawing');\n      } else {\n        // console.log('IS drawing ', this.meter.volume);\n        if (!this.meter) {\n          console.error('no mater');\n          this.startDrawing();\n          this.startRecording();\n          return;\n        }\n\n        ctx.strokeStyle = this.meter.checkClipping() ? this.theme.clipColor : this.theme.strokeColor;\n\n        var _maxsize = Math.min(this.width, this.height) / 2 - ctx.lineWidth;\n\n        var _size = this.meter.volume * _maxsize * 5;\n\n        if (_size > this.width / 2 - this.theme.lineWidth) _size = this.width / 2 - this.theme.lineWidth;\n        ctx.beginPath();\n        ctx.arc(this.width / 2, this.height / 2, _size, 0, 2 * Math.PI, false);\n\n        if (this.theme.fillColor) {\n          ctx.fillStyle = this.theme.fillColor;\n          ctx.fill();\n        }\n\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.isDrawing) {\n          window.requestAnimationFrame(this._draw);\n        }\n      }\n    }\n  }]);\n\n  return MonauralScope;\n}(EventEmitter);\n\nexport default MonauralScope;","import _classCallCheck from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dstein/dev/jaxcore/jaxcore-speak/examples/multiplespeakers/node_modules/@babel/runtime/helpers/esm/inherits\";\n// import EventEmitter from 'events';\nimport spinBrowser from './spin/transports/browser';\nimport CollectionModel from './CollectionModel'; // import SingletonModel from './SingletonModel';\n\nimport Spin from './spin/spin';\nimport Listener from './Listen';\nimport State from './State';\nimport Store from './Store';\nimport logger from './logger';\nimport Color from './Color';\nimport Sound from './Sound'; // import AudioScope from './AudioScope';\n\nimport MonauralScope from './MonauralScope';\n\nfunction postMessage(msg) {\n  console.log('client post', msg);\n  var data = {\n    '_jaxcore_client': {\n      message: msg,\n      protocol: 1\n    }\n  }; // if (msg.spin) {\n  // \tconsole.log(data);\n  // \tdebugger;\n  // }\n\n  window.postMessage(data, window.document.location.protocol + window.document.location.host);\n}\n\nvar Listen = new Listener(postMessage); //.setPostCommand();\n\nspinBrowser.setPostCommand(postMessage);\n\nvar JaxcoreClient =\n/*#__PURE__*/\nfunction (_State) {\n  _inherits(JaxcoreClient, _State);\n\n  function JaxcoreClient() {\n    var _this;\n\n    _classCallCheck(this, JaxcoreClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JaxcoreClient).call(this));\n    _this.reconnect = true;\n\n    _this.setState({\n      connectedExtension: false,\n      extensionReady: false\n    });\n\n    var onMessage = function onMessage(event) {\n      //event.isTrusted &&\n      if (document.location.href.indexOf(event.origin) === 0) {\n        if (event.data._jaxcore_content) {\n          var msg = event.data._jaxcore_content.message;\n\n          if (msg.socketDisconnected) {\n            _this.setState({\n              connectedExtension: false\n            });\n          } else if ('extensionReady' in msg) {\n            //console.log('extensionReady', msg);\n            _this.setState({\n              extensionReady: true\n            });\n\n            _this.emit('extension-ready'); // debugger;\n\n          } else if ('connectedExtension' in msg) {\n            _this.setState({\n              connectedExtension: msg.connectedExtension\n            });\n\n            if (msg.connectedExtension) {\n              //callback(null, true);\n              console.log('connectedExtension !');\n\n              _this.emit('connectedExtension');\n            } else {// this.connectExtension();\n            }\n          } else if (msg.spin) {\n            console.log('got spin data from bg', msg.spin);\n            spinBrowser.data(msg.spin);\n          } else if (msg.listen) {\n            console.log('got listen data from bg', msg.spin); //alert('Listen said: ' + msg.listen.recognizedText);\n            // spinBrowser.data(msg.spin);\n\n            Listen.recognizedText(msg.listen.recognizedText);\n          } else if (event.data.target && event.data.target === 'inpage') {} else {\n            console.log('client unhandled message', event.data);\n          }\n        } else {// console.log('not _jaxcore_content', event.data, event.origin);\n        }\n      } else {\n        console.log('nope', event);\n      }\n    };\n\n    window.addEventListener(\"message\", onMessage);\n    spinBrowser.on('command', function (spin, args) {\n      console.log('spin command', spin, args);\n    });\n    return _this;\n  }\n\n  _createClass(JaxcoreClient, [{\n    key: \"disconnectExtension\",\n    value: function disconnectExtension() {\n      this.reconnect = false; // console.log('disconnectExtension');\n\n      postMessage({\n        disconnectExtension: true\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(callback) {\n      var _this2 = this;\n\n      this.once('connectedExtension', callback);\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this2.connectExtension();\n        });\n      }\n    }\n  }, {\n    key: \"connectExtension\",\n    value: function connectExtension(callback) {\n      if (this.state.connectedExtension) {\n        console.log('already connectedExtension');\n        this.emit('connectedExtension');\n      } else {\n        // TO DO CHANGE TO LISTENER ?\n        console.log('Jaxcore connectExtension');\n        postMessage({\n          connectExtension: true\n        });\n      }\n    }\n  }, {\n    key: \"connectSpins\",\n    value: function connectSpins(callback) {\n      var _this3 = this;\n\n      console.log('connectSpins');\n      spinBrowser.addListener('spin-created', function (spin) {\n        callback(spin);\n      });\n\n      if (this.state.extensionReady) {\n        this.connectExtension();\n      } else {\n        this.once('extension-ready', function () {\n          _this3.connectExtension();\n        });\n      } // if (this.state.connectedExtension) {\n      //\n      // }\n      //\n      // if (this.state.connectedExtension) {\n      // \tthis.onCreate(callback);\n      // } else {\n      // \tthis.once('connectedExtension', () => {\n      // \t\tthis.onCreate(callback);\n      // \t});\n      // \t// setTimeout(() => {\n      // \t\tthis.connectExtension(callback);\n      // \t// }, 1000);\n      // }\n\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(callback) {\n      var _this4 = this;\n\n      spinBrowser.addListener('spin-created', function (spin) {\n        _this4.emit(); // if (spin.state.connected) {\n        // \tcallback(spin);\n        // } else {\n        // \tspin.once('connected', function () {\n        // \t\tcallback(spin)\n        // \t});\n        // }\n\n      });\n    }\n  }]);\n\n  return JaxcoreClient;\n}(State);\n\nvar createStore = function createStore(name) {\n  return new Store(name);\n};\n\nvar createLogger = logger.create;\nexport { CollectionModel, State, Store, createStore, logger, createLogger, Color, Sound, Spin, Listen, MonauralScope };\nvar jaxcore = new JaxcoreClient();\nSpin.connectAll = jaxcore.connectSpins.bind(jaxcore); // todo: refactor this in a better way\n\nexport default jaxcore; // var Client = require('./client');\n// // var ES6Client = require('./es6client');\n//\n// module.exports = {\n// \tlogger: logger,\n// \tcreateLogger: logger.create,\n// \tStore: Store,\n// \tcreateStore: function(name) {\n// \t\treturn new Store(name);\n// \t},\n// \tClient: Client\n// \t// ES6Client: ES6Client\n// };","var EventEmitter = require('events');\n\nvar Spin = require('../spin');\n\nfunction BrowserTransport() {\n  this.constructor();\n}\n\nBrowserTransport.prototype = new EventEmitter();\nBrowserTransport.prototype.constructor = EventEmitter;\n\nBrowserTransport.prototype.data = function (data) {\n  // console.log('onStoreUpdate', data);\n  if (data.store) {\n    // console.log('transport store', data.store);\n    for (var id in data.store) {\n      // console.log('on store', id, data.store[id]);\n      this.add(data.store[id]);\n    } //this.emit('spin-connected', spin);\n\n  } else if (data.created) {\n    // console.log('transport created', data.id, data.created);\n    this.add(data.created);\n  } else if (data.update) {\n    if (data.id in Spin.spinIds) {\n      // console.log('transport update', data.id);\n      this.update(data.id, data.update); //Spin.store.set();\n    } else {\n      console.log('transport postcreate', data.id);\n      data.update.id = data.id;\n      this.add(data.update); // this.add(data);\n    }\n  } else if (data.destroyed) {// console.log('transport created', data.id, data.created);\n  }\n};\n\nBrowserTransport.prototype.update = function (id, changes) {\n  var spin = Spin.spinIds[id]; // var changed = spin.setState(changes);\n  // if (!changed) {\n  // \tconsole.log('no changes');\n  // \treturn;\n  // }\n\n  for (var c in changes) {\n    spin.state[c] = changes[c];\n  } // console.log('update changed', changed);\n\n\n  if ('knobPushed' in changes) {\n    spin.emit('knob', changes.knobPushed);\n  }\n\n  if ('buttonPushed' in changes) {\n    spin.emit('button', changes.buttonPushed);\n  }\n\n  if ('spinPosition' in changes) {\n    // let diff;\n    // let throttled = false;\n    // if (spin._lastSpinPosition !== undefined) {\n    // \tdiff = spin.state.spinPosition - spin._lastSpinPosition;\n    // \tif (Math.abs(diff) > 1) {\n    // \t\tthrottled = true;\n    // \t\twhile (spin._lastSpinPosition !== spin.state.spinPosition) {\n    // \t\t\tconsole.log('skipping from', spin._lastSpinPosition, 'to', spin.state.spinPosition);\n    // \t\t\tspin._lastSpinPosition += diff>0? 1 : -1;\n    // \t\t\tspin.emit('spin', spin.state.spinDirection, spin._lastSpinPosition);\n    // \t\t}\n    // \t}\n    // }\n    // if (!throttled) {\n    // \tconsole.log('SPIN not throttled', spin.state.spinPosition);\n    // \tspin._lastSpinPosition = spin.state.spinPosition;\n    // \tspin.emit('spin', spin.state.spinDirection, spin.state.spinPosition);\n    // }\n    spin._lastSpinPosition = spin.state.spinPosition; // TODO: connected gets set to false upon reconnections\n    // if (spin.state.connected) {\n    // \tconsole.log('emit connected', spin.state.spinPosition);\n\n    spin.emit('spin', spin.state.spinDirection, spin.state.spinPosition); // }\n    // else {\n    // \tconsole.log('not connected?', spin.state.connected);\n    // }\n    // if (spin._lastSpinPosition === undefined) {\n    // \tconsole.log('first _lastSpinPosition', spin.state.spinPosition);\n    // \tdebugger;\n    // }\n    // else {\n    // }\n    // this.emit('update', spin.state);\n  }\n\n  if ('connected' in changes) {\n    if (changes.connected) {\n      this.emit('spin-connected', spin);\n      spin.emit('connect');\n    } else {\n      this.emit('spin-disconnected', spin);\n      spin.emit('disconnect');\n    }\n  }\n\n  console.log('update', changes);\n  spin.emit('update', changes); // spin.on('update', function(changes) {\n  // \tconsole.log('on update', changes);\n  // });\n};\n\nBrowserTransport.prototype.add = function (state) {\n  if (state.id in Spin.spinIds) {\n    // console.log('already added', state.id);\n    this.update(state.id, state);\n    return;\n  }\n\n  var spin = Spin.create(state, this);\n  this.emit('spin-created', spin); // if ('knobPushed' in data) {\n  // \tspin.processKnob(data['knobPushed']);\n  // }\n  // if ('buttonPushed' in data) {\n  // \tspin.processButton(data['buttonPushed']);\n  // }\n  // var me = this;\n  // if (spin.state.connected) {\n  // \t// me.emit('spin-created', spin);\n  // }\n  // else {\n  // \tspin.once('connect', function() {\n  // \t\tme.emit('spin-connected', spin);\n  // \t});\n  // }\n};\n\nBrowserTransport.prototype.remove = function (data) {};\n\nBrowserTransport.prototype.sendCommand = function (spin, args) {\n  // this.emit('command', spin, args);\n  console.log('sendCommand', spin.id, args);\n  var id = args.shift();\n  var method = args.shift();\n  console.log('args', args); //debugger;\n\n  this.postCommandFn({\n    spinCommand: {\n      id: id,\n      method: method,\n      args: args\n    }\n  });\n};\n\nBrowserTransport.prototype.setPostCommand = function (fn) {\n  this.postCommandFn = fn;\n};\n\nvar spinBrowser = new BrowserTransport();\nmodule.exports = spinBrowser;","module.exports = {\n  \"Jack\": {\n    \"name\": \"Jack\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 10,\n      speed: 180,\n      variant: 'm2'\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 0\n    },\n    \"slow\": {\n      speed: 120\n    },\n    \"fast\": {\n      speed: 250\n    }\n  },\n  \"Pris\": {\n    \"name\": \"Pris\",\n    \"phoneticName\": \"Priss\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 47,\n      speed: 130,\n      variant: 'f5'\n    },\n    \"high\": {\n      pitch: 80\n    },\n    \"low\": {\n      pitch: 20\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Roy\": {\n    \"name\": \"Roy\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 35,\n      speed: 180,\n      variant: 'm1'\n    },\n    \"high\": {\n      pitch: 3\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Xenu\": {\n    \"name\": \"Xenu\",\n    \"phoneticName\": \"zee-new\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 1,\n      pitch: 35,\n      speed: 170,\n      variant: 'klatt3'\n    },\n    \"high\": {\n      pitch: 65\n    },\n    \"low\": {\n      pitch: 0\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Cylon\": {\n    \"name\": \"Cylon\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 1,\n      pitch: 35,\n      speed: 170,\n      variant: 'whisperf'\n    },\n    \"high\": {\n      pitch: 65,\n      speed: 150\n    },\n    \"low\": {\n      pitch: 0,\n      speed: 140\n    },\n    \"slow\": {\n      pitch: 20,\n      speed: 100,\n      wordgap: 1\n    },\n    \"fast\": {\n      speed: 200,\n      wordgap: 0\n    }\n  },\n  \"Leon\": {\n    \"name\": \"Leon\",\n    \"phoneticName\": \"Leeon\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 40,\n      speed: 150,\n      variant: 'm7'\n    },\n    \"high\": {\n      pitch: 55\n    },\n    \"low\": {\n      pitch: 5\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Rachel\": {\n    \"name\": \"Rachel\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 60,\n      speed: 150,\n      variant: 'f2'\n    },\n    \"high\": {\n      pitch: 75\n    },\n    \"low\": {\n      pitch: 40\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Zhora\": {\n    \"name\": \"Zhora\",\n    \"engine\": \"espeak\",\n    \"default\": {\n      amplitude: 100,\n      wordgap: 0,\n      pitch: 60,\n      speed: 150,\n      variant: 'f4'\n    },\n    \"high\": {\n      pitch: 75\n    },\n    \"low\": {\n      pitch: 40\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 200\n    }\n  },\n  \"Sam\": {\n    \"name\": \"Sam\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 64,\n      pitch: 64,\n      throat: 128,\n      mouth: 128\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 110\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 40\n    }\n  },\n  \"Elf\": {\n    \"name\": \"Elf\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 72,\n      pitch: 64,\n      throat: 110,\n      mouth: 160\n    },\n    \"high\": {\n      pitch: 50\n    },\n    \"low\": {\n      pitch: 110\n    },\n    \"slow\": {\n      speed: 100\n    },\n    \"fast\": {\n      speed: 40\n    }\n  },\n  \"Robo\": {\n    \"name\": \"Robo\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 82,\n      pitch: 60,\n      throat: 190,\n      mouth: 190\n    },\n    \"high\": {\n      pitch: 40\n    },\n    \"low\": {\n      pitch: 100\n    },\n    \"slow\": {\n      speed: 120\n    },\n    \"fast\": {\n      speed: 50\n    }\n  },\n  \"Granny\": {\n    \"name\": \"Granny\",\n    \"engine\": \"sam\",\n    \"default\": {\n      speed: 82,\n      pitch: 35,\n      throat: 145,\n      mouth: 145\n    },\n    \"high\": {\n      pitch: 25\n    },\n    \"low\": {\n      pitch: 120\n    },\n    \"slow\": {\n      speed: 130\n    },\n    \"fast\": {\n      speed: 40\n    }\n  }\n};","var EventEmitter = require('events');\n\nvar plugin = require('jaxcore-plugin');\n\nvar log = plugin.createLogger('Spin Service');\nvar spinStore = plugin.createStore('Spin Store');\nvar Client = plugin.Client;\n\nvar SpinBuffer = require('./buffer'); // var udp, tcp, usb;\n// var SpinUDPService = require('./udp');\n// var udp = new SpinUDPService();\n//\n// var SpinTCPService = require('./tcp');\n// var tcp = new SpinTCPService();\n//\n// var SpinUSBService = require('./usb');\n// var usb = new SpinUSBService();\n//\n// var SpinBLEService = require('./ble');\n// var ble = new SpinBLEService();\n\n\nvar spinIds = {};\nvar spinIps = {}; // tcp.on('connect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp connect', id);\n//\n// \tudp.connectedTCP(id);\n//\n// \tspinIps[ip] = id;\n//\n// \tif (id in spinIds) {\n// \t\tspinIds[id]._connected();\n// \t\t// spinIds[id].emit('connect', spinIds[id]);\n// \t}\n// \t// var ip = socket.remoteAddress;\n// \t// log('connected',id,ip);\n// });\n//\n// tcp.on('disconnect', function (id, socket) {\n// \tvar ip = socket.remoteAddress;\n// \tlog('on tcp disconnect', id, ip, spinIps);\n//\n// \tudp.disconnectedTCP(id);\n//\n// \tif (ip in spinIps) {\n//\n//\n// \t\tlog('destroying ', id, ip, spinIps[ip]);\n// \t\t//spinIds[id]._disconnected();\n//\n// \t\tspinIds[id].destroy();\n// \t\tdelete spinIds[id];\n// \t\tdelete spinIps[ip];\n//\n// \t}\n// \telse {\n// \t\tlog('got disconnected from unknown', ip);\n// \t}\n// });\n//\n// usb.on('connect', function (id) {\n// \tif (id in spinIds) {\n// \t\tlog('on usb connect', id);\n// \t\tspinIds[id]._connected();\n// \t}\n// \telse {\n// \t\tlog('error on usb connect', id);\n// \t}\n// });\n\nvar _instance = 0;\n\nfunction Spin(device, transport) {\n  this.constructor();\n  if (transport) this.transport = transport;else {\n    debugger;\n  }\n  var instance = _instance++;\n  this.log = plugin.createLogger('Spin ' + instance);\n  var ip = device.ip;\n  var id = device.id;\n  spinIds[id] = this;\n  this.id = id; // if (device.port) {\n  // \tthis.udpPort = device.port;\n  // }\n  // if (device.usbDevice) {\n  // \tthis.usbDevice = device.usbDevice;\n  // }\n  // if (device.blePeripheral) {\n  // \tthis.blePeripheral = device.blePeripheral;\n  // }\n\n  var now = new Date();\n  this.setStore(spinStore);\n  this.setDefaults(device, {\n    id: id,\n    ip: ip,\n    // remove ?\n    instance: instance,\n    connected: false,\n    spinPosition: 0,\n    spinDirection: 1,\n    spinPreviousTime: now,\n    spinTime: now,\n    knobPushed: false,\n    knobPushTime: now,\n    knobReleaseTime: now,\n    knobPushDuration: 0,\n    knobHold: false,\n    buttonPushed: false,\n    buttonPushTime: now,\n    buttonReleaseTime: now,\n    buttonPushDuration: 0,\n    buttonHold: false,\n    batteryVoltage: 0,\n    batteryPercent: 0,\n    isCharging: false,\n    isCharged: false,\n    sleeping: false,\n    inactivityTime: 0\n  });\n  this.createSettings({\n    brightness: 16,\n    knobHoldThreshold: 2000,\n    buttonHoldThreshold: 2000,\n    sleepEnabled: true,\n    sleepTimer: 0\n  }); // if (this.usbDevice) {\n  // \t// usb.addSpin(this);\n  // }\n  // else {\n  // \t// tcp.addSpin(spinIds, id);\n  // }\n}\n\nSpin.store = spinStore;\nSpin.spinIds = spinIds;\nSpin.Buffer = SpinBuffer;\nSpin.prototype = new Client();\nSpin.prototype.constructor = Client;\n\nSpin.prototype.setDefaults = function (config, defaults) {\n  this.setState(config);\n  var d = {};\n\n  for (var i in defaults) {\n    if (!(i in config)) {\n      d[i] = defaults[i];\n    }\n  }\n\n  this.setState(d);\n};\n\nSpin.prototype.createSettings = function (settings) {\n  this.settingDefaults = {};\n  this.settingNames = [];\n\n  for (var i in settings) {\n    this.settingNames.push(i);\n    this.settingDefaults[i] = settings[i];\n    this.state[i] = settings[i];\n  } //this.log('created settings', this.state);\n\n};\n\nSpin.prototype.changeSettings = function (settings) {\n  log('changing settings', settings);\n  var changes = {};\n  var hasChanges = false;\n\n  for (var name in settings) {\n    if (name in this.settingDefaults) {\n      var value = settings[name];\n      var d = {};\n      d[name] = settings[name];\n      var c = this.setState(d);\n\n      if (c) {\n        this.log('changed setting:', name + ' = ' + value, '(default ' + this.settingDefaults[name] + ')');\n        hasChanges = true;\n        changes[name] = value;\n      }\n    }\n  }\n\n  if (hasChanges) {\n    this.log('settings-changed', changes);\n    this.emit('settings-changed', changes);\n  }\n};\n\nSpin.prototype.buffer = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.spin.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferDelay = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.delay.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.bufferReset = function () {\n  if (!this._buffer) this._buffer = new Spin.Buffer(this);\n  return this._buffer.reset.apply(this._buffer, Array.prototype.slice.call(arguments));\n};\n\nSpin.prototype.cancelHoldEvents = function () {\n  clearTimeout(this._knobHoldTimer);\n  clearTimeout(this._buttonHoldTimer);\n};\n\nSpin.prototype.isConnected = function () {\n  return this.state.connected;\n};\n\nSpin.prototype._connected = function () {\n  this.resetDefaults();\n  this.setState({\n    connected: true,\n    sleeping: false\n  });\n  this.emit('connect', this);\n};\n\nSpin.prototype.connect = function () {\n  Spin.transport.connect(this); // if (this.usbDevice) {\n  // \tusb.connectSpin(this);\n  // }\n  // else {\n  // \tthis.log('connecting (' + this.udpPort + ')');\n  // \tudp.connectTCP(this.state.id, this.state.ip, this.udpPort);\n  // }\n};\n\nSpin.prototype._sleeping = function () {\n  this.setState({\n    sleeping: true\n  });\n  this.emit('sleeping');\n};\n\nSpin.prototype._removeEvents = function () {\n  var id = this.id; //tcp.disconnect(this.state.id, this.state.ip);\n\n  Spin.transport.remove(this); // if (this.usbDevice) {\n  // \tusb.removeSpin(this);\n  // }\n  // else {\n  // \ttcp.removeSpin(this);\n  // }\n};\n\nSpin.prototype.disconnect = function () {\n  this.setState({\n    connected: false\n  });\n  this.resetDefaults();\n  this.emit('disconnect', this);\n};\n\nSpin.prototype.resetDefaults = function () {\n  this.setState({\n    spinPosition: 0,\n    knobPushed: false,\n    knobReleased: true,\n    buttonPushed: false,\n    buttonReleased: true\n  });\n};\n\nSpin.prototype.processSpin = function (position) {\n  console.log('processSpin', position);\n  var direction = position > this.state.spinPosition ? 1 : -1;\n\n  if (position !== this.state.spinPosition) {\n    // var diff = this.state.spinPosition - position;\n    //\n    // if (Math.abs(diff) > 1 && this.state.throttle!=0) {\n    // \tvar throttledPosition = this.state.spinPosition;\n    // \t// while (this.state.spinPosition !== position) {\n    // \t// \tthrottledPosition = throttledPosition + direction;\n    // \t// \tthis.processEncoder(throttledPosition, direction, true);\n    // \t// \tthis.log(direction, 'position:', throttledPosition, this.state.spinPosition === position?'(synced)':'(throttled)');\n    // \t// }\n    // }\n    // else {\n    // \tthis.log(direction, 'position:', position);\n    // \tthis.processEncoder(position, direction, false);\n    // }\n    //\n    // this.setState({\n    // \tdirection\n    // });\n    this.processEncoder(position, direction, false);\n  }\n};\n\nSpin.prototype.processEncoder = function (position, direction, throttled) {\n  var changes = {};\n  this.cancelHoldEvents();\n\n  if (direction !== this.state.spinDirection) {\n    changes.spinDirection = direction;\n  }\n\n  changes.spinPosition = position;\n  changes.spinPreviousTime = this.state.spinTime;\n  changes.spinTime = new Date().getTime();\n  this.setState(changes);\n  this.emit('spin', direction, position, throttled); // this.emit('update', changes);\n};\n\nSpin.prototype.processKnob = function (pushed) {\n  //this.log('KNOB', pushed);\n  var me = this;\n  var changes = {};\n  changes.knobPushed = pushed;\n  changes.knobReleased = !pushed;\n\n  if (pushed) {\n    changes.knobPushTime = new Date().getTime();\n    this.setState(changes);\n    clearTimeout(this._knobHoldTimer);\n    this._knobHoldTimer = setTimeout(function () {\n      me.log('knobHoldThreshold exceeded');\n      me.setState({\n        knobHold: true\n      });\n      me.emit('knob-hold');\n    }, this.state.knobHoldThreshold);\n  } else {\n    var wasHeld = this.state.knobHold;\n\n    if (wasHeld) {\n      changes.knobHold = false;\n      me.emit('knob-hold');\n      this.log('knob was held, cancelling presses');\n    }\n\n    changes.knobReleaseTime = new Date().getTime(); // changes.knobReleaseTime;\n    // changes.knobReleaseTime - this.state.knobPushTime;\n\n    clearTimeout(this._knobHoldTimer); // if (me.state.knobPushDuration > me.state.knobLongPressThreshold) {\n    // \tme.log('knobLongPressThreshold exceeded');\n    // \tme.emit('knob-longpress');\n    // }\n    // else {\n    // \tme.emit('knob-press');\n    // }\n\n    this.setState(changes);\n\n    if (wasHeld) {\n      this.emit('knob-longpress');\n    } else {\n      this.emit('knob-press');\n    }\n  }\n\n  this.emit('knob', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processButton = function (pushed) {\n  var me = this;\n  var changes = {};\n  changes.buttonPushed = pushed;\n  changes.buttonReleased = !pushed;\n\n  if (pushed) {\n    changes.buttonPushTime = new Date().getTime();\n    clearTimeout(this._buttonHoldTimer);\n    this._buttonHoldTimer = setTimeout(function () {\n      me.log('buttonHoldThreshold exceeded'); // me.setState({\n      // \tbuttonHold: true\n      // });\n\n      changes.buttonHold = true;\n      me.emit('button-hold');\n    }, this.state.buttonHoldThreshold);\n  } else {\n    var wasHeld = this.state.buttonHold;\n\n    if (wasHeld) {\n      changes.buttonHold = false;\n      this.log('button was held, cancelling presses');\n    }\n\n    changes.buttonReleaseTime = new Date().getTime();\n    changes.buttonPushDuration = changes.buttonReleaseTime - this.state.buttonPushTime;\n    clearTimeout(this._buttonHoldTimer); // if (me.state.buttonPushDuration > me.state.buttonLongPressThreshold) {\n    // \tme.log('buttonLongPressThreshold exceeded');\n    // \tme.emit('button-longpress');\n    // }\n    // else {\n    // \tme.emit('button-press');\n    // }\n  } //debugger;\n\n\n  this.setState(changes);\n\n  if (wasHeld) {\n    this.emit('button-longpress');\n  } else {\n    this.emit('button-press');\n  }\n\n  this.emit('button', pushed); // this.emit('update', changes);\n};\n\nSpin.prototype.processStatus = function (batteryVoltage, isCharging, isCharged, sleepTimer, inactivityTime, sleepEnabled) {\n  // round off batteryVoltage\n  batteryVoltage = Math.round(batteryVoltage * 10) / 10;\n  var first = this.state.batteryVoltage === 0;\n  var changes = {};\n  var hasChanges = false;\n\n  if (this.state.sleepTimer !== sleepTimer) {\n    this.state.sleepTimer = changes.sleepTimer = sleepTimer;\n    hasChanges = true;\n  }\n\n  if (this.state.inactivityTime !== inactivityTime) {\n    this.state.inactivityTime = changes.inactivityTime = inactivityTime;\n  }\n\n  if (this.state.sleepEnabled !== sleepEnabled) {\n    this.state.sleepEnabled = changes.sleepEnabled = sleepEnabled;\n    hasChanges = true;\n  }\n\n  if (this.state.isCharged !== isCharged) {\n    this.state.isCharged = isCharged;\n    changes.isCharged = isCharged;\n    if (!first) this.emit('charged', isCharged);\n  }\n\n  if (this.state.batteryVoltage !== batteryVoltage) {\n    hasChanges = true;\n    this.state.batteryVoltage = changes.batteryVoltage = batteryVoltage;\n    this.state.batteryPercent = changes.batteryPercent = isCharging ? 1 : Math.min(batteryVoltage / 4.2, 1);\n\n    if (!first) {\n      // dont emit event on first reception\n      this.emit('battery', batteryVoltage, changes.batteryPercent);\n    }\n\n    if (this.state.isCharging !== isCharging) {\n      this.state.isCharging = isCharging;\n      changes.isCharging = isCharging;\n      if (!first) this.emit('charging', isCharging);\n    }\n  } // if (hasChanges) this.emit('update', changes);\n\n};\n\nSpin.prototype.processSleep = function (status, millis) {\n  switch (status) {\n    case 0:\n      this.emit('wake');\n      break;\n\n    case 1:\n      this.emit('sleep-warning', millis);\n      break;\n\n    case 2:\n      this._sleeping();\n\n      break;\n  }\n};\n\nSpin.prototype.sendCommand = function () {\n  var args = Array.prototype.slice.call(arguments);\n  this.transport.sendCommand(this, args); // if (this.usbDevice) {\n  // \tusb.sendCommand.apply(usb, args);\n  // }\n  // else {\n  // \ttcp.sendCommand.apply(tcp, args);\n  // } //this.id, 'FLASH', color.join(',') + ',' + repeat);\n};\n\nSpin.prototype.flash = function (color) {\n  this.sendCommand(this.id, 'FLASH', color); //color.join(','));\n  // if (this.bleDevice) this.bleDevice.flash(color);\n  // else {\n  // \tcolor.push(1);\n  // \tthis.sendCommand(this.id, 'FLASH', color.join(','));\n  // }\n};\n\nSpin.prototype.quickFlash = function (color, repeat) {\n  if (!repeat) repeat = 1;\n  if (this.bleDevice) this.bleDevice.quickFlash(color, repeat);else this.sendCommand(this.id, 'QUICKFLASH', color.join(',') + ',' + repeat);\n}; // Spin.prototype.quickFlashSingle = function (color, index) {\n// \tif (!index) index = 0;\n// \tindex = parseInt(index);\n// \tthis.sendCommand(this.id, 'QUICKFLASHONE', color.join(',') + ',' + index);\n// };\n\n\nSpin.prototype.lightsOn = function (color) {\n  if (this.bleDevice) this.bleDevice.lights(color);else this.sendCommand(this.id, 'LIGHTSON', color);\n};\n\nSpin.prototype.lightsOff = function () {\n  if (this.bleDevice) this.bleDevice.lights([0, 0, 0]);else this.sendCommand(this.id, 'LIGHTSOFF');\n};\n\nSpin.prototype.setThrottle = function (throttle) {\n  this.setState({\n    throttle: 0\n  });\n  if (!this.bleDevice) this.sendCommand(this.id, 'THROTTLE', throttle);\n};\n\nSpin.prototype.setBrightness = function (brightness) {\n  if (this.bleDevice) this.bleDevice.setBrightness(brightness);else this.sendCommand(this.id, 'BRIGHTNESS', brightness);\n};\n\nSpin.prototype.setName = function (name) {\n  if (this.bleDevice) this.bleDevice.setName(name);\n}; // Spin.prototype.setRotateColors = function (mode, colorLeft, colorRight) {\n// \tthis.sendCommand(this.id, 'ROTATECOLORS', colorLeft.concat(colorRight));\n// };\n\n\nSpin.prototype.rotate = function (direction, mode, color1, color2) {\n  if (!mode) mode = 0;\n  this.log('rotate', direction, mode);\n  if (this.bleDevice) this.bleDevice.rotate(mode, direction, color1, color2);else this.sendCommand(this.id, 'ROTATE', [mode, direction]);\n}; // Spin.prototype.setScaleColors = function (mode, colorLow, colorHigh, colorPoint) {\n// \tthis.sendCommand(this.id, 'SCALECOLORS', colorLow.concat(colorHigh).concat(colorPoint));\n// };\n\n\nSpin.prototype.scale = function (percent, mode, color1, color2, color3) {\n  if (this.bleDevice) this.bleDevice.scale(mode, percent, color1, color2, color3);else this.sendCommand(this.id, 'SCALAR', [mode, percent]);\n};\n\nSpin.prototype.sleep = function () {\n  if (this.bleDevice) this.bleDevice.sleep();\n  this.sendCommand(this.id, 'SLEEP');\n};\n\nSpin.prototype.delaySleep = function () {\n  if (this.bleDevice) this.bleDevice.delaySleep();else this.sendCommand(this.id, 'DELAYSLEEP');\n}; // Spin.prototype.setSleepEnabled = function (enabled) {\n// \tif (enabled) this.sendCommand(this.id, 'ENABLESLEEP');\n// \telse this.sendCommand(this.id, 'DISABLESLEEP');\n// };\n// Spin.prototype.enableSleep = function () {\n// \ttcp.sendCommand(this.id, 'ENABLESLEEP');\n// };\n// Spin.prototype.disableSleep = function () {\n// \ttcp.sendCommand(this.id, 'DISABLESLEEP');\n// };\n\n\nSpin.prototype.setKnobHoldThreshold = function (th) {\n  this.changeSettings({\n    knobHoldThreshold: th\n  });\n};\n\nSpin.prototype.setButtonHoldThreshold = function (th) {\n  this.changeSettings({\n    buttonHoldThreshold: th\n  });\n};\n\nSpin.prototype.setSleepTimer = function (minutes) {\n  if (this.bleDevice) this.bleDevice.setSleepTimer(minutes);else {\n    var ms = minutes * 60 * 1000;\n    this.sendCommand(this.id, 'SLEEPTIMER', ms);\n  }\n};\n\nSpin.prototype.destroy = function () {\n  this.disconnect();\n  this.log('destroying');\n\n  this._removeEvents();\n\n  delete this.state;\n};\n\nSpin.debug = function (q) {\n  plugin.logger.quiet(!q);\n};\n\nSpin.spinIds; // Spin.startServices = function () {\n// \tudp.startService();\n// \ttcp.startService();\n// };\n//\n// Spin.scan = function () {\n// \tSpin.startServices();\n//\n// \tvar _id;\n// \tvar callback;\n// \tif (arguments.length === 2) {\n// \t\tif (arguments[0] === null) {\n// \t\t\tlog('scanning');\n// \t\t}\n// \t\telse {\n// \t\t\tlog('scanning for ' + arguments[0]);\n// \t\t}\n// \t\tcallback = arguments[1];\n// \t}\n// \telse {\n// \t\tcallback = arguments[0];\n// \t\tlog('scanning');\n// \t}\n//\n// \t// var found = {};\n//\n// \tvar stop = function () {\n// \t\tudp.removeListener('ping', scanPing);\n// \t\tlog('stopped scanning');\n// \t};\n//\n// \tvar rescan = function () {\n// \t\t// found = {};\n// \t\tSpin.scan(callback);\n// \t};\n//\n// \tvar scanPing = function (pingNumber, ip, id, port, protocol, version, name, lastModified) {\n// \t\tif (!udp.isConnecting(id)) {\n//\n// \t\t\tif (!_id || _id === id) {\n// \t\t\t\t// if (found[id]) {\n// \t\t\t\t// \tlog('previously found', id);\n// \t\t\t\t// }\n// \t\t\t\t// else {\n// \t\t\t\t// \tfound[id] = true;\n//\n// \t\t\t\tcallback({\n// \t\t\t\t\tip: ip,\n// \t\t\t\t\tid: id,\n// \t\t\t\t\tport: port\n// \t\t\t\t}, stop, rescan);\n//\n// \t\t\t\t//}\n// \t\t\t}\n//\n// \t\t}\n// \t\telse log('connectAll isConnecting', id);\n// \t};\n//\n// \tudp.addListener('ping', scanPing);\n// };\n//\n// Spin.connectAll = function (callback) {\n// \tSpin.connectWifi(callback);\n// \t// Spin.connectUSB(callback);\n// \tSpin.connectBLE(callback);\n// };\n//\n// Spin.connectWifi = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tlog('connectAll found', device);\n// \t\tvar spin = Spin.create(device);\n// \t\tspin.once('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n// \t\tspin.connect();\n// \t});\n// };\n//\n// Spin.connectOne = function (callback) {\n// \tSpin.scan(function (device, done, rescan) {\n// \t\tdone();\n// \t\tlog('connectOne found', device);\n//\n// \t\tvar spin = Spin.create(device);\n//\n// \t\tspin.on('disconnect', function () {\n// \t\t\tlog('scan disconnect');\n// \t\t\trescan();\n// \t\t});\n//\n// \t\tcallback(spin);\n//\n// \t\tspin.connect();\n// \t});\n//\n// \t// Spin.connectTo(null, callback);\n// };\n//\n\nSpin.create = function (device, transport) {\n  if (device.id in spinIds) {\n    log('device exists', device);\n    spinIds[device.id].destroy();\n    delete spinIds[device.id];\n    var spin = new Spin(device, transport);\n    return spinIds[device.id];\n  } else {\n    log('creating new device', device, transport);\n    return new Spin(device, transport);\n  }\n}; //\n// Spin.connectTo = function (id, callback) {\n// \tSpin.scan(id, function (device, done, rescan) {\n// \t\tif (!id || device.id === id) {\n// \t\t\tdone();\n//\n// \t\t\tlog('connectTo found', device);\n//\n// \t\t\tvar spin = Spin.create(device);\n//\n// \t\t\tspin.on('disconnect', function () {\n// \t\t\t\tlog('scan disconnect');\n// \t\t\t\trescan();\n// \t\t\t});\n//\n// \t\t\tcallback(spin);\n//\n// \t\t\tspin.connect();\n// \t\t}\n// \t});\n// };\n//\n// Spin.connectUSBDevice = function (devicePath, callback) {\n// \tif (devicePath in usb.ids) {\n// \t\tlog(devicePath,'already exists');\n// \t\tusb.open(devicePath);\n// \t\treturn false;\n// \t}\n// \tlog('connecting usb', devicePath);\n//\n// \tvar spin = Spin.create({\n// \t\tid: devicePath,\n// \t\tusbDevice: devicePath\n// \t});\n//\n// \tspin.on('connect', function () {\n// \t\tlog('usb connect');\n// \t\tcallback(spin);\n// \t});\n//\n// \tspin.on('disconnect', function () {\n// \t\tlog('usb disconnect');\n// \t});\n//\n// \tspin.connect();\n// \treturn true;\n// };\n//\n// function startInterval(cb,t) {\n// \tcb();\n// \treturn setInterval(cb,t);\n// }\n//\n// Spin.connectUSB = function () {\n// \tvar devicePath, callback;\n// \tif (arguments.length === 1) {\n// \t\tcallback = arguments[0];\n// \t\tstartInterval(function() {\n// \t\t\tusb.getSpinUSBPorts(function(devicePaths) {\n// \t\t\t\tlog('usb', devicePaths);\n// \t\t\t\tdevicePaths.forEach(function(devicePath) {\n// \t\t\t\t\tSpin.connectUSBDevice(devicePath, callback);\n// \t\t\t\t});\n// \t\t\t});\n// \t\t},5000);\n// \t}\n// \telse if (arguments.length === 2) {\n// \t\tdevicePath = arguments[0];\n// \t\tcallback = arguments[1];\n// \t\tSpin.connectUSBDevice(devicePath, callback);\n// \t}\n// };\n//\n// Spin.connectBLE = function() {\n// \tif (typeof ble==='undefined') return;\n// \tvar deviceId, callback;\n//\n// \tif (arguments.length===2) {\n// \t\tdeviceId = arguments[0];\n// \t\tcallback = arguments[1];\n// \t}\n// \telse callback = arguments[0];\n//\n// \tble.on('discover', function(peripheral) {\n// \t\tvar id = peripheral.id;\n// \t\tif (deviceId) {\n// \t\t\tif (id !== deviceId) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t}\n//\n// \t\tif (deviceId) {\n// \t\t\tble.stopScan();\n// \t\t}\n//\n// \t\tif (id in ble.ids) {\n// \t\t\tlog('ble already exists',id);\n// \t\t\t//ble.connect(devicePath);\n// \t\t\treturn false;\n// \t\t}\n//\n// \t\tlog('connecting ble', id);\n//\n// \t\tvar spin = Spin.create({\n// \t\t\tid: id,\n// \t\t\tblePeripheral: peripheral\n// \t\t});\n//\n// \t\tspin.on('connect', function() {\n// \t\t\tcallback(spin);\n// \t\t});\n//\n// \t\t// spin.on('disconnect', function() {\n// \t\t// \t//callback(spin);\n// \t\t// \tconsole.log('disconnect ble??');\n// \t\t// });\n//\n// \t\tble.connectSpin(spin);\n//\n// \t});\n//\n// \tble.scan();\n// };\n\n\nmodule.exports = Spin;","// var chalk = require('chalk');\nvar chalk = {\n  green: console.log,\n  yellow: console.log,\n  cyan: console.log,\n  magenta: console.log\n};\n\nvar _quiet = process.env.NODE_ENV !== 'dev';\n\nvar logger = {\n  quiet: function quiet(q) {\n    _quiet = q;\n  },\n  log: function log() {\n    if (_quiet) return;\n    var args = Array.prototype.slice.call(arguments);\n    args = args.map(function (arg, index) {\n      if (index === 0 && typeof arg === 'object' && arg.loggerName) {\n        return chalk.green(arg.loggerName);\n      }\n\n      if (typeof arg === 'string') {\n        if (index >= 2 && typeof args[0] === 'object' && args[0].loggerName && typeof args[1] === 'string') return arg;\n        return chalk.cyan(arg);\n      }\n\n      if (typeof arg === 'number') return chalk.magenta(arg);\n      if (arg === null) return chalk.yellow('null');\n      if (typeof arg === 'undefined') return chalk.yellow('undefined');\n      return arg;\n    });\n    console.log.apply(null, args);\n  },\n  create: function create(name, colors) {\n    return function (n) {\n      return function log() {\n        var args = Array.prototype.slice.call(arguments);\n        args.unshift({\n          loggerName: n\n        });\n        logger.log.apply(logger, args);\n      };\n    }(name);\n  }\n};\nmodule.exports = logger;","var EventEmitter = require('events');\n\nvar createLogger = require('./logger').create;\n\nfunction Store(name) {\n  this.constructor();\n  this.log = createLogger(name);\n  this.log('created');\n  this.ids = {};\n}\n\nStore.prototype = new EventEmitter();\nStore.prototype.constructor = EventEmitter;\n\nStore.prototype.destroy = function (id) {\n  this.log('destroying', id);\n  this[id].removeAllListeners('created');\n  this[id].removeAllListeners('update');\n  delete this.ids[id];\n  delete this[id];\n  this.emit('destroyed', id);\n};\n\nStore.prototype.set = function (id, data) {\n  // console.log('set', id, data);\n  if (!id) {\n    console.log('no set id', data);\n    return;\n  }\n\n  var changes = {};\n  var hasChanges = false;\n  var created = false;\n\n  if (!this[id]) {\n    this[id] = data;\n    this.ids[id] = true;\n    this.emit('created', id, data);\n    this.log('created', id, data);\n    hasChanges = true;\n    created = true;\n    changes = data;\n  } else {\n    var s = this[id];\n\n    for (var i in data) {\n      if (s[i] !== data[i]) {\n        hasChanges = true;\n        changes[i] = s[i] = data[i];\n      }\n    }\n  }\n\n  if (hasChanges) {\n    if (!created) {// this.log(id + ' update', changes);\n      // console.log(id + ' update', changes);\n    }\n\n    this.emit('update', id, changes);\n    return changes;\n  } else {\n    return null;\n  }\n};\n\nmodule.exports = Store;","function isColor(c) {\n  return c instanceof Color;\n}\n\nvar colors = require('./colors');\n\nvar Color = function Color() {\n  if (arguments.length === 1 && typeof arguments[0] === 'number' && arguments[0] >= 0 && arguments[0] <= 255) {\n    return this.value = colors.rgb(arguments[0], arguments[0], arguments[0]);\n  }\n\n  if (isColor(arguments[0])) this.value = arguments[0].value;else this.value = arguments.length > 0 ? colors.rgb.apply(null, Array.from(arguments)) : '#000';\n};\n\nColor.prototype = {\n  toString: function toString() {\n    return this.value;\n  },\n  // setters\n\n  /**\n   * Sets the transparency of a color\n   *\n   * @method alpha\n   * @memberof Color\n   * @param {Number} alpha transparency level between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').alpha(0.5);  // returns {value:\"rgba(255,0,0,0.5)\"}\n   *\n   */\n  alpha: function alpha(v) {\n    return new Color(colors.alpha(this.value, v));\n  },\n\n  /**\n   * Increases the \"lightness\" of a color value\n   *\n   * @method lighten\n   * @memberof Color\n   * @param {Number} lightenBy amount to lighten between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').lighten(0.5); // returns {value:\"#FF8080\"}\n   *\n   */\n  lighten: function lighten(v) {\n    return new Color(colors.lighten(this.value, v));\n  },\n\n  /**\n   * Decreases the \"lightness\" of a color value\n   *\n   * @method darken\n   * @memberof Color\n   * @param {Number} darkenBy amount to darken between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').darken(0.5); // returns {value:\"#800000\"}\n   *\n   */\n  darken: function darken(v) {\n    return new Color(colors.darken(this.value, v));\n  },\n\n  /**\n   * Increases the \"saturation\" of a color value\n   *\n   * @method saturate\n   * @memberof Color\n   * @param {Number} saturateBy amount to saturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(125,0,0)').saturate(0.2); // returns {value:\"#7D0000\"}\n   *\n   */\n  saturate: function saturate(v) {\n    return new Color(colors.saturate(this.value, v));\n  },\n\n  /**\n   * Decreases the \"saturation\" of a color value\n   *\n   * @method desaturate\n   * @memberof Color\n   * @param {Number} desaturateBy amount to desaturate between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(125,0,0).desaturate(0.2); // returns {value:\"#710C0C\"}\n   *\n   */\n  desaturate: function desaturate(v) {\n    return new Color(colors.desaturate(this.value, v));\n  },\n\n  /**\n   * Modify the hue, lightness, and saturation of a color\n   *\n   * @method shiftHSL\n   * @memberof Color\n   * @param {Number} hue amount to change the hue by, between 0 and 1\n   * @param {Number} saturation amount to change the hue by, between 0 and 1\n   * @param {Number} lightness amount to change the hue by, between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHSL(0.1,0.2,0.3); // returns {value:\"#94FF4D\"}\n   *\n   */\n  shiftHSL: function shiftHSL(h, s, l, a) {\n    var c = new Color(colors.shiftHSL(this.value, h, s, l));\n    if (a) c = c.alpha(a);\n    return c;\n  },\n\n  /**\n   * Shifts the \"hue\" of a color value by a given percentage\n   *\n   * @method shiftHue\n   * @memberof Color\n   * @param {Number} hueShift amount to modify the hue by between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(255,255,0).shiftHue(0.25); // returns {value:\"#00FF7F\"}\n   *\n   */\n  shiftHue: function shiftHue(v) {\n    return new Color(colors.shiftHue(this.value, v));\n  },\n\n  /**\n   * Shifts the hue of a color closer to another color by a given percentage\n   *\n   * @method combine\n   * @memberof Color\n   * @param {Object} targetColor color string, array, or object\n   * @param {Number} [amount=0.5] how close to the target color between 0 and 1 (0.5 is half-way between)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color(0).combine('#fff'); // returns {value:\"#808080\"}\n   * new Color(255,0,0).combine('#00f',0.7); // returns {value:\"#4D00B3\"}\n   *\n   */\n  combine: function combine(t, v) {\n    if (isColor(t)) t = t.value;\n    var c = colors.combine(this.value, t, v);\n    return new Color(c);\n  },\n\n  /**\n   * Shifts the \"hue\" of a color closer to another color by a given percentage\n   *\n   * @method tint\n   * @memberof Color\n   * @param {String} targetColor color string or array\n   * @param {Number} amount amount to shift the hue toward the target color between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').tint('#00f',0.5); // returns {value:\"#F0F\"}\n   * new Color('rgb(0,0,100)').tint('rgb(100,0,0)',0.1); // returns {value:\"#140064\"}\n   *\n   */\n  tint: function tint(t, v) {\n    if (isColor(t)) t = t.value;\n    return new Color(colors.tint(this.value, t, v));\n  },\n\n  /**\n   * Set the \"hue\" of a color\n   *\n   * @method hue\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hue(2/3); // returns {value:\"#00F\"}\n   * new Color('#0f0').hue(1); // returns {value:\"#F00\"}\n   * new Color('#00f').hue(1/3); // returns {value:\"#0F0\"}\n   *\n   */\n  hue: function hue(v) {\n    return new Color(colors.hue(this.value, v));\n  },\n\n  /**\n   * Set the \"saturation\" of a color\n   *\n   * @method saturation\n   * @memberof Color\n   * @param {Number} saturation saturation value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,50,50)').saturation(0); // returns {value:\"#4B4B4B\")\n   * new Color('rgb(50,0,0)').saturation(0.5);  // returns {value:\"#260C0C\")\n   * new Color('rgb(50,50,100)').saturation(1); // returns {value:\"#000096\")\n   *\n   */\n  saturation: function saturation(v) {\n    return new Color(colors.saturation(this.value, v));\n  },\n\n  /**\n   * Set the lightness of a color, how close to white or black the color will be\n   *\n   * @method lightness\n   * @memberof Color\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').lightness(0); // returns {value:\"#000\"}\n   * new Color('rgb(255,0,0)').lightness(0.5); // returns {value:\"#F00\"}\n   * new Color('rgb(255,0,0)').lightness(1); // returns {value:\"#FFF\"}\n   *\n   */\n  lightness: function lightness(v) {\n    return new Color(colors.lightness(this.value, v));\n  },\n\n  /**\n   * Inverts the color\n   *\n   * @method invert\n   * @memberof Color\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').invert(1); // returns {value:\"#0FF\"}  // cyan\n   * new Color('#fff').invert();  // returns {value:\"#000\"}   // black\n   *\n   */\n  invert: function invert() {\n    return new Color(colors.invert(this.value));\n  },\n\n  /**\n   * Modify the red, green, or blue component of a color\n   *\n   * @method rgb\n   * @memberof Color\n   * @param {Number} red red component (0-255)\n   * @param {Number} green green component (0-255)\n   * @param {Number} blue blue component (0-255)\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').rgb(null,null,255); // returns {value:\"#F0F\"}\n   * new Color('#0f0').rgb(null,255,null); // returns {value:\"#0F0\"}\n   * new Color('#ff0').rgb(null,null,255); // returns {value:\"#FFF\"}\n   * new Color('#fff').rgb(100);           // returns {value:\"#64FFFF\"}\n   *\n   */\n  rgb: function rgb() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setRGB.apply(null, a));\n  },\n\n  /**\n   * Set the hue, saturation, or lightness of a color and return the new color\n   *\n   * @method hsl\n   * @memberof Color\n   * @param {Number} hue hue value between 0 and 1\n   * @param {Number} saturation saturation value between 0 and 1\n   * @param {Number} lightness lightness value between 0 and 1\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#f00').hsl(null,0.5,0.5); // returns {value:\"#BF4040\"}\n   *\n   */\n  hsl: function hsl() {\n    var a = Array.from(arguments);\n    a.unshift(this.value);\n    return new Color(colors.setHSL.apply(null, a));\n  },\n\n  /**\n   * Set the red component of a color\n   *\n   * @method red\n   * @memberof Color\n   * @param {Number} red red component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,255)').red(255);  // returns {value:\"#F0F\"}\n   *\n   */\n  red: function red(r) {\n    return this.rgb(r);\n  },\n\n  /**\n   * Set the green component of a color\n   *\n   * @method green\n   * @memberof Color\n   * @param {Number} green green component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('rgb(255,0,0)').green(255);  // returns {value:\"#FF0\"}\n   *\n   */\n  green: function green(g) {\n    return this.rgb(null, g);\n  },\n\n  /**\n   * Set the blue component of a color\n   *\n   * @method blue\n   * @memberof Color\n   * @param {Number} blue blue component 0-255\n   * @return {Color} new Color() instance\n   * @instance\n   *\n   * @example\n   * new Color('#FF0').blue(255);  // returns {value:\"#FFF\"}\n   *\n   */\n  blue: function blue(b) {\n    return this.rgb(null, null, b);\n  },\n  // getters\n\n  /**\n   * Returns the transparency of a color\n   *\n   * @method getAlpha\n   * @memberof Color\n   * @return {Number} alpha transparency level between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getAlpha(); // returns 0\n   * new Color('rgba(255,0,0,0.5)').getAlpha(); // returns 0.5\n   *\n   */\n  getAlpha: function getAlpha() {\n    return colors.getAlpha(this.value);\n  },\n\n  /**\n   * Returns the computed red, green, blue, and alpha values as an array\n   *\n   * @method getRGB\n   * @memberof Color\n   * @return {Number[]} rgb array\n   * @instance\n   *\n   * @example\n   * new Color('#F00').getRGB(); // returns [255,0,0]\n   * new Color('rgba(255,0,0,0.5)').getRGB()(); // returns [255,0,0,0.5]\n   *\n   */\n  getRGB: function getRGB() {\n    return colors.getRGB(this.value);\n  },\n\n  /**\n   * Returns the hexidecimal value of the color\n   *\n   * @method getHex\n   * @memberof Color\n   * @param {Boolean} full return the full 6 character hexidecimal value (eg. do not shorten #FFFFFF to #FFF)\n   * @return {String} hex color value\n   * @instance\n   *\n   * @example\n   * new Color('rgba(255,0,0,0.5)').getHex(); // returns \"#F0F\"\n   * new Color('rgba(255,0,0,0.5)').getHex(true); // returns \"#FF0000\"\n   *\n   */\n  getHex: function getHex(full) {\n    return colors.getHex(this.value, full);\n  },\n\n  /**\n   * Returns the red component of a color string\n   *\n   * @method getRed\n   * @memberof Color\n   * @return {Number} red component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getRed(); // returns 255\n   *\n   */\n  getRed: function getRed() {\n    return this.getRGB()[0];\n  },\n\n  /**\n   * Returns the green component of a color string\n   *\n   * @method getGreen\n   * @memberof Color\n   * @return {Number} green component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getGreen(); // returns 255\n   *\n   */\n  getGreen: function getGreen() {\n    return this.getRGB()[1];\n  },\n\n  /**\n   * Returns the blue component of a color string\n   *\n   * @method getBlue\n   * @memberof Color\n   * @return {Number} blue component 0-255\n   * @instance\n   *\n   * @example\n   * new Color('#fff').getBlue(); // returns 255\n   *\n   */\n  getBlue: function getBlue() {\n    return this.getRGB()[2];\n  },\n\n  /**\n   * Returns an [h,s,l] array from color string\n   *\n   * @method getHSL\n   * @memberof Color\n   * @return {Number[]} hsl array of [hue,saturation,lightness]\n   * @instance\n   *\n   * @example\n   * new Color('#f00').getHSL(); // returns [0,1,0.5]\n   *\n   */\n  getHSL: function getHSL() {\n    return colors.getHSL(this.value);\n  },\n\n  /**\n   * Return the \"hue\" of a color\n   *\n   * @method getHue\n   * @memberof Color\n   * @return {Number} hue hue value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('#a1b2c1').getHue(); // returns {value:\"0.578125\"}\n   * new Color('#f00').getHue(); // returns 0\n   * new Color('#0f0').getHue(); // returns 0.3333333333333333\n   * new Color('#00f').getHue(); // returns 0.6666666666666666\n   *\n   */\n  getHue: function getHue() {\n    return this.getHSL()[0];\n  },\n\n  /**\n   * Return the \"saturation\" of a color\n   *\n   * @method getSaturation\n   * @memberof Color\n   * @return {Number} saturation saturation value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(100,100,100)').getSaturation(); // returns 0\n   * new Color('rgb(100,50,100)').getSaturation();  // returns 0.8333333333333334\n   * new Color('rgb(100,0,100)').getSaturation();   // returns 1\n   *\n   */\n  getSaturation: function getSaturation() {\n    return this.getHSL()[1];\n  },\n\n  /**\n   * Return the lightness of a color (how close to white or black the color is)\n   *\n   * @method getLightness\n   * @memberof Color\n   * @return {Number} lightness lightness value between 0 and 1\n   * @instance\n   *\n   * @example\n   * new Color('rgb(0,0,0)').getLightness();       // returns 0\n   * new Color('rgb(100,50,100)').getLightness();  // returns 0.29411764705882354\n   * new Color('rgb(255,255,255)').getLightness(); // returns 1\n   *\n   */\n  getLightness: function getLightness() {\n    return this.getHSL()[2];\n  }\n};\nColor.prototype.rgba = Color.prototype.rgb;\nColor.prototype.hsla = Color.prototype.hsl;\nmodule.exports = Color;","import React, {Component} from 'react';\nimport Speak from 'jaxcore-speak';\nimport {MonauralScope} from 'jaxcore-client';\n\nglobal.Speak = Speak;\n\nSpeak.setWorkers({\n\t\n\t// NOTE:\n\t\n\t// using the \"all languages\" worker adds 1MB to the size of the build\n\t// 'espeak': 'webworkers/espeak-all-worker.js',\n\t\n\t// if you only need one language (english, french, spanish) then only load that worker\n\t// 'espeak': 'webworkers/espeak-en-worker.js',\n\t\n\t// the following format is mainly just for this demo for testing the individual language builds\n\t'espeak': [\n\t\t{\n\t\t\tlanguage: 'en',\n\t\t\tpath: 'webworkers/espeak-en-worker.js'\n\t\t},\n\t\t{\n\t\t\tlanguage: 'es',\n\t\t\tpath: 'webworkers/espeak-es-worker.js'\n\t\t},\n\t\t{\n\t\t\tlanguage: 'fr',\n\t\t\tpath: 'webworkers/espeak-fr-worker.js'\n\t\t},\n\t],\n\t\n\t'sam': 'webworkers/sam-worker.js'\n});\n\nclass MultipleSpeakersApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.redRef = React.createRef();\n\t\tthis.yellowRef = React.createRef();\n\t\tthis.greenRef = React.createRef();\n\t\tthis.cyanRef = React.createRef();\n\t\tthis.blueRef = React.createRef();\n\t\tthis.purpleRef = React.createRef();\n\t\t\n\t\tthis.state = {\n\t\t\ttext: '',\n\t\t\tactiveSpeakers: {\n\t\t\t\tred: false,\n\t\t\t\tyellow: false,\n\t\t\t\tgreen: false,\n\t\t\t\tcyan: false,\n\t\t\t\tblue: false,\n\t\t\t\tpurple: false\n\t\t\t}\n\t\t};\n\t\t\n\t\tglobal.app = this;\n\t}\n\t\n\tcomponentDidMount() {\n\t\tconst colors = {\n\t\t\tred: '255,0,0',\n\t\t\tyellow: '255,255,0',\n\t\t\tgreen: '0,255,0',\n\t\t\tcyan: '0,255,255',\n\t\t\tblue: '0,0,255',\n\t\t\tpurple: '255,0,255',\n\t\t};\n\t\t\n\t\tconst getTheme = function (color) {\n\t\t\treturn {\n\t\t\t\tstrokeColor: 'rgb(' + colors[color] + ')',\n\t\t\t\tclipColor: 'black',\n\t\t\t\tfillColor: 'rgba(' + colors[color] + ',0.2)',\n\t\t\t\tdotColor: 'rgb(' + colors[color] + ')',\n\t\t\t\tbgOffColor: '#fafafa',\n\t\t\t\tbgOnColor: '#eee'\n\t\t\t}\n\t\t};\n\t\t\n\t\tthis.scopes = {\n\t\t\tred: new MonauralScope(this.redRef.current, getTheme('red')),\n\t\t\tyellow: new MonauralScope(this.yellowRef.current, getTheme('yellow')),\n\t\t\tgreen: new MonauralScope(this.greenRef.current, getTheme('green')),\n\t\t\tcyan: new MonauralScope(this.cyanRef.current, getTheme('cyan')),\n\t\t\tblue: new MonauralScope(this.blueRef.current, getTheme('blue')),\n\t\t\tpurple: new MonauralScope(this.purpleRef.current, getTheme('purple'))\n\t\t};\n\t\t\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<div id=\"scopes\">\n\t\t\t\t\t<div id=\"red\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.red?' active':'')}>Jack</div>\n\t\t\t\t\t\t<canvas ref={this.redRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"yellow\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.yellow?' active':'')}>Roy</div>\n\t\t\t\t\t\t<canvas ref={this.yellowRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"green\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.green?' active':'')}>Leon</div>\n\t\t\t\t\t\t<canvas ref={this.greenRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"cyan\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.cyan?' active':'')}>Robo</div>\n\t\t\t\t\t\t<canvas ref={this.cyanRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"blue\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.blue?' active':'')}>Zhora</div>\n\t\t\t\t\t\t<canvas ref={this.blueRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"purple\">\n\t\t\t\t\t\t<div className={\"speakername\"+(this.state.activeSpeakers.purple?' active':'')}>Cylon</div>\n\t\t\t\t\t\t<canvas ref={this.purpleRef} width=\"100\" height=\"100\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div id=\"controls\">\n\t\t\t\t\t<button onClick={e => this.introduceYourselves()}>Introduce Yourselves</button>\n\t\t\t\t\t<button onClick={e => this.clearQueue()}>Stop</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tclearQueue() {\n\t\tSpeak.clearQueue();\n\t}\n\t\n\tsetActiveSpeaker(color, active) {\n\t\tconst {activeSpeakers} = this.state;\n\t\tactiveSpeakers[color] = active;\n\t\tthis.setState(activeSpeakers);\n\t}\n\t\n\tintroduceYourselves() {\n\t\t\n\t\tSpeak.once('finish', () => {\n\t\t\tconsole.log('queue finished');\n\t\t});\n\t\t\n\t\tSpeak.queue({\n\t\t\ttext: \"hello, i am jack\",\n\t\t\tscope: this.scopes.red,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Jack',\n\t\t\t\tlanguage: 'en',\n\t\t\t\tdelay: 1\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Jack saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('red', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Jack finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('red', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"this is roy, at your service\",\n\t\t\tscope: this.scopes.yellow,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Roy',\n\t\t\t\tlanguage: 'en',\n\t\t\t\tdelay: 1\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Roy saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('yellow', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Roy finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('yellow', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"hola, mi nombre es leon\",\n\t\t\tscope: this.scopes.green,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Leon',\n\t\t\t\tlanguage: 'es'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Leon saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('green', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Leon finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('green', false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tSpeak.queue({\n\t\t\ttext: \"greetings, i am robo\",\n\t\t\tscope: this.scopes.cyan,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Robo'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Robo saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('cyan', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Robo finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('cyan', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"bonjour. je m'appelle zhora\",\n\t\t\tscope: this.scopes.blue,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Zhora',\n\t\t\t\tlanguage: 'fr'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Zhora saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('blue', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Zhora finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('blue', false);\n\t\t\t}\n\t\t});\n\n\t\tSpeak.queue({\n\t\t\ttext: \"we are the cylon\",\n\t\t\tscope: this.scopes.purple,\n\t\t\toptions: {\n\t\t\t\tprofile: 'Cylon',\n\t\t\t\tlanguage: 'en'\n\t\t\t},\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Cylon aying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('purple', true);\n\t\t\t},\n\t\t\tonStop: () => {\n\t\t\t\tconsole.log('Cylon finished saying: ', this.text);\n\t\t\t\tthis.setActiveSpeaker('purple', false);\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\t\n}\n\nexport default MultipleSpeakersApp;\n","var plugin = require('jaxcore-plugin'); // var log = plugin.createLogger('Spin Buffer');\n\n\nvar _instance = 0;\n\nfunction SpinBuffer(spin, config) {\n  this.log = plugin.createLogger('Spin Buffer ' + _instance++);\n  this.log('created buffer', spin.id);\n  this.delayTime = 0;\n  this.spinDelayed = false;\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n  this.spinDirection = 0;\n  this.lastSpinTime = 0;\n  if (!config) config = {};\n  this.defaultDelay = config.defaultDelay || 500;\n  this.staticTimeout = config.staticTimeout || 3000;\n  this.delayLength = this.defaultDelay;\n  this._onPushKnob = this.onPushKnob.bind(this);\n  spin.on('knob', this._onPushKnob);\n  var me = this;\n\n  this.destroy = function () {\n    spin.removeListener('knob', me._onPushKnob);\n  };\n}\n\nSpinBuffer.prototype = {};\n\nSpinBuffer.prototype.reset = function (forceStatic) {\n  this.staticBuffer = 0;\n  this.kineticBuffer = 0;\n\n  if (forceStatic) {\n    this.spinDirection = 0;\n  }\n};\n\nSpinBuffer.prototype.onPushKnob = function () {\n  this.log('reset');\n  this.reset();\n};\n\nSpinBuffer.prototype.spin = function (direction, kineticBuffer, staticBuffer) {\n  //if (!kineticBuffer) kineticBuffer = 0;\n  if (typeof staticBuffer === 'undefined') {\n    if (kineticBuffer) staticBuffer = kineticBuffer;else staticBuffer = 0;\n  }\n\n  kineticBuffer += 1;\n  staticBuffer += 1; // if (!kineticBuffer) kineticBuffer = 1;\n  // if (!staticBuffer) staticBuffer = kineticBuffer || 2;\n\n  var timeSinceLastSpin = new Date().getTime() - this.lastSpinTime;\n  this.lastSpinTime = new Date().getTime();\n\n  if (this.isDelayed()) {\n    this.reset();\n    return false;\n  }\n\n  var staticTimeoutExceeded = timeSinceLastSpin > this.staticTimeout; // after 3 sec reset static buffer\n\n  if (staticTimeoutExceeded) {\n    this.log('static timeout exceeded');\n    this.reset(true);\n  }\n\n  var directionChanged = direction !== this.spinDirection;\n\n  if (directionChanged) {\n    this.kineticBuffer = 0;\n    this.staticBuffer++;\n\n    if (this.staticBuffer >= staticBuffer) {\n      this.log('static buffer exeeded, spinDirection is now', direction);\n      this.spinDirection = direction;\n      this.reset();\n      return true;\n    } else {\n      this.log('static buffer:', this.staticBuffer, '-');\n      return false;\n    }\n  } else {\n    if (this.staticBuffer > 0) {\n      this.staticBuffer--;\n      this.log('static buffer:', this.staticBuffer, '+');\n      if (this.staticBuffer < 0) this.staticBuffer = 0;\n      return false;\n    }\n\n    this.kineticBuffer++;\n    this.staticBuffer = 0;\n    if (kineticBuffer > 0) this.log('kinetic buffer:', this.kineticBuffer, direction === 1 ? '+' : '-');\n\n    if (this.kineticBuffer >= kineticBuffer) {\n      if (kineticBuffer > 0) this.log('kinetic buffer exceeded');\n      this.reset();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nSpinBuffer.prototype.isDelayed = function () {\n  if (this.spinDelayed) {\n    var diff = new Date().getTime() - this.delayTime;\n    var d = diff > this.delayLength;\n\n    if (d) {\n      this.log('delay timed out', new Date().getTime() - this.delayTime);\n      this.delayLength = this.defaultDelay;\n      this.spinDelayed = false;\n      return false;\n    } else {\n      this.log('delaying for ' + (this.delayLength + ' ' + diff));\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\nSpinBuffer.prototype.delay = function (ms) {\n  this.delayLength = ms || this.defaultDelay;\n  this.log('delaying for ' + this.delayLength + 'ms');\n  this.delayTime = new Date().getTime();\n  this.spinDelayed = true;\n};\n\nSpinBuffer.prototype.cancelDelay = function () {\n  this.delayTime = 0;\n  this.spinDelayed = false;\n};\n\nmodule.exports = SpinBuffer;","var isArray = function isArray(o) {\n  return typeof o === 'object' && Object.prototype.toString.apply(o) === '[object Array]';\n};\n\nvar isString = function isString(o) {\n  return typeof o === 'string' || o instanceof String;\n};\n\nfunction alpha(color, a) {\n  if (typeof a === 'number' && a >= 0 && a <= 1) {\n    var c = getRGB(color);\n    return rgb(c[0], c[1], c[2], a);\n  }\n\n  return color;\n}\n\nfunction lighten(c, l) {\n  if (c.value) c = c.value;else if (typeof l === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, 0, l));\n}\n\nfunction darken(c, l) {\n  return lighten(c, -l);\n}\n\nfunction saturate(c, s) {\n  if (c.value) c = c.value;else if (typeof s === 'undefined') return c;\n  return rgb(shiftHSL(c, 0, s, 0));\n}\n\nfunction desaturate(c, s) {\n  return saturate(c, -s);\n}\n\nfunction hslval(x, y, r) {\n  if (r < 0) r += 1;\n  if (r > 1) r -= 1;\n  var c;\n  if (6 * r < 1) c = x + (y - x) * 6 * r;else if (2 * r < 1) c = y;else if (3 * r < 2) c = x + (y - x) * (2 / 3 - r) * 6;else c = x;\n  return c * 255;\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0],\n      s = hsl[1],\n      l = hsl[2],\n      r,\n      g,\n      b;\n\n  if (s === 0) {\n    r = g = b = l * 255;\n  } else {\n    var x, y;\n    if (l < 0.5) y = l * (1 + s);else y = l + s - l * s;\n    x = 2 * l - y;\n    r = hslval(x, y, h + 1 / 3);\n    g = hslval(x, y, h);\n    b = hslval(x, y, h - 1 / 3);\n  }\n\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  if (hsl.length === 4) return [r, g, b, hsl[3]];else return [r, g, b];\n}\n\nfunction hsl(h, s, l, a) {\n  var x = [h / 360, s / 100, l / 100];\n  var r = hsl2rgb(x).map(Math.round);\n  if (arguments.length === 4) r[3] = a;\n  return rgb(r);\n}\n\nfunction shiftHSL(c, h, s, l) {\n  if (typeof h === 'undefined') h = 0;\n  if (typeof s === 'undefined') s = 0;\n  if (typeof l === 'undefined') l = 0;\n  var o = getRGB(c);\n  var x = getHSL(o);\n  x[0] += h;\n  if (x[0] < 0) x[0] += 1;\n  if (x[0] > 1) x[0] -= 1;\n  x[1] *= 1 + s;\n  if (x[1] < 0) x[1] = 0;\n  if (x[1] > 1) x[1] = 1;\n  x[2] *= 1 + l;\n  if (x[2] < 0) x[2] = 0;\n  if (x[2] > 1) x[2] = 1;\n  var n = hsl2rgb(x);\n  if (o.length === 4) n[3] = o[3];\n  return n;\n}\n\nfunction shiftHue(c, h) {\n  if (typeof h === 'undefined') return c;\n  return rgb(shiftHSL(c, h, 0, 0));\n}\n\nfunction combine(sourceColor, targetColor, amount) {\n  amount = amount || 0.5;\n  var al = getAlpha(sourceColor);\n  var s = getRGB(sourceColor);\n  var t = getRGB(targetColor);\n  var r = Math.round((t[0] - s[0]) * amount);\n  var g = Math.round((t[1] - s[1]) * amount);\n  var b = Math.round((t[2] - s[2]) * amount);\n  return rgb(s[0] + r, s[1] + g, s[2] + b, al);\n}\n\nfunction tint(sourceColor, targetColor, amount) {\n  var sH = getHue(sourceColor);\n  var tH = getHue(targetColor);\n  var diff = tH - sH;\n  if (diff > 0 && diff > 0.5) diff -= 1;else if (diff < 0 && diff < -0.5) diff += 1;\n  var dH = diff * amount;\n  return rgb(shiftHSL(sourceColor, dH, null, null));\n}\n\nfunction hue(c, h) {\n  return setHSL(c, h);\n}\n\nfunction saturation(c, s) {\n  return setHSL(c, null, s);\n}\n\nfunction lightness(c, l) {\n  return setHSL(c, null, null, l);\n}\n\nfunction setHSL(c, h, s, l) {\n  var x = getHSL(c);\n  if (typeof h === 'undefined' || h === null) h = x[0];\n  if (typeof s === 'undefined' || s === null) s = x[1];\n  if (typeof l === 'undefined' || l === null) l = x[2];\n  if (x.length === 4) return rgb(hsl2rgb([h, s, l, x[3]]));else return rgb(hsl2rgb([h, s, l]));\n}\n\nfunction rgb() {\n  if (arguments.length === 1) {\n    var a = arguments[0];\n\n    if (typeof a === 'string') {\n      var r = getRGB(a);\n      if (isArray(r)) return rgb(r);else return getHex(r);\n    }\n\n    if (isArray(a) && a.length === 3) {\n      return getHex(a);\n    }\n\n    if (isArray(a) && a.length === 4) {\n      return 'rgba(' + Math.round(a[0]) + ',' + Math.round(a[1]) + ',' + Math.round(a[2]) + ',' + a[3] + ')';\n    }\n  } else if (arguments.length === 3) {\n    return getHex(Array.from(arguments));\n  } else if (arguments.length === 4) {\n    if (typeof arguments[3] === 'number' && arguments[3] > 0 && arguments[3] <= 1) {\n      return 'rgba(' + Math.round(arguments[0]) + ',' + Math.round(arguments[1]) + ',' + Math.round(arguments[2]) + ',' + arguments[3] + ')';\n    } else return getHex(Array.from(arguments));\n  }\n}\n\nfunction setRGB(c, r, g, b, a) {\n  c = getRGB(c);\n  if (typeof r === 'number') c[0] = r;\n  if (typeof g === 'number') c[1] = g;\n  if (typeof b === 'number') c[2] = b;\n  if (typeof a === 'number') c[3] = a;\n  return rgb(c);\n}\n\nfunction getAlpha(color) {\n  var x = getRGB(color);\n  if (x.length === 4) return x[3];\n  return 0;\n}\n\nfunction getRGB() {\n  if (isArray(arguments[0])) return arguments[0];\n\n  if (typeof arguments[0] === 'string') {\n    var c = arguments[0];\n\n    if (/^#/.test(c)) {\n      var h = c.substring(1);\n      if (/^[0-9a-f]{6}$/i.test(h)) return [parseInt(h.substring(0, 2), 16), parseInt(h.substring(2, 4), 16), parseInt(h.substring(4, 6), 16)];\n      if (/^[0-9a-f]{3}$/i.test(h)) return [parseInt(h[0] + h[0], 16), parseInt(h[1] + h[1], 16), parseInt(h[2] + h[2], 16)];\n      return [0, 0, 0];\n    }\n\n    var m;\n\n    if (m = c.match(/rgb\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3])];\n    }\n\n    if (m = c.match(/rgba\\((\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*), ?(\\d+.?\\d*)\\)/)) {\n      return [Number(m[1]), Number(m[2]), Number(m[3]), Number(m[4])];\n    } else {}\n  }\n}\n\nfunction getRed(c) {\n  return getRGB(c)[0];\n}\n\nfunction getGreen(c) {\n  return getRGB(c)[1];\n}\n\nfunction getBlue(c) {\n  return getRGB(c)[2];\n}\n\nfunction getHex(color, full) {\n  if (color) {\n    var c = getRGB(color);\n\n    if (c) {\n      var r = int2hex(Math.round(c[0]));\n      var g = int2hex(Math.round(c[1]));\n      var b = int2hex(Math.round(c[2]));\n      if (!full && r[0] === r[1] && g[0] === g[1] && b[0] === b[1]) return ('#' + r[0] + g[0] + b[0]).toUpperCase();\n      return ('#' + r + g + b).toUpperCase();\n    }\n  }\n\n  return '#000';\n}\n\nfunction int2hex(i) {\n  var v = i.toString(16);\n  return v.length === 1 ? '0' + v : v;\n}\n\nfunction getHSL(color) {\n  var rgb;\n  if (isArray(color)) rgb = color;else if (isString(color)) rgb = getRGB(color);else {\n    console.log('no rgb for ', color);\n    return [0, 0, 0];\n  }\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var x = Math.max(r, g, b);\n  var n = Math.min(r, g, b);\n  var l = (x + n) / 2;\n  var s = 0,\n      h = 0;\n\n  if (x === n) {\n    s = 0;\n    h = 0;\n  } else {\n    var d = x - n;\n    if (l > 0.5) s = d / (2 - x - n);else s = d / (x + n);\n    if (x === r) h = (g - b) / d + (g < b ? 6 : 0);\n    if (x === g) h = 2 + (b - r) / d;\n    if (x === b) h = 4 + (r - g) / d;\n    h /= 6;\n    if (h < 0) h += 1;\n  }\n\n  if (rgb.length === 4) return [h, s, l, rgb[3]];else return [h, s, l];\n}\n\nfunction getHue(c) {\n  return getHSL(c)[0];\n}\n\nfunction getSaturation(c) {\n  return getHSL(c)[1];\n}\n\nfunction getLightness(c) {\n  return getHSL(c)[2];\n}\n\nfunction invert(color) {\n  var rgba = getRGB(color);\n\n  for (var i = 0; i < 3; i++) {\n    rgba[i] = 255 - rgba[i];\n  }\n\n  return rgb(rgba);\n}\n\nmodule.exports = {\n  hsl2rgb: hsl2rgb,\n  hslval: hslval,\n  int2hex: int2hex,\n  alpha: alpha,\n  lighten: lighten,\n  darken: darken,\n  saturate: saturate,\n  desaturate: desaturate,\n  shiftHSL: shiftHSL,\n  shiftHue: shiftHue,\n  combine: combine,\n  tint: tint,\n  hue: hue,\n  saturation: saturation,\n  lightness: lightness,\n  hsl: hsl,\n  hsla: hsl,\n  setHSL: setHSL,\n  rgb: rgb,\n  rgba: rgb,\n  setRGB: setRGB,\n  getAlpha: getAlpha,\n  getRGB: getRGB,\n  getRed: getRed,\n  getGreen: getGreen,\n  getBlue: getBlue,\n  getHex: getHex,\n  getHSL: getHSL,\n  getHue: getHue,\n  getSaturation: getSaturation,\n  getLightness: getLightness,\n  invert: invert\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MultipleSpeakersApp from './MultipleSpeakersApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MultipleSpeakersApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}